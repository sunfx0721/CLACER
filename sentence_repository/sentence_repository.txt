{1: ['       if ( ID % ID != = CONST )', ' expected expression before  =  token'], 2: ['}', ' expected declaration or statement at end of input'], 3: ['    ID = ( ID * ID ) - CONST * ID * ID', ' expected  ;  before  printf '], 4: ['\t    if ( ID <= ID <= ID + CONST ) {', '  ID  undeclared '], 5: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 6: ['}', ' expected declaration or statement at end of input'], 7: ['    if ( sqrt ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) = ID ) {', ' lvalue required as left operand of assignment'], 8: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 9: ['\tscanf ( STRING )', ' expected  ;  before  return '], 10: ['    scanf ( STRING , ID )', ' expected  ;  before  scanf '], 11: ['    else if ( ID = < CONST ) {', ' expected expression before  <  token'], 12: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 13: ['scanf ( STRING , * ID ) ;', ' invalid type argument of unary  *  '], 14: ['}', ' expected declaration or statement at end of input'], 15: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 16: [' }', ' expected identifier or  (  before  }  token'], 17: ['\t  for ( ID = CONST ; ID <= CONST ID - CONST ; ID ++ )', ' fixed-point types not supported for this target'], 18: ['    if ( ID == CONST ) {', '  ID  undeclared '], 19: ['    {   if ( ID [ ID ] == ID [ ID ] )', '  ID  undeclared '], 20: ['    printf ( STRING )', ' expected  ;  before  return '], 21: ['\t    ID [ ID ] = ID', ' expected  ;  before  ID '], 22: ['    ID == * ;', ' expected expression before  ;  token'], 23: ['       printf ( STRING / ID ) ;', ' invalid operands to binary / '], 24: ['\tint ID , ;', ' expected identifier or  (  before  ;  token'], 25: ['}', ' expected declaration or statement at end of input'], 26: ['    ID = pow ( ID , CONST ) - CONST ID ;', ' invalid suffix "ac" on integer constant'], 27: ['\telse { printf ( STRING ) ; ) }', ' expected statement before  )  token'], 28: ['    if ( ID + ID = CONST )', ' lvalue required as left operand of assignment'], 29: ['    ID ( ID / CONST , ID [ ID ] [ ID ] ) ;', ' too few arguments to function  ID '], 30: ['    printf ( STRING , ID , ID , ID , ID , ) ;', ' expected expression before  )  token'], 31: ['    for ( ID = CONST ; ID > CONST )', ' expected  ;  before  )  token'], 32: ['              { ID ++ }  ;', ' expected  ;  before  }  token'], 33: ['   ID ( ID = CONST )', ' expected  ;  before  {  token'], 34: ['            printf ( STRING , ID )', ' expected  ;  before  else '], 35: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 36: ['printf ( STRING , ID )', ' expected  ;  before  return '], 37: ['\t        else printf ( STRING , ID ) ;', '  ID  undeclared '], 38: ['            {   printf ( STRING , ) ;', ' expected expression before  )  token'], 39: ['    ID -> ID = ID ;', '  struct DLlist  has no member named  ID '], 40: ['printf ( STRING , ID [ ID ] )  ;  ', '  ID  undeclared '], 41: ['    return ID ;', '  ID  undeclared '], 42: ['    gets ( ID )', ' expected  ;  before  return '], 43: ['    float ID = sqrt ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) )', ' expected  ,  or  ;  before  printf '], 44: ['    if ( ! ID )  printf ( STRING ID ) ;', ' expected  )  before  ID '], 45: ['       int ID = ID ;', ' redeclaration of  ID  with no linkage'], 46: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 47: ['    int ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 48: ['        ID = ID * ID', ' expected  ;  before  }  token'], 49: ['    printf ( STRING )', ' expected  ;  before  return '], 50: ['\tprintf ( STRING )', ' expected  ;  before  return '], 51: ['\tint ID = strlen ( ID ) ;', '  ID  undeclared '], 52: [' scanf ( STRING , ( ID + ID ) ) ;', '  ID  undeclared '], 53: ['       if ( ID [ ID ] == ) {', ' expected expression before  )  token'], 54: ['    } ', ' expected identifier or  (  before  }  token'], 55: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 56: ['}', ' expected declaration or statement at end of input'], 57: ['\tfloat ID = sqrt ( pow ( ID - ID , CONST ) + pow ( ID - ID , CONST ) )', ' expected  ,  or  ;  before  printf '], 58: ['return CONST', ' expected  ;  before  }  token'], 59: ['    float ID = ( ID * ID ) - ( CONST ID ) ;', ' invalid suffix "ac" on integer constant'], 60: ['    while ( ID != . ) {', ' expected expression before  .  token'], 61: ['\tif ( ID ( ID [ ] , ID [ ] , ID , ID ) )', ' expected expression before  ]  token'], 62: ['        } ID ++', ' expected  ;  before  }  token'], 63: ['    printf ( ) ;', ' too few arguments to function  printf '], 64: ['\t   for ( ID = ID ; ID ++ ) ;', ' expected  ;  before  )  token'], 65: ['\t        if ( ID [ ID ] == ID [ ID ] )', ' subscripted value is neither array nor pointer nor vector'], 66: ['        printf ( STRING ) }', ' expected  ;  before  }  token'], 67: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 68: ['       ID [ ID ] = CONST', ' expected  ;  before  if '], 69: ['\tID < ID', ' expected  )  before  printf '], 70: ['\tscanf ( STRING ID ) ;', ' expected  )  before  ID '], 71: ['void ID ( , int ID , int ID , int ID , int ID )', ' expected declaration specifiers or  ...  before  ,  token'], 72: ['                printf ( STRING )', ' expected  ;  before  }  token'], 73: ['    for ( int ID = CONST ; ID <= ( ID / CONST ) ; ID ++ )', '  ID  undeclared '], 74: ['    char ID [ CONST ] , ID [ CONST ] , ID [ ] = STRING ; ID = STRING ; printf ( STRING , STRING ) ;', ' assignment to expression with array type'], 75: ['    ID = CONST', ' expected  ;  before  for '], 76: ['    int ID [ CONST ] = CONST ;', ' invalid initializer'], 77: ['        ID = ID ( ID , ( ID + ID ) ) ;', ' incompatible types when assigning to type  BirthData *  {aka  struct birth_data * } from type  ID  {aka  struct birth_data }'], 78: ['\t    if ( ID ( ID ) = < ID & ID ( ID + CONST ) >= ID )', ' expected expression before  <  token'], 79: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 80: ['    return & ( & ID ) ;', ' lvalue required as unary  &  operand'], 81: ['        break ;', ' break statement not within loop or switch'], 82: [' for ( ID = CONST ; ID < CONST ; ID ++ )', '  ID  undeclared '], 83: ['    ID ( ID , ID , ID , ID [ ] ) ;', ' expected expression before  ]  token'], 84: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 85: ['\t    while ( char ( ID ) != CHARST )', ' expected expression before  CHAR '], 86: ['       break ;', ' break statement not within loop or switch'], 87: ['printf ( STRING , ID )', ' expected  ;  before  return '], 88: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 89: ['            ID [ ID ] = ID ;', '  ID  undeclared '], 90: ['    int ID = ( ID - CONST ) / CONST ;', '  ID  undeclared '], 91: ['    scanf ( STRING , & ID , ) ;', ' expected expression before  )  token'], 92: ['\t    ID = ID + ID [ ID ] ;', '  ID  undeclared '], 93: ['        ID = ID + ID [ CONST ] [ ID ]', ' expected  ;  before  }  token'], 94: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 95: ['            printf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 96: ['       { ID [ ID - ID ] = ID [ ID ] }', ' expected  ;  before  }  token'], 97: ['          printf ( STRING , ID )', ' expected  ;  before  }  token'], 98: ['int ID [ CONST ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 99: ['        printf ( STRING )', ' expected  ;  before  return '], 100: ['}', ' expected declaration or statement at end of input'], 101: ['        ID = CONST ;', '  ID  undeclared '], 102: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 103: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 104: ['printf ( STRING , ID )', ' expected  ;  before  return '], 105: ['       ID ++', ' expected  ;  before  }  token'], 106: ['            printf ( STRING , ID ) ; ) ;                                                                                                                                                                 ', ' expected statement before  )  token'], 107: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 108: ['        if ( ID [ ID ] = ID [ ID ] && ID [ ++ ID ] = ID [ ID ] )', ' lvalue required as left operand of assignment'], 109: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 110: [' if ( ID <= CONST ) { ID = CONST } ;', ' expected  ;  before  }  token'], 111: ['    static ID = CONST ;', ' redeclaration of  ID  with no linkage'], 112: ['    { printf ( STRING , * ) ; }', ' expected expression before  )  token'], 113: ['    for ( int ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 114: ['\t    if ( ID [ ID ] == ID [ ID + CONST )', ' expected  ]  before  )  token'], 115: ['\tprintf ( STRING , sqrt ID ) ;', ' expected  )  before  ID '], 116: ['\tscanf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 117: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 118: ['        if ( ID + ID > ID ) || ( ID + ID > ID ) || ( ID + ID > ID )', ' expected expression before  ||  token'], 119: ['        ID [ ID ] = ( char * ) ( malloc ( sizeof ( char ) ) )', ' expected  ;  before  scanf '], 120: ['   printf ( STRING , ID ( ID , ID , ID , CONST ) ) ;', ' too many arguments to function  ID '], 121: ['\t    for ( ID = CONST ; ID < ID = CONST ; ID ++ ) {', ' lvalue required as left operand of assignment'], 122: ['\tif ( ID == CONST ) { printf ( STRING , ID ( ID , CONST ) ) ; }', ' expected declaration or statement at end of input'], 123: ['\t                   ID = CONST', ' expected  ;  before  }  token'], 124: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 125: ['   if ( ID == CONST )', '  ID  undeclared '], 126: ['        { printf ( STRING , ID [ ID ] ) ; ID [ ID ++ ] = ID [ ID ] ; }', '  ID  undeclared '], 127: ['\tprintf ( STRING , ID ( CONST , ID ) == CONST ? STRING : STRING ) ;', '  ID  undeclared '], 128: ['}', ' expected declaration or statement at end of input'], 129: ['else if ( ( float ) ID = CONST )              ', ' lvalue required as left operand of assignment'], 130: ['    ID = ( struct ID * ) malloc ( ID * sizeof ( ID ) ) ;', '  ID  undeclared '], 131: ['scanf ( STRING , ID ) ;', '  ID  undeclared '], 132: ['ID = ID ^ CONST - CONST * ID * ID ;', ' invalid operands to binary ^ '], 133: ['            if ( ID [ ID ] > ID )', '  ID  undeclared '], 134: ['    else if ( ID = < ID )', ' expected expression before  <  token'], 135: ['    printf ( STRING )', ' expected  ;  before  for '], 136: ['    printf ( STRING )', ' expected  ;  before  return '], 137: ['    ID ( CONST , ID , ID )', ' expected  ;  before  puts '], 138: ['\tprintf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 139: ['int ID ( ID [ CONST ] )', ' unknown type name  ID '], 140: ['    ID ( ID == CONST ) {', ' expected  ;  before  {  token'], 141: ['\tID [ ID ] = CHART', ' expected  ;  before  scanf '], 142: ['\t    else ( ID > CONST )', ' expected  ;  before  {  token'], 143: ['    if ( ID [ CONST ] > )', ' expected expression before  )  token'], 144: ['         if ( ID % ID = CONST )', ' lvalue required as left operand of assignment'], 145: ['          printf ( STRING , ID )', ' expected  ;  before  }  token'], 146: ['    ID % CONST = ! CONST ;', ' lvalue required as left operand of assignment'], 147: ['int main', " expected  = , ',',  ; ,  asm  or  __attribute__  before  {  token"], 148: ['            if ( ( ID ( ID - CONST ) ) <= ID ) && ( ( ID ( ID ) ) > ID )', ' expected identifier before  (  token'], 149: ['    for ( ID = ID ; ID ++ ) {', ' expected  ;  before  )  token'], 150: ['\t    int ID = CONST', ' expected  ,  or  ;  before  while '], 151: ['            ID --', ' expected  ;  before  }  token'], 152: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 153: ['    for ( ID = CONST ; ID < CONST , ID ++ ) ;', ' expected  ;  before  )  token'], 154: ['    scanf ( STRING , & ID , & ID , & ID , & ID & ID ) ;', ' invalid operands to binary & '], 155: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 156: ['\t        if ( ID == ( ID - CONST ) )', '  ID  undeclared '], 157: ['\t      ID [ ID ] = ID [ ( ID + ID - CONST ) / CONST ]  ', ' expected  ;  before  printf '], 158: ['\t    for ( ID = CONST ; ID < CONST ID ; ID ++ ) {', ' invalid suffix "h" on integer constant'], 159: ['    {   printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  printf '], 160: ['\tprintf ( STRING )', ' expected  ;  before  return '], 161: ['    ID = ID ( ID , ID ) ;', '  ID  undeclared '], 162: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 163: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 164: ['          printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 165: ['      ID = ID ( ID , ID ) ;', '  ID  undeclared '], 166: ['        int ID = ID [ ID ] ;', ' redefinition of  ID '], 167: ['            if ( ID [ ID ] >= ID && ID [ ID ] <= CHARST )', '  ID  undeclared '], 168: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 169: ['        for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 170: ['    printf ( STRING * ID , * ID ) ;', ' invalid operands to binary * '], 171: ['\tif ( ID != \\ CONST )', ' stray  \\  in program'], 172: ['\t    if ( ( ID [ ID ] > CHARST ) || ( ID [ ID ] ) < CHARST ) ) {', ' expected statement before  )  token'], 173: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 174: ['   ID = ID', ' expected  ;  before  while '], 175: ['        ID = ID ( ID , & ID [ ID + CONST ] [ CONST ] ) ;', ' incompatible types when assigning to type  ID  {aka  struct birth_data } from type  int '], 176: ['    printf ( STRING , ID + ID , ID [ ID ] ) ;', '  ID  undeclared '], 177: ['\telse ( ID > CONST ) {', ' expected  ;  before  {  token'], 178: ['\t        printf ( STRING , % ID ) ;', ' expected expression before  %  token'], 179: ['float ID = sqrt ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;', ' invalid operands to binary ^ '], 180: ['    for ( int ID = ; ID <= ID ; ID ++ ) {', ' expected expression before  ;  token'], 181: ['       for ( ID = ( ID > CONST ) ? ID [ ID ] + CONST : CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 182: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 183: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 184: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 185: ['\t  printf ( STRING , ID ) ;', '  ID  undeclared '], 186: ['\t    if ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST && ID [ ID + CONST ] = CHARST && ID [ ID + CONST ] <= CHARST && ID [ ID + CONST ] >= CHARST && ID [ ID + CONST ] < CHARST )', ' lvalue required as left operand of assignment'], 187: ['\tID = STRING ;', ' assignment to expression with array type'], 188: ['\t    printf ( STRING , ID [ ID ] + ( ID [ ID ] - CHARST + CONST ) % CONST )', ' expected  ;  before  ID '], 189: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 190: ['        ID [ ID ] = ID', ' expected  ;  before  }  token'], 191: ['    printf ( STRING , ID [ CONST ] [ CONST ] [ CONST ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 192: ['            printf ( STRING ID ) ;', ' expected  )  before  ID '], 193: ['\t    ID = ID', ' expected  ;  before  ID '], 194: ['\tfor ( ; ID != ID ; ID ++ ) {', '  ID  undeclared '], 195: ['        if ( ID [ ID ] >= CHARST && ID [ ID ] = < CHARST ) {', ' expected expression before  <  token'], 196: ['        for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 197: ['            ID = ID + ID [ ID ] [ ID ] ;', '  ID  undeclared '], 198: ['    ID ( ID , ID . ID , ID . ID ) ;', ' too many arguments to function  ID '], 199: ['\t       else ( CHARST <= ID && ID <= CHARST ) { printf ( STRING , ID ) ; }', ' expected  ;  before  {  token'], 200: ['        else', '  else  without a previous  if '], 201: ['  return ID ( ID + CONST , ID , ID )', ' expected  ;  before  }  token'], 202: ['\tscanf ( STRING , & ID )', ' expected  ;  before  while '], 203: ['\tID = ID / CONST = ;', ' expected expression before  ;  token'], 204: ['    }', ' expected identifier or  (  before  }  token'], 205: ['    }', ' expected identifier or  (  before  }  token'], 206: ['    return ID ;', '  ID  undeclared '], 207: ['    ID = char * ( malloc ( ( sizeof ( char ) ) * ID ) ) ;', ' expected expression before  CHAR '], 208: ['\t        if ( ID + ID <= ( ID + CONST ) / CONST || ID - ID >= ( ID + CONST ) / CONST || )', ' expected expression before  )  token'], 209: ['        scanf ( STRING , & ID ) ;', '  ID  undeclared '], 210: ['int ID ( int * * ID [ ] [ int ID ] ) {', ' expected expression before  int '], 211: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 212: ['\t      if ( ( ID >= CHARST && ID <= CHARST && ID % CONST == CONST ) || ( ID >= CHARST && ID <= CHARST && ID % CONST == CONST ) || ( ID >= CHARST && ID <= CHARST && ID % CONST == CONST ) ) { ID = CONST ; break }                    ', ' expected  ;  before  }  token'], 213: ['    ID = CONST ;', ' expected statement before  )  token'], 214: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 215: ['        else', '  else  without a previous  if '], 216: ['}', ' expected declaration or statement at end of input'], 217: ['    if ( ID == ID - CONST ) break ;', ' break statement not within loop or switch'], 218: ['    printf ( STRING ) }', ' expected  ;  before  }  token'], 219: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 220: ['    printf ( STRING )', ' expected  ;  before  return '], 221: ['\t    putchar ( ID [ ID ] ) ;', '  ID  undeclared '], 222: ['printf ( STRING )', ' expected  ;  before  return '], 223: ['float ID = ( ( CONST / CONST ) * ( ID - CONST ) + CONST ) ;', ' redeclaration of  ID  with no linkage'], 224: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 225: ['        ID = ( ( ID [ ID ] % CONST == CONST ) && ( ID [ ID ] % CONST != CONST ) ) ? ID + CONST : ;', ' expected expression before  ;  token'], 226: ['    else ( ID == CONST || ID < CONST )', ' expected  ;  before  {  token'], 227: ['    ID ( ID , ID [ ] ) ;', ' expected expression before  ]  token'], 228: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 229: ['\tint ID = ID [ ID - CONST ] ;', '  ID  undeclared '], 230: ['    ID = ID ( ID )', ' expected  ;  before  printf '], 231: ['\t        printf ( STRING , ID = ID - CONST ) ;', ' assignment to expression with array type'], 232: ['\t        printf ( STRING )', ' expected  ;  before  return '], 233: ['        while ( ( ID [ ID ] = < ID ) && ( ID < ID ) ) {', ' expected expression before  <  token'], 234: ['        ID = CONST', ' expected  ;  before  for '], 235: ['printf ( STRING )', ' expected  ;  before  return '], 236: ['        if ( ID == ID - CONST ) break ;', '  ID  undeclared '], 237: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 238: ['else ( ID == ID )', ' expected  ;  before  printf '], 239: ['            ID ++', ' expected  ;  before  }  token'], 240: ['   for ( ID = CONST ; ID < CONST ; ID ++ ) { printf ( STRING , ID ) ;', '  ID  undeclared '], 241: ['\tscanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 242: ['    for ( int ID = CONST ; int ID <= ID + ID ; ID ++ ) {', ' expected expression before  int '], 243: ['\tprintf ( STRING )', ' expected  ;  before  return '], 244: ['printf ( STRING )', ' expected  ;  before  return '], 245: ['    printf ( STRING , ID ( ID , ID , ID , CONST , CONST ) ? STRING : STRING )                               ', ' expected  ;  before  return '], 246: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 247: ['        ID = return ID ( ID ) ;', ' expected expression before  return '], 248: ['        ID ++ ;', '  ID  undeclared '], 249: ['    for ( ID = CONST , ID <= ( ID - ID ) + CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 250: ['    if ( ( ID / ID ) = ( ID / ID ) ) printf ( STRING ) ;', ' lvalue required as left operand of assignment'], 251: ['  printf ( STRING , ID ) ;', '  ID  undeclared '], 252: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 253: ['        } else if ( ) {', ' expected expression before  )  token'], 254: ['ID = sqrt ( ID * ID + ID * ID ) + ID + ID                       ', ' expected  ;  before  printf '], 255: ['int main ( ) { printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 256: ['int ID ( ID [ ] ) {', ' unknown type name  ID '], 257: ['        scanf ( STRING , & ( * ID = ID [ ID ] ) ) ;', ' lvalue required as unary  &  operand'], 258: ['\t   ID = ID ( ID [ CONST ] , ID [ ID ] )', ' expected  ;  before  }  token'], 259: ['\t        scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 260: ['char ', ' expected identifier or  (  before  return '], 261: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 262: ['    for ( int ID = CONST ; ID < ID ) {', ' expected  ;  before  )  token'], 263: ['        scanf ( STRING )', ' expected  ;  before  }  token'], 264: ['    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 265: ['\tprintf ( CHART STRING ) ;', ' expected  )  before string constant'], 266: ['                printf ( STRING )', ' expected  ;  before  }  token'], 267: ['}', ' expected declaration or statement at end of input'], 268: ['            for ( ID = ID + CONST ; ID < ID + ID ; ID ++ )', '  ID  undeclared '], 269: ['  printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 270: ['}', ' expected  ; , identifier or  (  before  int '], 271: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 272: ['    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 273: ['\t        ID [ ID ] = ( ID [ ID ] , ID [ ID ] + CONST )', ' expected  ;  before  ID '], 274: ['        scanf ( STRING , & ID , ID )', ' expected  ;  before  }  token'], 275: ['    while ( ID = > ID ) {', ' expected expression before  >  token'], 276: ['        } ID', ' expected  ;  before  printf '], 277: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 278: ['    \tif ( char ID [ ID ] == CHARST ) {', ' expected expression before  CHAR '], 279: ['       if ( ID != CONST && ID [ ID - CONST ] < ID [ ID ] )', '  ID  undeclared '], 280: ['printf ( STRING )', ' expected  ;  before  return '], 281: ['\tif ( CONST <= ID && <= CONST ) {', ' expected expression before  <=  token'], 282: ['       if ( ID == CONST || ID = ID ) {', ' lvalue required as left operand of assignment'], 283: ['    while ( ID [ ID ] % CONST == CONST && ID [ ID ] % CONST != = CONST )', ' expected expression before  =  token'], 284: ['ID = ID ;', '  ID  undeclared '], 285: ['    }', ' expected  ; , identifier or  (  before  struct '], 286: ['\tprintf ( STRING )', ' expected  ;  before  }  token'], 287: ['    if ( ID < ID - CONST && ( ( ID + CONST ) != ID || ID != ID ) ID [ ID ] [ ID + CONST ] != CONST ) {', ' expected  )  before  ID '], 288: ['    ID ( ID , ID , ID + CONST , ID )', ' expected  ;  before  else '], 289: ['    ID = ID / CONST', ' expected  ;  before  }  token'], 290: ['    else ( ID == CONST )', ' expected  ;  before  {  token'], 291: ['\tfor ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 292: ['    printf ( STRING , ID ( ID [ ] ) ) ;', ' expected expression before  ]  token'], 293: ['    for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 294: ['    int ID = CONST , ID , ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 295: ['                        printf ( STRING , ID , ID , ID , ID , ID , ID , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 296: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 297: [' int ID  for ( int ID = CONST ; ID < ID ; ID ++ ) {', " expected  = , ',',  ; ,  asm  or  __attribute__  before  for "], 298: [' printf ( STRING , ID ) ;', '  ID  undeclared '], 299: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 300: ['\t}', ' expected declaration or statement at end of input'], 301: ['\treturn ID ;', '  ID  undeclared '], 302: ['        while ( ID >= ID [ ID ] && ID < ID )', '  ID  undeclared '], 303: ['    printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 304: ['    for ( ID = ID , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 305: ['    ID * ID = ID [ ID ] > ID ; ', '  ID  undeclared '], 306: ['    scanf ( STRING & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 307: ['printf ( STRING )', ' expected  ;  before  return '], 308: ['    for ( int ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 309: ['\tID ( ID , ID ) ;', '  ID  undeclared '], 310: ['        ID ++ ;', '  ID  undeclared '], 311: ['        ID ++', ' expected  ;  before  }  token'], 312: ['    ID ( ID )', ' expected  ;  before  return '], 313: ['}', ' expected declaration or statement at end of input'], 314: ['         ID ( ID , ID + CONST , ID - CONST )', ' expected  ;  before  }  token'], 315: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 316: ['    ID = ( int * ) malloc ( CONST * sizeof ( int ) )', ' expected  ;  before  scanf '], 317: ['    printf ( STRING )', ' expected  ;  before  return '], 318: ['\tID = ID + CONST', ' expected  ;  before  scanf '], 319: ['\tfloat ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 320: ['        printf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 321: ['    { scanf ( STRING , & ( ID . ID [ ID ] ) ) } ;', ' expected  ;  before  }  token'], 322: ['    printf ( "                     ', ' missing terminating " character'], 323: ['\tID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 324: ['for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 325: ['\tint ID ;', ' redeclaration of  ID  with no linkage'], 326: ['        ID = ID ( ID )                                                                                                       ', ' expected  ;  before  ID '], 327: ['       printf ( STRING )', ' expected  ;  before  }  token'], 328: ['\t    if ( ID [ ID ] = CHARST || ID [ ID ] = ID )', ' lvalue required as left operand of assignment'], 329: ['    if ( ID == ID - CONST && ID [ ID + CONST ] [ ID ] != CHARST * * ID [ ID - CONST ] [ ID ] != CHARST ) return CONST ;', ' invalid type argument of unary  *  '], 330: ['\tprintf ( STRING ID , ID , ID , ID , sqrt ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) ) ;', ' expected  )  before  ID '], 331: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 332: ['    ID ++', ' expected  ;  before  ID '], 333: ['\t        break', ' expected  ;  before  }  token'], 334: ['    ID ( ID , ID [ ] ) ;   ', ' expected expression before  ]  token'], 335: ['}', ' expected declaration or statement at end of input'], 336: ['    if ( ID [ ID ] == { CHARST , CHARST , CHARST , CHARST , CHARST ; } ) ID ++ ;', ' expected expression before  {  token'], 337: ['  printf ( STRING , ID , )', ' expected expression before  )  token'], 338: ['    float ID = CONST ID ;', ' invalid suffix "f" on integer constant'], 339: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 340: ['\tfloat ID = ID * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 341: ['        while', ' expected  (  before  return '], 342: ['                ID + ID = CHARST ;            ', ' lvalue required as left operand of assignment'], 343: ['\tif ( ID = CONST || ID = CONST || ID = CONST ) {', ' lvalue required as left operand of assignment'], 344: ['\tprintf ( STRING )', ' expected  ;  before  return '], 345: ['        ID [ ID ] = ID', ' expected  ;  before  ID '], 346: ['\t    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 347: ['        ID = ID ( ID , CONST , ID ++ )', ' expected  ;  before  }  token'], 348: ['    float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 349: ['    float ID = CONST', ' expected  ,  or  ;  before  printf '], 350: ['        { for ( ID = CONST ; ID <= ID ; ID += ) ', ' expected expression before  )  token'], 351: ['\twhile ( ID < ID ) { scanf ( STRING , & ID [ ID ] ) ; ID += CONST ; }', '  ID  undeclared '], 352: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 353: [' ID -> ID = ID ;', '  ID  undeclared '], 354: ['    }', ' expected declaration or statement at end of input'], 355: ['       printf ( STRING ) ; break ;', ' break statement not within loop or switch'], 356: ['        * ( ID + ID ) = * ( ID + ID - ID - CONST ) ;', '  ID  undeclared '], 357: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 358: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 359: ['    ID [ ID ]', ' expected  ;  before  }  token'], 360: ['    for ( ID = CONST ; ID < ID ; ID == ) {', ' expected expression before  )  token'], 361: ['    for ( ID = CONST , ; ID [ ID ] [ CONST ] != CHART ; ID ++ )', ' expected expression before  ;  token'], 362: ['\tfor ( ID = CONST ; ID < ID ( ID ) ; ID ++ )', '  ID  undeclared '], 363: ['    free ( ID ) ;', ' expected expression before  ID '], 364: ['}', ' expected identifier or  (  before  }  token'], 365: ['    printf ( STRING )', ' expected  ;  before  return '], 366: ['    ID [ ID + ID ] = ID [ ID + ID - ID ] ;', ' array subscript is not an integer'], 367: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 368: ['                if ( ID > ID ) {', '  ID  undeclared '], 369: ['\tscanf ( STRING , & ID )', ' expected  ;  before  return '], 370: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 371: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 372: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 373: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 374: ['printf (\\ STRING ) ;', ' stray  \\  in program'], 375: ['\telse ( ID == CONST ) {', ' expected  ;  before  {  token'], 376: ['char ID [ ] [ ID ] ;', ' array size missing in  ID '], 377: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 378: ['float ID = CONST * CONST * CONST ) ;', ' expected  ,  or  ;  before  )  token'], 379: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 380: ['`                                      {', ' stray  `  in program'], 381: ['\t            printf ( STRING , , ID ) ;', ' expected expression before  ,  token'], 382: ['\t        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 383: ['    scanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 384: ['    ID = ID , return CONST ;', ' expected expression before  return '], 385: ['    scanf ( STRING , * ID . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 386: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 387: ['    if ( ( ID / ID ) = ( ID / ID ) )                                               ', ' lvalue required as left operand of assignment'], 388: ['    else { switch ( ID ) { case CONST : ID [ CONST ] = CHARST ;', '  ID  undeclared '], 389: ['    ID = int ( ID ) - CONST ;', ' expected expression before  int '], 390: ['    while ( ( ID = getchar ( ) ) != CHART || ID != ID || ID != CHART ) ) {', ' expected statement before  )  token'], 391: ['            if ( ID [ ID ] [ ID ] == CONST )', '  ID  undeclared '], 392: ['    printf ( STRING ) } ;', ' expected  ;  before  }  token'], 393: ['\t    ID = ID + ( ID * pow ( CONST , ID ) )', ' expected  ;  before  }  token'], 394: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 395: ['float  ID = ID * ( CONST + ID / CONST ) ;', '  ID  undeclared '], 396: ['    ID = ( char * ) malloc ( ( ID + CONST ) * sizeof char ) ;', ' expected expression before  CHAR '], 397: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 398: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 399: ['    if ( ( ID <= ID ) && ( ) )                             ', ' expected expression before  )  token'], 400: ['\telse ( ID > ID ) {', ' expected  ;  before  {  token'], 401: ['\tfor ( ID = CONST ; ID < ID && ID != ID ; ID ++ )', '  ID  undeclared '], 402: ['printf ( STRING )', ' expected  ;  before  return '], 403: ['    for ( ID = ( ID - ( ID - CONST ) ) ; ID = ( ID + ID ) )', ' expected  ;  before  )  token'], 404: ['    printf ( STRING )', ' expected  ;  before  return '], 405: ['    ID [ CONST ] = CHARST ;', '  ID  undeclared '], 406: ['\tprintf ( STRING , ID . ) ;', ' expected identifier before  )  token'], 407: ['    ID = ID ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;', ' invalid operands to binary ^ '], 408: ['\t    ID ++', ' expected  ;  before  }  token'], 409: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 410: ['    if ( CHARST <= ID &&  ID <= CHARST )', '  ID  undeclared '], 411: ['}', ' expected declaration or statement at end of input'], 412: ['for ( ID = CONST ; ID <= )', ' expected expression before  )  token'], 413: ['int ID [ CONST ] , ;', ' expected identifier or  (  before  ;  token'], 414: ['}', ' expected  ; , identifier or  (  before  ID '], 415: ['\tprintf ( STRING , ID ID ) ; ', ' expected  )  before  ID '], 416: ['\tID = ID ( ID , ID , ID , ID , ID ) ;', ' assignment to expression with array type'], 417: ['    if ( ID [ ID ] == ID - CONST )', '  ID  undeclared '], 418: ['\t    if ( ( ID [ ID ] >= CHART && ID [ ID ] <= CHAR ) && ( ID [ ID + CONST ] >= CHART && ID [ ID + CONST ] <= CHART ) && )', ' expected expression before  )  token'], 419: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 420: ['\t        else if ( ID + ID = ( CONST * ID + CONST ) / CONST || ID - ID == ( ID + CONST ) / CONST )', ' lvalue required as left operand of assignment'], 421: ['    scanf ( STRING , ID ) ; * /', ' expected expression before  ID  token'], 422: ['    ID = ID * ID - CONST * ID * ID', ' expected  ;  before  printf '], 423: ['\t    ID ++', ' expected  ;  before  }  token'], 424: ['    printf ( "                                 ', ' missing terminating " character'], 425: ['    ID = ( int * ) malloc ( ID * sizeof ( int ) )', ' expected  ;  before  for '], 426: ['        printf ( STRING , ID - CONST , ID ) ;', '  ID  undeclared '], 427: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 428: ['\tID ( ID [ ] ) ;', ' expected expression before  ]  token'], 429: ['\t    ID [ ID + CONST ] = ID ( ID [ ID ] , ID [ ID + CONST ] )', ' expected  ;  before  }  token'], 430: ['\tfor ( ID = CONST ; ID != ID , ID ++ ) {', ' expected  ;  before  )  token'], 431: ['\t    if ( ID [ ID ] != = ID [ ID ] )', ' expected expression before  =  token'], 432: ['    ID ++', ' expected  ;  before  }  token'], 433: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 434: ['\tID = ID', ' expected  ;  before  for '], 435: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 436: ['                    printf ( STRING )', ' expected  ;  before  }  token'], 437: ['    printf ( STRING , int ID ) ;', ' expected expression before  int '], 438: ['\t  { ID = ID % CONST', ' expected  ;  before  if '], 439: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 440: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 441: ['      ID = ( struct ID * ) calloc ( sizeof ( struct ID ) ) ;      ', ' too few arguments to function  calloc '], 442: ['                 ID = ID + CONST', ' expected  ;  before  }  token'], 443: ['\t            ID = ID + CONST', ' expected  ;  before  }  token'], 444: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 445: ['       else {', '  else  without a previous  if '], 446: ['ID = ( float ) ( ( ID * ID ) - ( ID ) - ( ID * ID ) - ( ID * ID ) ) / ( ( ID * ID * ID ) - ( ID * ID * ID ) ) ;                              ', '  ID  undeclared '], 447: ['    for ( ID = CONST ; ID < CONST && ID != = CHART ; ID ++ )', ' expected expression before  =  token'], 448: ['\t    ID = ID + ID [ ID ]    ', ' expected  ;  before  ID '], 449: ['\tID = ( ID - )', ' expected expression before  )  token'], 450: ['     printf ( STRING . ) ;', ' expected identifier before  )  token'], 451: ['     if ( ID [ ID ] == ID [ ID ] && ID = CONST ) {', ' lvalue required as left operand of assignment'], 452: ['\tbreak ;', ' break statement not within loop or switch'], 453: ['        ID = ID * CONST + ID ;', '  ID  undeclared '], 454: ['}', ' expected declaration or statement at end of input'], 455: ['            printf ( STRING )', ' expected  ;  before  scanf '], 456: ['    scanf ( STRING & ID , & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 457: ['    ID ( ID , ID + CONST , ID ) ;', ' too few arguments to function  ID '], 458: ['    else if ( ID % CONST != CONST ) && ( ID % CONST == CONST )', ' expected identifier before  (  token'], 459: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 460: ['\t    printf ( STRING , char ( ID [ ID - CONST ] ) ) ;', ' expected expression before  CHAR '], 461: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 462: [' if ( ID == && ID == ( ID * ( ID - CONST ) ) / CONST )', ' label  ID  used but not defined'], 463: ['\t     if ID ( ID , ID , ID , ID , ID ) == CONST ;', ' expected  (  before  ID '], 464: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 465: ['    int ID = ID - ID ;', ' redeclaration of  ID  with no linkage'], 466: ['    while ( ID != CHART && ID != CHARNST && ID < CONST )', ' empty character constant'], 467: ['\tint ID , ID , ID = ID ;', '  ID  undeclared '], 468: ['    int ID = ID [ CONST ] ;', '  ID  undeclared '], 469: ['  printf ( STRING ID , ID ) ;  ', ' expected  )  before  ID '], 470: ['     printf ( STRING , )', ' expected expression before  )  token'], 471: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 472: ['        return ( ID ( ID ( ID , ID / CONST , ID ) * ( ID ( ID , ID / CONST , ID ) ) ) * ( ID % ID ) ) % ID ;', ' too few arguments to function  ID '], 473: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 474: ['\t        for ( ID = CONST ; ID <= ; ID ++ ) {', ' expected expression before  ;  token'], 475: ['           } printf ( STRING ID + ID ) ;', ' expected  )  before  ID '], 476: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 477: ['\t        if ( ID [ ID ] > ID [ ID ] )', ' expected expression before  int '], 478: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 479: ['               ID ++ }', ' expected  ;  before  }  token'], 480: ['\tfor ( ID = ID - CONST ; ID >= CONST , ID -- ) {', ' expected  ;  before  )  token'], 481: ['}', ' expected declaration or statement at end of input'], 482: ['    ID = ( struct ID * ) malloc ( CONST * sizeof ( struct ID ) )', ' expected  ;  before  scanf '], 483: ['   printf ( STRING , ID ( ID , ID ) ) ;', ' too few arguments to function  ID '], 484: ['            printf ( STRING )', ' expected  ;  before  }  token'], 485: ['    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  scanf '], 486: ['\t    ID = ID % CONST', ' expected  ;  before  ID '], 487: ['\tfor ( ID = CONST ; ID <= CONST , ID ++ )', ' expected  ;  before  )  token'], 488: ['    for ( ID = CONST ; ID < ID - CONST ; ID ++ ) ', '  ID  undeclared '], 489: ['\t    scanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 490: ['printf ( STRING )     ', ' expected  ;  before  return '], 491: ['            printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 492: ['    struct ID ID ;', ' field  ID  has incomplete type'], 493: ['}', ' expected declaration or statement at end of input'], 494: ['     else', ' expected expression before  }  token'], 495: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 496: ['if ( ID == ID == ID || ID = CONST , ID = CONST , ID = CONST ) {', ' lvalue required as left operand of assignment'], 497: ['\tID = ID', ' expected  ;  before  while '], 498: ['            if ( ID [ ID ] [ ID ] == CONST )', '  ID  undeclared '], 499: ['\tprintf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 500: ['    float ID = CONST * ( CONST pow ( CONST ) ) ;', ' expected  )  before  pow '], 501: ['float ID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on integer constant'], 502: ['            scanf ( STRING , ID [ ID ] [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 503: ['    printf ( STRING , ID [ CONST ] [ CONST ] )', ' expected  ;  before  return '], 504: ['                            printf ( STRING , ID , ID , ID , ID , ID , ID [ ID ] [ ID ] , ID [ ID + ID - ID ] [ ID + ID - ID ) ;        ', ' expected  ]  before  )  token'], 505: ['        printf ( STRING , CONST , - CONST , - CONST )', ' expected  ;  before  else '], 506: ['    } ID = ID }', ' expected  ;  before  }  token'], 507: ['\t        for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 508: ['               printf ( STRING , ID )', ' expected  ;  before  }  token'], 509: ['\t   printf ( STRING , ID )', ' expected  ;  before  return '], 510: [' printf ( STRING )', ' expected  ;  before  }  token'], 511: ['\tchar ID [ ] ;', ' array size missing in  ID '], 512: ['    ID = ID ( CONST + ( ID * ID ) / CONST ) ;', ' called object  ID  is not a function or function pointer'], 513: ['else ', '  else  without a previous  if '], 514: ['    ID ( ) ;', ' too few arguments to function  ID '], 515: ['\twhile ( ( ID != ID ) || ( ID != CHART ) || ( ID != CHART ) && ( ID < CONST ) ) {', '  ID  undeclared '], 516: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 517: ['    int ID [ ] [ CONST ] ;', ' array size missing in  ID '], 518: ['               printf ( STRING )', ' expected  ;  before  break '], 519: ['for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 520: ['    for ( ID = ID - ID ; ID <= ID - ; ID ++ ) {', ' expected expression before  ;  token'], 521: ['  ID = ID + CONST ;', '  ID  undeclared '], 522: ['    for ( ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 523: ['            printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 524: ['         else  if ( sqrt ( ( ID - ID ) * ( ID - ID ) - ( ID - ID ) * ( ID - ID ) ) = ID ) { printf ( STRING ) ; }', ' lvalue required as left operand of assignment'], 525: ['    } printf ( STRING , ID )', ' expected  ;  before  return '], 526: ['    ID = ID ;', '  ID  undeclared '], 527: ['    ID = int ID ;', ' expected expression before  int '], 528: ['            return ID ( ID , ID + CONST , ID + CONST , ID , ID ) ;', '  ID  undeclared '], 529: ['    printf ( STRING )', ' expected  ;  before  }  token'], 530: ['\t{   printf ( STRING , ID )', ' expected  ;  before  for '], 531: ['    ID = ID [ CONST ]', ' expected  ;  before  for '], 532: ['int main ( ) { int ID = CONST ;                                                                                                 int ID = CONST ;                                                                                               int ID = CONST ;                                                                                               int ID = ( ID * ID ) - ( CONST * ID * ID ) ;                          ', ' redefinition of  ID '], 533: ['\tif ( ID < ID || )', ' expected expression before  )  token'], 534: ['\t      { if ( ID > ID && ID < )', ' expected expression before  )  token'], 535: ['    float ID = ID ;', '  ID  undeclared '], 536: ['  ID = ID ( CONST + ( ID * ID / CONST ) ) ;                                                                                                ', ' called object  ID  is not a function or function pointer'], 537: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 538: ['\tID = CHARST', ' expected  ;  before  return '], 539: ['    int ID ( ID , CONST , ID - CONST ) ;', ' expected  )  before numeric constant'], 540: [' printf ( STRING , ID + CHART ) ;', '  ID  undeclared '], 541: ['     if ( ID == CONST || ID - ID < CONST )', '  ID  undeclared '], 542: ['\tID = CONST', ' expected  ;  before  for '], 543: ['}', ' expected declaration or statement at end of input'], 544: ['    if ( ID == CONST || ID ) {', '  ID  undeclared '], 545: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 546: ['        if ( ID [ ID ] == CHARNST ) {', ' empty character constant'], 547: ['    } return ID - CONST                                           ', ' expected  ;  before  }  token'], 548: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 549: ['\tID = ID ( ID ) * ID ;', '  ID  undeclared '], 550: ['            ID = CONST', ' expected  ;  before  break '], 551: ['}', ' expected declaration or statement at end of input'], 552: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 553: ['    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 554: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 555: ['     scanf ( STRING , & ID [ CONST ] )', ' expected  ;  before  while '], 556: ['float ID = ID ( ( ( ID - ID ) * ( ID - ID ) ) + ( ( ID - ID ) ) * ( ID - ID ) ) ) ;', ' expected  ,  or  ;  before  )  token'], 557: ['ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 558: ['           printf ( STRING , ID )', ' expected  ;  before  }  token'], 559: ['                if ( ID [ ID ] [ ID ] != CONST || ID [ ID + ID - ID ] [ ID + ID ] != CONST )', '  ID  undeclared '], 560: ['        if ( ID == CONST && ID = CONST )', ' lvalue required as left operand of assignment'], 561: ['if ID > CONST {', ' expected  (  before  ID '], 562: ['\tID ( ID [ CONST ] )', ' expected  ;  before  return '], 563: ['printf ( STRING )', ' expected  ;  before  printf '], 564: ['    printf ( STRING , * ID ) ;', ' invalid type argument of unary  *  '], 565: ['    printf ( STRING , ID + CONST )', ' expected  ;  before  else '], 566: ['        ID = CHARST', ' expected  ;  before  }  token'], 567: ['    if ( ID [ ID ] + ID == ID )', '  ID  undeclared '], 568: ['    int ID [ ] = [ CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST ] ;', ' expected expression before  [  token'], 569: ['    float ID = CONST * ID * ID * ID * ID', ' expected  ,  or  ;  before  printf '], 570: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 571: ['}', ' expected declaration or statement at end of input'], 572: ['            ID [ ID ] = ID', ' expected  ;  before  ID '], 573: ['int main ( ) { char ID [ CONST ] , ID , ID , ID ; int ID , ID = CONST , ID = CONST ;', ' conflicting types for  ID '], 574: ['   printf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  return '], 575: ['\tID = CONST ; ID = CONST ; ID = CONST', ' expected  ;  before  for '], 576: ['# include < stdio.h >', ' expected identifier or  (  before  }  token'], 577: ['        if ( ID [ CONST ] == ID [ ID ] )', '  ID  undeclared '], 578: ['    }', ' expected declaration or statement at end of input'], 579: ['            ID [ ID ] [ ID ] = * ( * ( ID + ID - ID - CONST ) + ID ) ;', ' invalid type argument of unary  *  '], 580: ['}', ' expected  ; , identifier or  (  before  int '], 581: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 582: ['}', ' expected declaration or statement at end of input'], 583: ['        ID = CONST ;', '  ID  undeclared '], 584: ['scanf ( STRING , & ID )', ' expected  ;  before  ID '], 585: ['        printf ( STRING , ID . ID , ID . ID , ID . ID )', ' expected  ;  before  }  token'], 586: ['    scanf ( STRING , & ID , & ID , % ID ) ;', ' expected expression before  %  token'], 587: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 588: ['        ID += CONST', ' expected  ;  before  }  token'], 589: ['    } *                              ', ' expected expression before  return '], 590: ['}', ' expected declaration or statement at end of input'], 591: ['    if ( ID [ ID ] = CONST || ID [ ID ] = ID ) {', ' lvalue required as left operand of assignment'], 592: ['        if ( ID [ ID ] == ID [ ID ] ) { printf ( STRING , ID [ ID ] ) ; ID ++ ; ID ++ }', ' expected  ;  before  }  token'], 593: ['            printf ( STRING )', ' expected  ;  before  }  token'], 594: ['\t       while ( ID [ ID + CONST ] == ID )', '  ID  undeclared '], 595: ['         printf ( STRING ) }', ' expected  ;  before  }  token'], 596: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 597: ['printf ( STRING , ID )', ' expected  ;  before  return '], 598: ['  { scanf ( STRING , & ID , & ID )', ' expected  ;  before  ID '], 599: ['\tID = ID ( ID , ID - ID ) ;', ' too few arguments to function  ID '], 600: ['            break ( ) ;', ' expected  ;  before  (  token'], 601: ['\t    for ( ID = CONST ; ID < ID ; ID = ID + CONST )', '  ID  undeclared '], 602: ['        ID [ ID ] = CHART ;', '  ID  undeclared '], 603: ['   else if ( ID % ID == CONST ) { ID = CONST ; break ; }', '  else  without a previous  if '], 604: ['\tscanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 605: ['   printf ( STRING . ) ;', ' expected identifier before  )  token'], 606: ['     int ID [ ID ] = ID ;', ' variable-sized object may not be initialized'], 607: ['    scanf ( STRING )', ' expected  ;  before  scanf '], 608: ['        if ( ID >= ID ) break ;', ' break statement not within loop or switch'], 609: ['    else', '  else  without a previous  if '], 610: ['    float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 611: ['\tif ( ID ( ID + ID / CONST , ID / CONST , ( ID + CONST ) / CONST ) ) == ( ID ( ID + ( ID / CONST ) * ( ID / CONST ) , ( ID + CONST ) / CONST , ID / CONST ) ) {', ' expected expression before  ==  token'], 612: ['    ID = calloc ( CONST , sizeof ( double ) ) ; ', ' incompatible types when assigning to type  double  from type  void * '], 613: ['}', ' expected declaration or statement at end of input'], 614: ['\tprintf ( STRING , ID )', ' expected  ;  before  printf '], 615: ['}', ' expected declaration or statement at end of input'], 616: ['printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 617: ['               printf ( STRING ) }', ' expected  ;  before  }  token'], 618: ['    else if ( ID % CONST = ! CONST )', ' lvalue required as left operand of assignment'], 619: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 620: ['\tprintf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 621: ['        for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 622: ['        ID = ID + ID ( ID , ID , ID + CONST ) + ID', ' expected  ;  before  }  token'], 623: ['                if ( ID [ ID + ID ] == ID [ ID ] ) {', '  ID  undeclared '], 624: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 625: ['        printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 626: ['    * ID = * ID ;', ' invalid type argument of unary  *  '], 627: ['       ID = ID + pow ( - CONST , ID + ID - CONST ) * ID ( ID ( ID , ID - CONST ) , ID - CONST ) ;', ' too few arguments to function  ID '], 628: ['   if (\tID ( ID ) == CONST )', ' expected expression before  else '], 629: ['}', ' expected  ; , identifier or  (  before  int '], 630: ['    int ID - CONST ;', " expected  = , ',',  ; ,  asm  or  __attribute__  before  -  token"], 631: ['        ID = ID ( ID - CONST , ID , ID + ID [ ID ] ) ;', '  ID  undeclared '], 632: ['\t    ID = ID / ID', ' expected  ;  before  ID '], 633: ['\t           printf ( STRING , ID ( ID ) ) ;', ' invalid use of void expression'], 634: ['}', ' expected declaration or statement at end of input'], 635: ['\t     else ( ID [ ID ] > ID [ ID ] )', ' expected  ;  before  {  token'], 636: ['\tID = ID * ( ID ^ CONST ) ;', ' invalid operands to binary ^ '], 637: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 638: ['    if ( ( ID * ID ) + ( ID * ID ) ++ ( ID * ID ) || ( ID * ID ) + ( ID * ID ) == ( ID * ID ) || ( ID * ID ) + ( ID * ID ) == ( ID * ID ) )', ' lvalue required as increment operand'], 639: ['printf ( STRING ) }', ' expected  ;  before  }  token'], 640: ['    else ', '  else  without a previous  if '], 641: ['        printf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  }  token'], 642: ['    if ( ID [ CONST ] == ( CONST - ( ID % CONST ) ) )', '  ID  undeclared '], 643: ['        if ( ( ID + CONST == ID ) || ( ID == ( ID - CONST - ID ) ) )                                                                  ', '  ID  undeclared '], 644: ['        if ( ID [ ID ] [ ID ] == CONST ) ID ++ ;', '  ID  undeclared '], 645: ['        double ID = CONST * ID * ( ID * ID * ID ) ) ;', ' expected  ,  or  ;  before  )  token'], 646: ['       if ( ID [ * ( ID + ID ) ] == CONST )', ' expected expression before  }  token'], 647: ['  ID =  ID ( ID ) ;', ' called object  ID  is not a function or function pointer'], 648: ['}', ' expected  ; , identifier or  (  before  int '], 649: ['        printf ( STRING , ID , ID )', ' expected  ;  before  if '], 650: ['        if ( ID ( ID [ ID ] , ID [ ID + CONST ] ) = ID [ ID ] ) {', ' lvalue required as left operand of assignment'], 651: ['    if ( ID == CONST ) { ID [ ID + CONST ] = * ( ID - CONST ) }', ' expected  ;  before  }  token'], 652: ['}', ' expected  ; , identifier or  (  before  int '], 653: ['  int * ( ID [ ID ] ) ;', '  ID  undeclared here '], 654: ['       ID += ( ID >= ID ) && ( ID + ID >= ID ) ? CONST : CONST ;', '  ID  undeclared '], 655: ['         for ( ID = ID , ID < ID + ID ; ID ++ ) {                                           ', ' expected  ;  before  )  token'], 656: ['}', ' expected declaration or statement at end of input'], 657: ['\t if ( ID ( ID ) , ID )', ' too few arguments to function  ID '], 658: ['    ID ++', ' expected  ;  before  while '], 659: ['    printf ( STRING )', ' expected  ;  before  ID '], 660: ['                       else', '  else  without a previous  if '], 661: ['\t     ID [ ID ] = ID [ ID - CONST ] + ID [ ID - CONST ]', ' expected  ;  before  }  token'], 662: ['    char ID = CHARST', ' expected  ,  or  ;  before  printf '], 663: ['              scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 664: ['\t    if ( ( ID [ ID [ ID ] ] < ID [ ID [ ID ] + CONST ] && ID [ ID [ ID ] ] > ID [ ID [ ID ] - CONST ] ) && ( ID [ ID ] != CONST && ID [ ID ] != ( ID - CONST ) ) )', '  ID  undeclared '], 665: ['        if ( ID [ ID ] > ID )', '  ID  undeclared '], 666: ['    printf ( STRING )', ' expected  ;  before  }  token'], 667: ['    else if ( ID == CHARST )', '  else  without a previous  if '], 668: ['    float ID = CONST * ID ^ CONST ;', ' invalid operands to binary ^ '], 669: ['    {   printf ( STRING )', ' expected  ;  before  }  token'], 670: ['\telse printf ( STRING )', ' expected  ;  before  return '], 671: ['    for ( int ID = CONST ; ID ++ )', ' expected  ;  before  )  token'], 672: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 673: ['       if ( ID [ ID ] = ID )  printf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 674: ['\t    scanf ( STRING , ID & [ ID ] [ ID ] ) ;                         ', ' expected expression before  [  token'], 675: ['}', ' expected  ; , identifier or  (  before  ID '], 676: ['        ID ( ID + CONST , ID , ID - CONST ) ;', ' too few arguments to function  ID '], 677: ['        ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 678: ['            if ( ( ID -> ID ) > ID ) {', "  ID  {aka  struct node } has no member named  ID  did you mean 'val'?"], 679: ['        ID = * ID ;', ' invalid type argument of unary  *  '], 680: ['}', ' expected declaration or statement at end of input'], 681: [' \tint ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 682: ['    printf ( STRING , ID ( ID ) , ID ) ;', ' too few arguments to function  ID '], 683: ['                ID [ ID ] [ ID ] = CONST + if ( ID [ ID - CONST ] [ ID ] , ID [ ID ] [ ID - CONST ] , ID [ ID - CONST ] [ ID - CONST ] ) ;', ' expected expression before  if '], 684: ['    scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 685: ['    if ( ID = < CONST )', ' expected expression before  <  token'], 686: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 687: [' ID ( CONST )                                                      \t', ' expected  ;  before  return '], 688: ['\telse if', ' expected  (  before  {  token'], 689: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 690: ['    if ( ID <= - CONST )', '  ID  undeclared '], 691: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 692: ['    ID [ CONST ] = CHART', ' expected  ;  before  gets '], 693: ['\t    ID', ' expected  ;  before  }  token'], 694: ['    printf ( STRING , sqrt ( CONST * ID / CONST ) ) ;', '  ID  undeclared '], 695: ['}', ' expected declaration or statement at end of input'], 696: ['ID ( * ID , CONST , ID - CONST ) ;', ' incompatible type for argument 1 of  ID '], 697: ['    ID ( ID ,\\ CONST ) ;', ' stray  \\  in program'], 698: ['}', ' expected declaration or statement at end of input'], 699: ['    if ( ( ID % CONST == CONST ) && ( ID % CONST == CONST ) && ( ID % CONST = CONST ) )', ' lvalue required as left operand of assignment'], 700: ['\tprintf ( STRING STRING , ID ) ;', '  ID  undeclared '], 701: ['    scanf ( STRING , & CONST , & ID , & ID , & ID , & ID ) ;', ' lvalue required as unary  &  operand'], 702: ['printf ( STRING )\t', ' expected  ;  before  return '], 703: ['        if ( ID -> ID . ID == - CONST )', '  curr->next  is a pointer; did you mean to use  -> ?'], 704: ['\t    printf ( STRING ) ; break ; ', ' break statement not within loop or switch'], 705: ['        if ( ID [ ID ] ==  || ID [ ID ] == CHART ) {', ' expected expression before  ||  token'], 706: ['else if ( ID >= CHARST && ID <= CHARST )', '  else  without a previous  if '], 707: ['    printf ( STRING , * ID [ CONST ] ) ;', ' invalid type argument of unary  *  '], 708: ['{  ID = CONST % ID ;', '  ID  undeclared '], 709: ['printf ( STRING )', ' expected  ;  before  return '], 710: ['    else { printf ( STRING , ID , ID ) ; } ;', '  else  without a previous  if '], 711: ['   scanf ( STRING , & ( ID . ID ) ) ;', "  struct m  has no member named  ID '; did you mean 'n'?"], 712: ['            ID ( ID , ID + CONST , ID ) ;                  ', '  ID  undeclared '], 713: ['    if ( ID * ID = ID * ID ) {', ' lvalue required as left operand of assignment'], 714: ['    printf ID ;', ' expected  ;  before  ID '], 715: ['\tID = gets ( ) ;', ' too few arguments to function  gets '], 716: ['\twhile ( ID != . )', ' expected expression before  .  token'], 717: ['\tID [ ID ] = CHART ;', '  ID  undeclared '], 718: ['           if ( ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID ) ) )', ' expected statement before  )  token'], 719: ['\t    else ', '  else  without a previous  if '], 720: ['        ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 721: ['    printf ( STRING , CHARST , CHARST )', ' expected  ;  before  }  token'], 722: ['    ID = ID / CONST', ' expected  ;  before  }  token'], 723: ['}', ' expected declaration or statement at end of input'], 724: ['  } printf ( STRING )\t', ' expected  ;  before  return '], 725: ['if ( ID >= ID && ID = < ID )', ' expected expression before  <  token'], 726: ['}', ' expected  ; , identifier or  (  before  ID '], 727: ['    if ( ID -> ID == ID ) {', '  ID  {aka  struct node } has no member named  ID '], 728: ['\t    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 729: ['\tID = CONST * ID * ID', ' expected  ;  before  printf '], 730: ['     ID ( ID ) ;', ' too few arguments to function  ID '], 731: ['printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 732: ['        ( ID + ID ) = ( char * ) ID ( ID * sizeof ( char ) ) ;', ' lvalue required as left operand of assignment'], 733: ['    for ( ID = ( ( ID * ID ) - CONST ) ; ID >= ( ( ID - CONST ) * ) ; ID = ID - CONST ) {', ' expected expression before  )  token'], 734: ['            ID ++', ' expected  ;  before  }  token'], 735: ['\tif ( ( ID >= ID ) && ID <= ID + CONST ) ) {', ' expected statement before  )  token'], 736: ['    else if ( ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST && ID != CONST && ID != CONST && ID != CONST && ID != CONST & ID != CONST && ID != CONST && ID != CONST && ID != CONST && ID != CONST & ) {', ' expected expression before  )  token'], 737: ['    putchar ( ID [ ID ] )', ' expected  ;  before  }  token'], 738: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 739: ['\t        printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 740: ['    return ( ID ( ID , ID , ID + CONST ) || ID ( ID , ID - ID [ ID ] , ID + CONST ) )', ' expected  ;  before  }  token'], 741: ['printf ( STRING , CONST ) ', ' expected  ;  before  return '], 742: ['ID [ CONST ] = ID ; ID ++ ;', '  ID  undeclared '], 743: ['   scanf ( STRING , & ID , & ID , & ID , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 744: ['              { printf ( STRING ) } ;', ' expected  ;  before  }  token'], 745: ['\tprintf ( STRING )', ' expected  ;  before  return '], 746: ['        if ( ID -> ID != ID )', '  ID  undeclared '], 747: ['    scanf ( STRING , ID )', ' expected  ;  before  for '], 748: ['    int ID = CONST , ID = - CONST , ID = CONST', ' expected  ,  or  ;  before  printf '], 749: ['        else', '  else  without a previous  if '], 750: ['   float ID = CONST ^ CONST ;', ' invalid operands to binary ^ '], 751: ['\tfor ( ID = CONST ; ID < CONST && ID != ID ; ID ++ )                     ', '  ID  undeclared '], 752: ['\t            ID = ID + CONST', ' expected  ;  before  }  token'], 753: ['    for ( ID = CONST , ID = CONST ; ID < ID )', ' expected  ;  before  )  token'], 754: ['\tfor ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 755: ['\tprintf ( STRING , ID , ID STRING , ID STRING , ID STRING , ID ) ;', ' expected  )  before string constant'], 756: ['    ID > CONST || ID = CONST ;', ' lvalue required as left operand of assignment'], 757: ['float ID ;', ' redeclaration of  ID  with no linkage'], 758: ['    printf ( STRING , ( - CONST ) * ( - CONST ) - CONST * CONST * CONST )', ' expected  ;  before  return '], 759: ['    ID = ID', ' expected  ;  before  for '], 760: ['    return CONST ; }', ' expected declaration or statement at end of input'], 761: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 762: ['\t        scanf ( STRING , ( * ( ID + ID ) ) + ID )', ' expected  ;  before  }  token'], 763: ['\t                printf ( STRING )', ' expected  ;  before  }  token'], 764: ['ID [ ID ] = CHART ;', '  ID  undeclared '], 765: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 766: ['\tID = ID + ( ID % CONST ) * ;', ' expected expression before  ;  token'], 767: ['    printf ( STRING )', ' expected  ;  before  ID '], 768: ['            {  printf ( STRING )', ' expected  ;  before  if '], 769: ['     printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 770: ['\tint ID , ID , ID , ID , ID = CONST , ID = CONST , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 771: ['    ID = ID', ' expected  ;  before  for '], 772: ['        printf ( STRING )', ' expected  ;  before  }  token'], 773: ['    ID -> ID = ID ;', "  ID  {aka  struct node } has no member named  ID  did you mean 'val'?"], 774: ['       float ID = ID * * ID ;', '  ID  undeclared '], 775: ['\t        if ( ID + ID = ID - CONST ) {', ' lvalue required as left operand of assignment'], 776: ['\t    if ( ID [ ID ] == ID ) { printf ( STRING ) ; }', '  ID  undeclared '], 777: ['    int ID [ ID ] [ ID ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  scanf "], 778: ['    scanf ( STRING , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 779: ['\t      ID ++', ' expected  ;  before  }  token'], 780: ['        ID = ID [ ID - ID ] ;', ' assignment to expression with array type'], 781: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 782: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 783: ['    } printf ( STRING )', ' expected  ;  before  return '], 784: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 785: ['if ( ID [ ID + CONST ] [ ID ] == CHARST && ID [ ID ] [ ID + CONST ] = CHARST )', ' lvalue required as left operand of assignment'], 786: ['}', ' expected declaration or statement at end of input'], 787: ['        if ( ID % ID != CONST ) ID = CONST', ' expected  ;  before  else '], 788: ['\tprintf', ' expected  ;  before  return '], 789: ['}', ' expected declaration or statement at end of input'], 790: ['\t    for ( ID = ID + CONST ; ID < ID && ID > ID ) {', ' expected  ;  before  )  token'], 791: ['           ID [ ID ] = CHARNST ;', ' empty character constant'], 792: ['}', ' expected  ; , identifier or  (  before  int '], 793: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 794: ['         ID ( ID , CONST , ID ) ;', ' too few arguments to function  ID '], 795: ['   else', '  else  without a previous  if '], 796: ['            for ( int ID = CONST ; ID < ID - CONST - ID )', ' expected  ;  before  )  token'], 797: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 798: ['ID = ID . ID ;', ' request for member  ID  in something not a structure or union'], 799: ['    ID , ( ID * CONST + ID * CONST + ID ) = ID ;', ' lvalue required as left operand of assignment'], 800: ['     ID = ID + ( ( ( ID [ ID ] ) * ( ID [ ID ] ) ( ID [ ID ] ) ) * ( ( ID - ID ) / ID ) ) ;', ' called object is not a function or function pointer'], 801: ['    for ( ID = CONST ; ID >= CONST && ID < ID ) ; {', ' expected  ;  before  )  token'], 802: ['    if ( ID == ID ) && ( ID == ID ) && ( ID == ID ) { printf ( STRING ) ; }', ' expected identifier before  (  token'], 803: ['\t    ID = pow ( ID + ID * ID , CONST )', ' expected  ;  before  else '], 804: ['printf ( STRING )', ' expected  ;  before  return '], 805: ['\t        printf ( STRING , CHARST + ID + ID )', ' expected  ;  before  }  token'], 806: ['scanf ( STRING , & ID , & ID . & ID ) ;', ' expected identifier before  &  token'], 807: ['              ID = CONST', ' expected  ;  before  }  token'], 808: ['    if ( ID = CHARST & ID = CHARST ) {', ' lvalue required as left operand of assignment'], 809: ['        for ( ID = ID - CONST ; ID >= CONST ; ID -- ) {', '  ID  undeclared '], 810: ['    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 811: ['\tprintf ( STRING )', ' expected  ;  before  return '], 812: ['if ID > CONST {', ' expected  (  before  ID '], 813: ['        ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 814: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 815: ['\tfor ( ID = ; ID < ID ; ID ++ ) {', ' expected expression before  ;  token'], 816: ['    printf ( STRING )', ' expected  ;  before  return '], 817: ['         ID [ ID ] = ( ID [ ID ] - ID ) + CONST + ID [ ID ] ;', '  ID  undeclared '], 818: ['* ID = ( ID ) calloc ( CONST , sizeof ( ID ) ) ;', ' conversion to non-scalar type requested'], 819: ['printf ( STRING , ID )', ' expected  ;  before  return '], 820: ['    if ( * ( ID + ID ) >= CONST && <= CONST )', ' expected expression before  <=  token'], 821: ['\t} ID = CONST ;', '  ID  undeclared '], 822: ['      else ( STRING )', ' expected  ;  before  return '], 823: ['}', ' expected declaration or statement at end of input'], 824: ['\telse if ( ) {', ' expected expression before  )  token'], 825: ['            ID ( ID , ID , ID )', ' expected  ;  before  ID '], 826: ['\twhile ( ( ID != CHARNST ) || ( ID != CHART ) || ( ID != CHART ) && ( ID < CONST ) ) {', ' empty character constant'], 827: ['        if ( ID == CONST ) { ID ++ }', ' expected  ;  before  }  token'], 828: ['\t    printf ( STRING )', ' expected  ;  before  for '], 829: ['    ID ID = ( ID ) malloc ( CONST * ID ) ;', ' expected expression before  ID '], 830: ['printf ( STRING , ID , ID . ID ) ;', ' request for member  ID  in something not a structure or union'], 831: ['      printf ( STRING )', ' expected  ;  before  }  token'], 832: [' scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 833: ['    printf ( STRING , ID ( & ID , & ID ) , ID ( & ID , & ID ) )', ' expected  ;  before  if '], 834: ['        if ( ID [ ID ] == ID [ ID ] && )', ' expected expression before  )  token'], 835: ['\tID = ( CONST / CONST ) ID * ID * ID * ID ;', ' expected  ;  before  ID '], 836: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 837: ['printf ( STRING )', ' expected  ;  before  return '], 838: ['\t        else {', '  else  without a previous  if '], 839: ['    int ID = ID / CONST', ' expected  ,  or  ;  before  ID '], 840: ['    for ( ID ( int ID ) ; ID <= ID ; ID = ID + CONST ) {                      ', ' expected expression before  int '], 841: ['ID = CONST', ' expected  ,  or  ;  before  int '], 842: ['        ID -> ID = ID ( ID )', ' expected  ;  before  }  token'], 843: ['}', ' expected declaration or statement at end of input'], 844: ['    ID ( ID , ID ) ;', '  ID  undeclared '], 845: ['    ID ( ID [ CONST ] , ID )', ' expected  ;  before  if '], 846: ['    ID [ ID ] = CHART', ' expected  ;  before  puts '], 847: ['\t    printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 848: ['    for ( ; ID <= CONST ID ; ID ++ )', ' invalid suffix "b" on integer constant'], 849: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 850: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 851: ['}', ' expected declaration or statement at end of input'], 852: ['\t    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 853: ['int ID = ( int ) ID', ' expected  ,  or  ;  before  printf '], 854: ['    ID = ID ( ID , ID ) + CONST ;', ' too few arguments to function  ID '], 855: ['\tprintf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 856: ['    for ( ID = CONST ; )', ' expected expression before  )  token'], 857: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 858: ['    return ID ;', '  ID  undeclared '], 859: ['    else ( ID == ID ) {', ' expected  ;  before  {  token'], 860: ['}', ' expected declaration or statement at end of input'], 861: ['\twhile ( != ID ) {', ' expected expression before  !=  token'], 862: ['\t    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 863: ['        ID ++', ' expected  ;  before  }  token'], 864: ['\tprintf ( STRING , ID ) ;            ', '  ID  undeclared '], 865: ['\tscanf ( STRING * ID [ ID ] ) ;', ' invalid operands to binary * '], 866: ['\t strlen ( ID ) = ID ;', ' lvalue required as left operand of assignment'], 867: ['\tID ( ID , ID , ID )', ' expected  ;  before  return '], 868: ['           if ( ID == ID && ID [ ID ] [ ID ] == ID [ ID + CONST ] ID [ ID + CONST ] )', ' expected  )  before  ID '], 869: [' for ( ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ )', ' stray  \\  in program'], 870: ['    scanf ( STRING , & ID , & , & ID ) ;', ' expected expression before  ,  token'], 871: ['\tint ID = CONST ;', ' redeclaration of  ID  with no linkage'], 872: ['\tprintf ( STRING , ID [ ] [ CONST ] ) ;', ' expected expression before  ]  token'], 873: ['    printf ( STRING , ID ( ID , ID ) ) ;', ' invalid use of void expression'], 874: ['        for ( ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 875: ['            ID = ID + CONST', ' expected  ;  before  }  token'], 876: ['                int ID = ID [ ID - CONST ] ;', ' redefinition of  ID '], 877: ['    if ( ID == CONST )', ' expected  ;  before  if '], 878: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 879: ['    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 880: ['\t    if ( CONST < ID [ ID ] < CONST ) { printf ( STRING ) ; break }', ' expected  ;  before  }  token'], 881: ['    int ID = ID [ CONST ] ;', '  ID  undeclared '], 882: ['for ( ID = CONST ; ID . = CONST ; ID ++ ) {', ' expected identifier before  =  token'], 883: ['\tif )', ' expected  (  before  )  token'], 884: ['ID = ( sqrt ( CONST * ID * ID ) ) / CONST', ' expected  ;  before  printf '], 885: ['\t  } ID ++', ' expected  ;  before  }  token'], 886: ['    ID = ( int * ) calloc ( CONST * ( sizeof ( int ) ) ) ;', ' too few arguments to function  calloc '], 887: ['    ID = CHARST', ' expected  ;  before  return '], 888: ['       gets ( ) ;', ' too few arguments to function  gets '], 889: ['\t    if ( ID [ ID ] =\\ CONST ) {', ' stray  \\  in program'], 890: ['\tchar CONST [ CONST ] = STRING ; ;', ' expected identifier or  (  before numeric constant'], 891: ['printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 892: [' ID ( ID != CONST ) {', ' expected  ;  before  {  token'], 893: ['\tID = ID [ CONST ]', ' expected  ;  before  printf '], 894: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 895: ['    { for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 896: ['        ID *= CONST', ' expected  ;  before  }  token'], 897: ['\twhile ( ID [ ID ] != CHART )', '  ID  undeclared '], 898: ['\tscanf ( STRING , ID )', ' expected  ;  before  return '], 899: ['\tID ( ID [ ID ] , ID , ID [ ID ] ) ;', '  ID  undeclared '], 900: ['                return ( ID ( ID [ ID - CONST ] [ ID - CONST ] ) ) ;', ' too few arguments to function  ID '], 901: ['\t  for ( int ID = CONST ; ID < ; ID ++ ) {', ' expected expression before  ;  token'], 902: ['        if ( ID == CHARST )', ' expected expression before  }  token'], 903: ['    char ID [ CONST ] = { CHARST CHARST CHARST CHARST CHARST } ;', ' expected  }  before  u '], 904: ['    for ( ID = CONST ; ID <= CONST ID - CONST ; ID ++ )', ' invalid suffix "n" on integer constant'], 905: ['        if ( ( CONST <= ID [ ID ] && ID [ ID ] <= CONST ) || ( CONST <= ID [ ID ] && [ ID ] <= CONST ) ) {', ' expected expression before  [  token'], 906: ['\tint ID = ID ( ID , ) ;', ' expected expression before  )  token'], 907: ['        ID [ ID ] = ID', ' expected  ;  before  }  token'], 908: ['\tif ( ID <= CHARST && ID <= CHARST ) { ID = ID + CHARST - CHARST ; printf ( STRING , ID ) ; }', '  ID  undeclared '], 909: ['\tfor ( ID ; )', ' expected expression before  )  token'], 910: ['}', ' expected declaration or statement at end of input'], 911: ['  printf ( STRING )  ', ' expected  ;  before  return '], 912: ['\twhile ( ID ! CONST ) {', ' expected  )  before  !  token'], 913: ['    ( float ) ID = ( CONST / CONST ) * ( ID - CONST ) + CONST ;', ' lvalue required as left operand of assignment'], 914: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 915: ['\tprintf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 916: ['    for ( ID = CONST ; ID ++ ) {              ', ' expected  ;  before  )  token'], 917: ['    ID = ID [ ID - CONST ] + CONST * ID [ ID - CONST ] + CONST * ID [ ID - CONST ] ;', ' expected statement before  )  token'], 918: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 919: ['        if ( ID [ CONST ID ] == ID )', ' array subscript is not an integer'], 920: ['        { ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 921: ['    printf ( STRING , * ID ( ID , ID [ ID ] , CONST , CONST , & ID ) ) ;', ' invalid type argument of unary  *  '], 922: ['        if ( ID % ID != CONST )', '  ID  undeclared '], 923: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 924: ['        ID [ ]', ' expected expression before  ]  token'], 925: ['\tID CONST ;', ' expected  ;  before numeric constant'], 926: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 927: ['scanf ( STRING , & ID & ID & ID & ID ) ;                                                    ', ' invalid operands to binary & '], 928: ['\tscanf ( STRING , ID )', ' expected  ;  before  for '], 929: ['printf ( STRING )', ' expected  ;  before  return '], 930: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 931: ['\tprintf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 932: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 933: ['    scanf ( STRING , & ID )', ' expected  ;  before  {  token'], 934: ['\tID ( ID [ ] [ ID ] , ID [ ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 935: ['    for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 936: ['        scanf ( STRING , & ID [ ID ] )                             ', ' expected  ;  before  }  token'], 937: ['    } * /', ' expected expression before  ID  token'], 938: ['printf ( STRING , ID )', ' expected  ;  before  return '], 939: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 940: ['\t    ID [ ID + CONST ] = ID', ' expected  ;  before  }  token'], 941: ['                ID [ ID + ID ] = ID [ ID ] ;', '  ID  undeclared '], 942: ['        case CONST : printf ( STRING ) break ;', ' expected  ;  before  break '], 943: ['      if ( ID % ID == CONST )', '  ID  undeclared '], 944: [' ID = ID ( ID , ID , ID ) ;', ' void value not ignored as it ought to be'], 945: ['\tprintf ( STRING , & ( ID - CONST ) ) ;', ' lvalue required as unary  &  operand'], 946: ['    for ( ID = CONST ; ID < CONST ; ID ++ )', ' expected expression before  }  token'], 947: ['\t        if ( ID + ID <= ( ID + CONST ) / CONST || ID - ID >= ( ID + CONST ) / CONST || )', ' expected expression before  )  token'], 948: ['\t    scanf ( STRING , % * ( ID + ID ) ) ;', ' expected expression before  %  token'], 949: ['\t{   printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 950: ['    ID [ CONST ] = CONST', ' expected  ;  before  ID '], 951: ['    printf ( STRING + STRING ) ;', ' invalid operands to binary + '], 952: ['    ID = ID ( ID , ID ++ ) ;', ' too many arguments to function  ID '], 953: ['    * ID = ( * ID -> ID ) ;', '  *tail  is a pointer; did you mean to use  -> ?'], 954: ['printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 955: ['  scanf ( STRING , & ID , & ID , & ) ;', ' expected expression before  )  token'], 956: ['printf ( STRING )', ' expected  ;  before  return '], 957: ['    ID ( ID , ID , CONST )', ' expected  ;  before  return '], 958: ['printf ( STRING , ID [ CONST ] )            ', ' expected  ;  before  return '], 959: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 960: ['    return CONST', ' expected  ;  before  }  token'], 961: ['printf ( STRING , ID , ID , ID ( ID , ID , ID , ID , ID ) ID ( ID , ID , ID , ID , ID ) ) ;', ' expected  )  before  ID '], 962: ['\tID [ CONST ] = CONST', ' expected  ;  before  ID '], 963: ['    ID ( ID , CONST , CONST )', ' expected  ;  before  ID '], 964: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 965: ['    return ID ( ID [ ] , ID , ID + CONST ) ;', ' expected expression before  ]  token'], 966: ['            ( int ) * ID = ( int ) * ID + ( ( int ) * ( ID - CONST ) ) * ID ( CONST , ID ) ;', ' lvalue required as left operand of assignment'], 967: ['for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 968: ['            ID ++', ' expected  ;  before  }  token'], 969: ['    int ID = ( ( ID * ID ) - ( CONST ( ID ) * ID ) ) ;', ' called object is not a function or function pointer'], 970: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 971: ['    else ( ID = ID ) {', ' expected  ;  before  {  token'], 972: [' ID               ', ' expected  ;  before  ID '], 973: ['      break ;', ' break statement not within loop or switch'], 974: ['}', ' expected declaration or statement at end of input'], 975: ['\tint ID , ID ;', '  ID  redeclared as different kind of symbol'], 976: ['    printf ( STRING , ID [ ID - CONST ] . ID , ID [ ID - CONST ] . ID , ID [ ID - CONST ] , ID ) ;   ', '  ID  undeclared '], 977: ['\tID = sqrt ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) ( ID - ID ) ) ;', ' called object is not a function or function pointer'], 978: ['\telse ( ID > CONST ) {', ' expected  ;  before  {  token'], 979: ['}', ' expected declaration or statement at end of input'], 980: ['if ( ID = CONST || ID = CONST ) return CONST ;', ' lvalue required as left operand of assignment'], 981: ['     if ( ID % ID == ID )', '  ID  undeclared '], 982: ['     ID ID = ( struct ID ) malloc ( sizeof ( ID ) ) ;', ' conversion to non-scalar type requested'], 983: ['\t        if ( ( ( ID [ CONST ] ) < CHARST ) && ( ID [ CONST ] ) > CHARST ) )', ' expected statement before  )  token'], 984: ['}', ' expected declaration or statement at end of input'], 985: ['    ID [ ID ] = CHART ;', '  ID  undeclared '], 986: ['\tprintf ( STRING , ( ID , ID ) STRING ( ID , ID ) ) ;', ' expected  )  before string constant'], 987: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 988: ['                ID = CONST', ' expected  ;  before  }  token'], 989: ['float ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 990: ['    else', '  else  without a previous  if '], 991: ['    scanf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 992: ['\tprintf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  return '], 993: ['        putchar ( ) ;', ' too few arguments to function  putchar '], 994: ['            if ( ID [ ID ] == ID [ ID ] )', ' expected expression before  }  token'], 995: ['            printf ( STRING , ID [ ID - ID ] ) ;', '  ID  undeclared '], 996: ['\tif ( ( ID * ID ) = + ( ID * ID ) )', ' lvalue required as left operand of assignment'], 997: ['    printf ( STRING , ID ( ID , ) ) ;', ' expected expression before  )  token'], 998: ['\tprintf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 999: ['    ID = ID [ ID ] ;', ' assignment to expression with array type'], 1000: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 1001: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 1002: ['        ID = ID + ID', ' expected  ;  before  }  token'], 1003: ['\tprintf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 1004: ['}', ' expected  ; , identifier or  (  before  int '], 1005: ['\t    if ( ID [ ID ] != = CHARST && ID [ ID + CONST ] == CHARST )', ' expected expression before  =  token'], 1006: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 1007: ['       ID = ID + CONST', ' expected  ;  before  }  token'], 1008: ['        {   ID = CONST * ( ID / CONST + CONST ) + CONST - CONST', ' expected  ;  before  }  token'], 1009: ['\t                printf ( STRING , ID )', ' expected  ;  before  }  token'], 1010: ['\t    for ( ID = ID - ID + CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 1011: ['scanf ( STRING , & ( ID . ID ) , & ( ID . ID ) , & ID ) ;    ', '  ID  undeclared '], 1012: ['\tfor ( ID = CONST ; ID < CONST ; ID ++ ) {', '  ID  undeclared '], 1013: ['\tprintf ( STRING , ID * ID * ID )', ' expected  ;  before  return '], 1014: ['        printf ( STRING )', ' expected  ;  before  }  token'], 1015: ['    ID [ CONST ] = CHARST', ' expected  ;  before  ID '], 1016: ['                printf ( STRING , ID [ ID - CONST - ID ] )', ' expected  ;  before  }  token'], 1017: ['}', ' expected declaration or statement at end of input'], 1018: ['       for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 1019: ['    printf ( STRING . ) ; ', ' expected identifier before  )  token'], 1020: ['\t           else ', '  else  without a previous  if '], 1021: ['    if ( ID -> ID == ID ) break ;', ' break statement not within loop or switch'], 1022: ['}', ' expected declaration or statement at end of input'], 1023: [' printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 1024: ['    if ( int ID [ ID ] > ID [ ID ] ) {', ' expected expression before  int '], 1025: ['        {   ID ( ID + CONST , ID , CONST )', ' expected  ;  before  ID '], 1026: ['\t    for ( ID <= ID ; ID = ID + CONST ) {', ' expected  ;  before  )  token'], 1027: ['            ID = ( ID )', ' expected  ;  before  }  token'], 1028: ['    return ( ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST ) + ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST ) + ( ID == CHARST || ID == CHARST || ID == CHARST ID == CHARST || ID == CHARST ) ) ;', ' expected  )  before  ID '], 1029: ['    printf ( STRING , ID , ID , ) ;', ' expected expression before  )  token'], 1030: ['    for ( ID = ID ; ID <= CONST ; ID ++ )', '  ID  undeclared '], 1031: ['   int ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 1032: ['                  printf ( STRING ) }', ' expected  ;  before  }  token'], 1033: ['   printf ( STRING , CONST )', ' expected  ;  before  return '], 1034: ['    ID ( ID , CONST , ID - CONST , CONST ) ;', ' too many arguments to function  ID '], 1035: ['   \tif ( ID = ID ) printf ( STRING , ID [ ID - CONST ] ) ;', ' assignment to expression with array type'], 1036: ['\tscanf ( STRING , ID )', ' expected  ;  before  return '], 1037: ['    printf ( STRING , ( , CONST ) ID ) ;', ' expected expression before  ,  token'], 1038: ['\t        if ( ID <= ID && ID < ID - ID )', '  ID  undeclared '], 1039: ['\t        if ( ID = CONST || ID = ID - CONST || ID == CONST || ID == ID - CONST ) {', ' lvalue required as left operand of assignment'], 1040: ['\t    else {', '  else  without a previous  if '], 1041: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 1042: ['    printf ( ) ;', ' too few arguments to function  printf '], 1043: ['    if ( ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) = ( ID * ID ) ) {', ' lvalue required as left operand of assignment'], 1044: ['    continue', ' expected  ;  before  printf '], 1045: ['\t        printf ( STRING )', ' expected  ;  before  else '], 1046: ['        if ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST ) ) {', ' expected statement before  )  token'], 1047: ['int ID , ID ;', ' redeclaration of  ID  with no linkage'], 1048: ['           if ( ID != = CONST )', ' expected expression before  =  token'], 1049: ['int ID ( , int ID , int ID , int ID , int ID , int ID [ ID ] [ ID ] )', ' expected declaration specifiers or  ...  before  ,  token'], 1050: ['}', ' expected declaration or statement at end of input'], 1051: ['          ID = ID + CONST', ' expected  ;  before  }  token'], 1052: ['            ID = ( ID + ID ) / CONST', ' expected  ;  before  }  token'], 1053: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 1054: ['    while ( ID !=\\ ID ) {', ' stray  \\  in program'], 1055: ['\tfor ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 1056: ['void ID ( char [ ] char [ ] ) ;', " expected  ; , ',' or  )  before  CHAR "], 1057: ['    ID ( ID , ID , CONST , ID ) ;', ' too many arguments to function  ID '], 1058: ['    while ( ID [ ID ] != CHART )', '  ID  undeclared '], 1059: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 1060: ['    else {', '  else  without a previous  if '], 1061: ['    if ( ID >= CONST | && ID >= CONST ) {', ' label  ID  used but not defined'], 1062: ['        ID = ID + * ( ID + ID - ID ) * pow ( CONST , ID )', ' expected  ;  before  }  token'], 1063: ['                case CONST : printf ( STRING ) break ;', ' expected  ;  before  break '], 1064: ['    printf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 1065: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 1066: ['\tfor ( ID = CONST ; ID ++ )', ' expected  ;  before  )  token'], 1067: ['    scanf ( STRING , & ID , & ID )', ' expected  ;  before  while '], 1068: ['    printf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 1069: ['        printf ( STRING , ( ID . ID ) -> ID ) ;', ' request for member  ID  in something not a structure or union'], 1070: ['    return CONST', ' expected  ;  before  }  token'], 1071: ['\t  printf ( STRING , CONST ID ) ;', ' invalid suffix "x" on integer constant'], 1072: ['        ID = ( ID + ID - CONST ) % CONST', ' expected  ;  before  printf '], 1073: ['\t    ID [ ID ] = ID [ ID ]                                           ', ' expected  ;  before  }  token'], 1074: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 1075: ['\tprintf ( STRING )', ' expected  ;  before  else '], 1076: ['}', ' expected declaration or statement at end of input'], 1077: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 1078: ['          return ID ( ID , ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 1079: ['    }', ' expected declaration or statement at end of input'], 1080: ['        printf ( STRING ( ID + CONST ) , ID , ID ) ;                              ', ' called object is not a function or function pointer'], 1081: ['                ID [ ID ] = ID ( ( CONST + ID [ ID ] ) , CONST ) ;', '  ID  undeclared '], 1082: ['    int ID = ID', ' expected  ,  or  ;  before  int '], 1083: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 1084: ['\t{ break ; }', ' break statement not within loop or switch'], 1085: ['    ID ( ID , ID , ID , ID ) ;', '  ID  undeclared '], 1086: ['          ID ++', ' expected  ;  before  }  token'], 1087: ['\tfor ( ID = CONST ; ID ( ID ) <= ID ; ID ++ ) {', '  ID  undeclared '], 1088: ['        printf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 1089: ['\tint [ ID ] ;', ' expected identifier or  (  before  [  token'], 1090: ['\tID = ( CONST % CONST ) * ( ID - CONST ) + CONST ;', ' invalid operands to binary % '], 1091: ['    for ( ID = CONST ; ; )', ' expected expression before  }  token'], 1092: ['    int ID [ CONST ] , ID , ID , ID , ID [ CONST ] = CONST , ID = CONST ;', ' invalid initializer'], 1093: ['            printf ( STRING , ID )', ' expected  ;  before  for '], 1094: ['    float ID = ID ( ( ( ID - ID ) * ( ID - ID ) ) + ( ( ID - ID ) * ( ID - ID ) ) )', ' expected  ,  or  ;  before  printf '], 1095: ['}', ' expected declaration or statement at end of input'], 1096: ['}  ', ' expected identifier or  (  before  }  token'], 1097: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 1098: ['    int ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 1099: ['        ID = ID / CONST', ' expected  ;  before  }  token'], 1100: ['        for ( ID = ID - CONST , ID > CONST ; -- ID ) {', ' expected  ;  before  )  token'], 1101: ['        ID = ID ( ID , ID ( ID ) ) ;', ' called object  ID  is not a function or function pointer'], 1102: ['    if ( ID <= CONST ) || ( ID > CONST ) return ;', ' expected expression before  ||  token'], 1103: ['    ID = ID', ' expected  ;  before  else '], 1104: ['                    ID ++', ' expected  ;  before  }  token'], 1105: ['        ID = CONST', ' expected  ;  before  for '], 1106: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 1107: ['\tscanf ( STRING , & ID , & ID )', ' expected  ;  before  ID '], 1108: ['       return ID ( ID [ ] , ID - CONST ) ;', ' expected expression before  ]  token'], 1109: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 1110: ['\tID [ ID ] = CHART', ' expected  ;  before  printf '], 1111: ['            { ID [ ID ] = ID [ ID ] + ID [ ID ]', ' expected  ;  before  ID '], 1112: ['    if ( ID == ID * ID ) printf ( STRING , ID )', ' expected  ;  before  else '], 1113: ['        ID % CONST = ID ;', ' lvalue required as left operand of assignment'], 1114: ['        printf ( STRING ID ( ID [ ID ] [ CONST ] , ID [ ID ] [ CONST ] ) ) ;', ' expected  )  before  ID '], 1115: ['    ID ( CONST , CONST * ID , CONST )', ' expected  ;  before  return '], 1116: ['    ID = CONST * ID + ID % CONST ;                                                 ', '  ID  undeclared '], 1117: ['scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 1118: ['\t        ID [ ID ] = ID [ ID ]    ', ' expected  ;  before  }  token'], 1119: ['   * ID ( ID ) = CHART ;', ' called object  ID  is not a function or function pointer'], 1120: ['    char ID [ CONST ] ; int ID = CONST ;', '  ID  redeclared as different kind of symbol'], 1121: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 1122: ['    CHARST = CHARST + CONST ;', ' lvalue required as left operand of assignment'], 1123: ['    printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 1124: ['     printf ( STRING , ID [ ID ] )   ', ' expected  ;  before  }  token'], 1125: ['\t    ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 1126: ['              for ( ID = ID ; ID < ID - ID + ; ID ++ )', ' expected expression before  ;  token'], 1127: ['        int ID = char CHARST', ' expected expression before  CHAR '], 1128: ['    ID = sqrt ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) ;', '  ID  undeclared '], 1129: ['     ID = ID + ID', ' expected  ;  before  ID '], 1130: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 1131: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 1132: ['    ID ( ID [ ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 1133: ['    ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 1134: ['            printf ( STRING , ID + CHARST - CHARST )', ' expected  ;  before  }  token'], 1135: ['    int ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 1136: ['\tID ( ID , ID , ID )', ' expected  ;  before  return '], 1137: ['\twhile ( char ID [ ID ] != STRING ) {', ' expected expression before  CHAR '], 1138: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 1139: ['      if ( ( ID [ ID ] == CHARNST ) || ( ID [ ID ] == CHART ) )', ' empty character constant'], 1140: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 1141: ['       ID = ID - CONST', ' expected  ;  before  }  token'], 1142: ['    else ( ID == CONST )', ' expected  ;  before  printf '], 1143: ['    while ( ID < ID )', '  ID  undeclared '], 1144: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 1145: ['\t} printf ( STRING )', ' expected  ;  before  return '], 1146: ['                        printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 1147: ['}', ' expected declaration or statement at end of input'], 1148: ['    if ( ( ID == ID ) || ( ID - ID == CONST ) ) return CONST', ' expected  ;  before  else '], 1149: ['else if ( ID / ID ) == ( ID / ID ) {', ' expected expression before  ==  token'], 1150: ['\tprintf ( STRING , CHARST )', ' expected  ;  before  return '], 1151: ['\tscanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 1152: ['    for ( int ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 1153: ['    ID = ( struct ID * ) malloc ( ID * sizeof ( ID ) ) ;', '  ID  undeclared '], 1154: ['}', ' expected  ; , identifier or  (  before  float '], 1155: ['        ID += ID [ ID ]', ' expected  ;  before  }  token'], 1156: ['     if ( ID == ID ) { ID ; }', '  ID  undeclared '], 1157: ['        ID = ID + ID [ ID ] [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 1158: ['ID ID * ID ;', ' expected identifier or  (  before  }  token'], 1159: ['\t                printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 1160: ['    if ( ( ID * ID ) = ( ID * ID ) ) {', ' lvalue required as left operand of assignment'], 1161: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 1162: ['\tint * ID = ( int * ) calloc ( ID , int ) ;', ' expected expression before  int '], 1163: ['\tint ID , ID , ID , ID , ID = ID ;', '  ID  undeclared '], 1164: ['            if ( ID [ CONST ] == ( CONST - ( ID % CONST ) ) )', '  ID  undeclared '], 1165: ['    if ( ID == CONST ( ( ID % CONST ) + CONST ) ) return ;', ' called object is not a function or function pointer'], 1166: ['    printf ( STRING CHARST ) ;', ' expected  )  before  ! '], 1167: ['            if ( ( ID [ ID + CONST ] ) >= ( ( ID [ ID + CONST ] ) - CHARST + CHARST ) ) && ( ( ID [ ID + CONST ] ) <= ( ( ID [ ID + CONST ] ) - CHARST + CHARST ) )', ' expected identifier before  (  token'], 1168: ['        printf ( STRING )', ' expected  ;  before  }  token'], 1169: ['scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 1170: ['             else ( ID == ID - CONST && ID == ID - CONST && ID [ ID ] [ ID ] != CONST ) {', ' expected  ;  before  {  token'], 1171: ['    for ( ID = CONST ; ID <= CONST , ID ++ ) {', ' expected  ;  before  )  token'], 1172: ['  scanf ( STRING , ID )', ' expected  ;  before  for '], 1173: ['    if ( ( ID = CONST && CONST <= ID [ ID ] <= CONST ) && ( CHARST <= ID [ ID + CONST ] <= CHARST ) && ID [ ID + CONST ] = ID [ ID + CONST ] + CONST ) {', ' lvalue required as left operand of assignment'], 1174: ['\tfloat ID = ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ;', ' invalid operands to binary ^ '], 1175: ['printf ( STRING , ID )', ' expected  ;  before  for '], 1176: ['      printf ( STRING ) :', ' expected  ;  before  :  token'], 1177: ['    printf ( STRING , ID + CONST ) ;', '  ID  undeclared '], 1178: ['ID ( STRING )', ' expected  ;  before  return '], 1179: ['printf ( STRING , ID ^ CONST - CONST * ID * ID )', ' expected  ;  before  return '], 1180: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 1181: ['return ID ( ID ) ;', ' called object  ID  is not a function or function pointer'], 1182: ['\tprintf ( STRING , ID )', ' expected  ;  before  printf '], 1183: ['\tif ( ID [ ID ] == CHARST )', '  ID  undeclared '], 1184: ['\t( ID >= ID && ID <= ID + CONST ) || ( ID >= ID && ID       <= ID + CONST )', ' expected  ;  before  ID '], 1185: ['    while ( ( ID != CHART ) && ( ID < ID - CONST ) )', '  ID  undeclared '], 1186: ['     if ( ID == CONST && ID == CONST )', '  ID  undeclared '], 1187: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 1188: ['    printf ( STRING )', ' expected  ;  before  }  token'], 1189: ['    if ( ID [ ID - CONST ] > ID [ ID - CONST ] )', '  ID  undeclared '], 1190: ['     ID = CONST ;', '  ID  undeclared '], 1191: ['    ID = ID * ID', ' expected  ;  before  return '], 1192: ['    printf ( STRING , ID ( CONST + ( ID * ID / CONST ) ) , ID , ID ) ;', ' called object  ID  is not a function or function pointer'], 1193: ['    int ID , ID , ID ; int ID = CONST ; int ID = ID ;', '  ID  undeclared '], 1194: ['    ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 1195: ['    else printf ( STRING )', ' expected  ;  before  return '], 1196: ['}', ' expected declaration or statement at end of input'], 1197: ['}', ' expected declaration or statement at end of input'], 1198: ['                    ID = ID', ' expected  ;  before  }  token'], 1199: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 1200: ['    CHART', ' expected  ;  before  return '], 1201: ['    printf ( STRING )', ' expected  ;  before  return '], 1202: ['                while ( ID [ ID ++ ] [ ID ++ ] == CONST && ID < ID && ID < ID )', '  ID  undeclared '], 1203: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1204: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 1205: ['\twhile ( ID < ( CONST ID ) )', ' invalid suffix "n" on integer constant'], 1206: ['    ID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 1207: ['\tfloat ID = CONST * ID ( ID * ID - ID * ID ) ;', ' called object  ID  is not a function or function pointer'], 1208: [' if ( ID [ ID ] = CONST && ID [ ID ] = CONST && ID [ ID ] = CONST && ID [ ID ] = CONST )', ' lvalue required as left operand of assignment'], 1209: ['\tprintf ( STRING ) ; break', ' expected  ;  before  printf '], 1210: ['    else { return CONST }', ' expected  ;  before  }  token'], 1211: ['    else ( ID <= CONST ) {', ' expected  ;  before  {  token'], 1212: ['     char ID = ;', ' expected expression before  ;  token'], 1213: ['printf ( STRING )', ' expected  ;  before  for '], 1214: ['\tif ( ID = ID && ID = ID ) {', ' lvalue required as left operand of assignment'], 1215: ['    ID ( ID , ID , CONST , CONST , ID )', ' expected  ;  before  return '], 1216: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 1217: ['        ID -> ID = ID ;', '  ID  undeclared '], 1218: ['  printf ( STRING , ID ) ;', '  ID  undeclared '], 1219: ['        ID . ID = ID ;', ' expected identifier or  (  before  .  token'], 1220: ['\t      printf ( STRING )', ' expected  ;  before  }  token'], 1221: ['float ID = sqrt ( ( ID - ID ) * ( ID - ID ) = ( ID - ID ) * ( ID - ID ) ) ;', ' lvalue required as left operand of assignment'], 1222: ['    if ( ID == CONST ) return ;', '  ID  undeclared '], 1223: ['\tprintf ( STRING , pow ( ID ) ( CONST ) ) ;', ' too few arguments to function  pow '], 1224: ['\twhile ( ID [ ID ] != CHAR )', '  ID  undeclared '], 1225: ['\tscanf ( STRING , ID )', ' expected  ;  before  }  token'], 1226: ['    ID = CONST ;', '  ID  undeclared '], 1227: ['    ID ( ID , ID - CONST , ID )', ' expected  ;  before  return '], 1228: ['    while ( )', ' expected expression before  )  token'], 1229: ['    int ID = ;', ' expected expression before  ;  token'], 1230: ['\tID', ' expected  ;  before  return '], 1231: ['\t            break', ' expected  ;  before  }  token'], 1232: ['}', ' expected  ; , identifier or  (  before  int '], 1233: ['\t          ID = ID + ( ( pow ( ( ID + ( ID * ID ) ) ) , CONST ) * ID ) ;', ' too few arguments to function  pow '], 1234: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 1235: ['\tprintf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 1236: ['\t* ( ID + ID ) == CONST', ' expected  ;  before  ID '], 1237: ['    if ( ID % CONST == CONST && ID % ID != CONST )', '  ID  undeclared '], 1238: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 1239: ['\twhile ( ID = != ID ) ', ' expected expression before  !=  token'], 1240: ['    int ID = ID ( ID ) ;', ' redeclaration of  ID  with no linkage'], 1241: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 1242: ['\t    if ( ID [ ID ] != CHART && ID [ ID ] = CHARST )', ' lvalue required as left operand of assignment'], 1243: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1244: ['        int ID = ID ( )', ' expected  ,  or  ;  before  if '], 1245: ['    printf ( STRING , ID [ CONST ] ) ;                        ', '  ID  undeclared '], 1246: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 1247: ['    for ( ID = CONST ; ID >= ( CONST * ) ; ID = ID - CONST ) {', ' expected expression before  )  token'], 1248: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 1249: ['printf ( STRING , ( ID + ID ) - ( ID ( ID ,  ID ,  ID ,  ID ) ) )', ' expected  ;  before  return '], 1250: ['    return CONST', ' expected  ;  before  }  token'], 1251: ['    int ID = CONST + int ( CHARST ) ;', ' expected expression before  int '], 1252: ['\t    else if ( ID > CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 1253: ['}', ' expected declaration or statement at end of input'], 1254: ['\tprintf ( % CONST , ID ) ;                     ', ' expected expression before  %  token'], 1255: ['    int ID = ( ( ( ( ID * ID * ID ) + ( CONST * ID * ID ) + ( CONST * ID ) ) / CONST ) - ID ) ; .                                                                                                                                                                                                                      ', ' expected expression before  .  token'], 1256: ['\t        int ID [ ID ] = CONST ;', ' variable-sized object may not be initialized'], 1257: ['\t    ID = ID - ID', ' expected  ;  before  {  token'], 1258: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 1259: ['    else if ( ID == CHARST )', '  else  without a previous  if '], 1260: ['void ID ( int ID [ ] , ID ID , int ID , int ID ) {', ' unknown type name  ID ; did you mean  int ?'], 1261: ['     printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 1262: ['    float CONST ;', ' expected identifier or  (  before numeric constant'], 1263: ['printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 1264: ['    if ( ( ID [ CONST ] >= CHARST && ID [ CONST ] <= CHARST ) ( ID [ CONST ] >= CHARST && ID [ CONST ] <= CHARST ) && ID [ CONST ] == ( ID [ CONST ] - CONST ) )', ' called object is not a function or function pointer'], 1265: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 1266: ['    ID = * ( ID + ID + CONST ) ;', '  ID  undeclared '], 1267: ['\tID ++', ' expected  ;  before  }  token'], 1268: ['    printf ( STRING )', ' expected  ;  before  return '], 1269: ['        for ( int ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 1270: ['            scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 1271: ['    }', ' expected identifier or  (  before  }  token'], 1272: ['\telse { break ; }', ' break statement not within loop or switch'], 1273: ['\tif ( ID = CONST || ID = CONST )', ' lvalue required as left operand of assignment'], 1274: ['     scanf ( STRING , ID , ID , ID ) ;            ', '  ID  undeclared '], 1275: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 1276: ['    ID = ID . ID ;                           ', ' incompatible types when assigning to type  struct node  from type  struct node * '], 1277: ['      printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 1278: ['}', ' expected declaration or statement at end of input'], 1279: ['\tfor ( ID = CONST ; ID [ ID ] != CHART , ID ++ ) {', ' expected  ;  before  )  token'], 1280: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 1281: ['    return ID ; } } return ID , ID ;', '  ID  undeclared '], 1282: ['\t    ID = ID', ' expected  ;  before  for '], 1283: ['\t            else if ( ID < CONST ID - ID )  printf ( STRING ) ;', ' invalid suffix "c" on integer constant'], 1284: ['\t    ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 1285: ['}', ' expected declaration or statement at end of input'], 1286: ['    ID = CONST / CONST ( ID * ID ) * ID ;', ' called object is not a function or function pointer'], 1287: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 1288: ['    int ID = ( ID -> ID . ID ) > ( ID -> ID . ID ) ;', '  ID  undeclared '], 1289: ['printf ( STRING ID + ID ) ;', ' expected  )  before  ID '], 1290: ['            printf ( STRING )', ' expected  ;  before  }  token'], 1291: ['        ID = ID [ ID ] ;', '  ID  undeclared '], 1292: ['                if ( ID [ ID ] == ID [ ID ] )', ' subscripted value is neither array nor pointer nor vector'], 1293: ['        while ( ID [ ID ] < ID [ ID ] && ID <= ID )', '  ID  undeclared '], 1294: ['    return CONST ;', ' expected declaration or statement at end of input'], 1295: ['   printf ( STRING , ID ) ;', '  ID  undeclared '], 1296: ['    if ( ( ID / ID ) = ( ID / ID ) ) {', ' lvalue required as left operand of assignment'], 1297: ['        printf ( STRING )', ' expected  ;  before  }  token'], 1298: ['int ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 1299: ['    ID = { STRING }', ' expected expression before  {  token'], 1300: ['  for ( ID = CONST ; ID < ID - CONST , ID ++ )', ' expected  ;  before  )  token'], 1301: ['     printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 1302: ['\t     ( ID == CONST )', ' expected  ;  before  {  token'], 1303: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', ' lvalue required as increment operand'], 1304: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 1305: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 1306: ['scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 1307: ['  ID ( ID , CONST , CONST )', ' expected  ;  before  return '], 1308: ['\tID ( ID [ ] [ CONST ] , ID , ID ) ;', ' expected expression before  ]  token'], 1309: ['    ID = gets ( ) ;', ' too few arguments to function  gets '], 1310: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 1311: ['    else { printf ( STRING , ID , CHARST ID ) ; }', ' expected  )  before  ID '], 1312: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 1313: ['    ID = CONST ( ID * ID - ID * ID ) * ID ;', ' called object is not a function or function pointer'], 1314: ['\t    ID ++', ' expected  ;  before  }  token'], 1315: ['    if ( ID / ID = ID / ID )', ' lvalue required as left operand of assignment'], 1316: ['for ( ID = CONST ; ID <= ; ID ++ )', ' expected expression before  ;  token'], 1317: ['    while ( ID [ ID ] != - CONST )', ' expected expression before  }  token'], 1318: ['                 ID = CONST', ' expected  ;  before  }  token'], 1319: [' printf ( STRING , ID )', ' expected  ;  before  return '], 1320: ['        printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 1321: ['       float ID = ID * ID ;', ' invalid operands to binary * '], 1322: ['}', ' expected declaration or statement at end of input'], 1323: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 1324: ['    printf ( STRING , ID )', ' expected  ;  before  puts '], 1325: ['printf ( STRING , ID * ID * ID )', ' expected  ;  before  return '], 1326: ['    scanf ( STRING , & ID [ ID ] & ID [ ID ] ) ;', ' invalid operands to binary & '], 1327: ['\tprintf ( STRING , * ( ID + CONST ) )', ' expected  ;  before  return '], 1328: ['printf ( STRING )', ' expected  ;  before  return '], 1329: ['       return CONST ', ' expected  ;  before  }  token'], 1330: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 1331: ['        printf ( STRING ) }                                                                   ', ' expected  ;  before  }  token'], 1332: ['    int ID [ ID ] , [ ID ] ;', ' expected identifier or  (  before  [  token'], 1333: ['}', ' expected declaration or statement at end of input'], 1334: ['\tID ( ID [ ] [ ID ] , ID [ ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 1335: ['\tfor ( ID = CONST ; ID [ CONST ID ] != CHART ; ID ++ ) {', ' array subscript is not an integer'], 1336: ['        if ( ID % ID != CONST ) return                     ', ' expected expression before  return '], 1337: ['    }', ' expected declaration or statement at end of input'], 1338: ['                   printf ( STRING , ID [ ID ] [ ID ] , ID [ ID ] [ ID ] )', ' expected  ;  before  ID '], 1339: ['    else ( ID == ID )', ' expected  ;  before  printf '], 1340: ['    for ( ID = ID ; ID >= ID ; ID ++ )', '  ID  undeclared '], 1341: ['    ID = ;', ' expected expression before  ;  token'], 1342: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 1343: ['    if ( ( ID < ID ) && ( ID == ID ) ) {', '  ID  undeclared '], 1344: ['    for ( ID = CONST ; ID < ID ; ID ++ ) { ]', ' expected statement before  ]  token'], 1345: ['    }', ' expected identifier or  (  before  }  token'], 1346: ['\t    if ( ID [ ID ] != )', ' expected expression before  )  token'], 1347: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1348: ['    ID = ID + CONST', ' expected  ;  before  }  token'], 1349: ['\t    scanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 1350: ['}', ' expected declaration or statement at end of input'], 1351: ['            for ( ID = ID + ID ; ID > ID + ID - ID ( ID ) ; ID -- )', '  ID  undeclared '], 1352: ['\t        ID [ ID ] = ID + CONST', ' expected  ;  before  }  token'], 1353: ['\telse printf ( STRING )', ' expected  ;  before  return '], 1354: ['    ( ID + ID > ID && ID + ID > ID && ID + ID > ID )', ' expected  ;  before  printf '], 1355: ['    } else if ( ID == CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 1356: ['}', ' expected declaration or statement at end of input'], 1357: ['for ( ID = ID - CONST ; ID = > CONST ; ID -- ) {', ' expected expression before  >  token'], 1358: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 1359: ['}', ' expected  ; , identifier or  (  before  int '], 1360: ['  } printf ( STRING , ID )', ' expected  ;  before  return '], 1361: ['               ID ++', ' expected  ;  before  break '], 1362: ['  ID = ID ;', '  ID  undeclared '], 1363: ['    else ( ID == CONST ) printf ( STRING ) ;', ' expected  ;  before  printf '], 1364: ['    ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 1365: ['    int * ID [ ID ] ;', ' size of array  ID  has non-integer type'], 1366: ['        ID += ID [ ID ] * CONST', ' expected  ;  before  }  token'], 1367: [' return ID ( ( ID , ID , ID + CONST , ID + CONST , ID , ID ) + ID ( ID , ID , ID + CONST , ID + CONST , ID , ID ) ) ;', ' too few arguments to function  ID '], 1368: ['    for ( ID = CONST ; ID <= CONST ; CONST ++ )', ' lvalue required as increment operand'], 1369: ['    ID = ( int * ) malloc ( ID * sizeof ( int ) ) ; .                                 ', ' expected expression before  .  token'], 1370: ['  printf ( STRING , ID , ID , ID )  ', ' expected  ;  before  return '], 1371: ['    ID ( ID , ID , CONST , CONST , CONST ) ;', ' too many arguments to function  ID '], 1372: ['   ID = ID ( ID [ ID ] , * ID ) ;', ' incompatible types when assigning to type  BirthData *  {aka  struct birth_data * } from type  ID  {aka  struct birth_data }'], 1373: ['}', ' expected declaration or statement at end of input'], 1374: ['}', ' expected declaration or statement at end of input'], 1375: ['\tID = int ID ( ID ) ;', ' expected expression before  int '], 1376: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 1377: ['                printf ( STRING * ID , * ID , * ID , * ID ) ;', ' invalid operands to binary * '], 1378: ['        ID = CONST / CONST ID ( ID * ID - ID * ID ) ;', ' invalid suffix "m" on integer constant'], 1379: ['            ID [ ID ] = ID ;', '  ID  undeclared '], 1380: ['\t    ID = ID [ ID ]', ' expected  ;  before  printf '], 1381: ['\t   for ( ID = CONST ; ID <= ( ( CONST * ID ) - ) ; ID ++ )', ' expected expression before  )  token'], 1382: ['       ID = ID ( ID )                  ', ' expected  ;  before  printf '], 1383: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 1384: ['\t    printf ( STRING )', ' expected  ;  before  else '], 1385: ['       ID = ID ( ID [ ID ] , ID )  ', ' expected  ;  before  }  token'], 1386: ['        ID [ ID ] = ( int * ) calloc ( ID * sizeof ( int ) ) ;', ' too few arguments to function  calloc '], 1387: ['    printf ( STRING )', ' expected  ;  before  return '], 1388: ['    while ( ID . ID != ID ) {', '  ID  is a pointer; did you mean to use  -> ?'], 1389: ['           printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 1390: ['\tfloat ID = ID * ID * * CONST ;', ' invalid type argument of unary  *  '], 1391: ['        else if ( ID != = CONST && ID == ID - CONST ) {', ' expected expression before  =  token'], 1392: ['\t    if ( ID == ID [ ID ] )', '  ID  undeclared '], 1393: ['        if ( ID [ ID ] >= ID ) { ID = ID [ ID ] } else continue ;', ' expected  ;  before  }  token'], 1394: ['\tint ID = CONST ;', ' redeclaration of  ID  with no linkage'], 1395: ['\tfloat ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 1396: ['\tfor ( int ID = ID ; ID < ( ID + ID ) ; ID ++ ) {', '  ID  undeclared '], 1397: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 1398: ['    printf ( STRING , ID ( ID [ ] , CONST , ID - CONST ) ) ;', ' expected expression before  ]  token'], 1399: ['    ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 1400: ['    printf ( STRING , CONST ID ) ;', ' invalid suffix "a" on floating constant'], 1401: ['   printf ( STRING , ID , ID , ID , ID , ID )', ' expected  ;  before  return '], 1402: ['        if ( ID [ ID ] == ID )', '  ID  undeclared '], 1403: ['        ID = - CONST', ' expected  ;  before  }  token'], 1404: ['\t    for ( ID = ( ID - CONST ID ) / CONST ; ID >= CONST ; ID -- )', ' invalid suffix "a" on integer constant'], 1405: ['    ID ( ID , ID - CONST ) ;', '  ID  undeclared '], 1406: ['        if ( ID [ ID ] == CHARNST || ID [ ID ] == CHART ) {', ' empty character constant'], 1407: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 1408: ['    printf ( STRING )', ' expected  ;  before  return '], 1409: ['\tfor ( ID = CONST ; ID + ID < ID ; ID ++ )', '  ID  undeclared '], 1410: ['    else if {', ' expected  (  before  {  token'], 1411: ['\tchar ID [ CONST ] = { CHARCHARHARRRCHARARNST } ;', ' empty character constant'], 1412: ['     printf ( STRING )                                                 ', ' expected  ;  before  return '], 1413: ['        scanf ( STRING , & ID )', ' expected  ;  before  }  token'], 1414: ['\t    scanf ( STRING , & char [ ID ] ) ;', ' expected expression before  CHAR '], 1415: ['   else ', '  else  without a previous  if '], 1416: ['void ID ( ID [ ] [ CONST ] , int ID , int ID )', ' unknown type name  ID ; did you mean  int ?'], 1417: ['    ID = ID * ( CONST + ID * ID / CONST )', ' expected  ;  before  scanf '], 1418: ['printf ( ID [ CONST ] )', ' expected  ;  before  return '], 1419: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 1420: ['     ID [ ( CONST * ( ID ) - ID ] = ID ;', ' expected  )  before  ]  token'], 1421: ['        scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 1422: ['    int ID = CONST ID - CONST ; int ID = CONST ;', ' invalid suffix "nt" on integer constant'], 1423: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 1424: ['     printf ( STRING , ID = ID ) ;', ' assignment to expression with array type'], 1425: ['    if ( ID == ID ) printf ( STRING ) ;', '  ID  undeclared '], 1426: ['    printf ( STRING , ( char ) ID ) ;', '  ID  undeclared '], 1427: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 1428: ['    scanf ( STRING , & ID , & ID , & ID , & , ID , & ID , & ID ) ;', ' expected expression before  ,  token'], 1429: ['                  ID ++', ' expected  ;  before  }  token'], 1430: ['    scanf ( STRING ID ) ;', ' expected  )  before  ID '], 1431: ['            ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 1432: ['              else if ( ID [ ID ] < ID [ ID ] ) { ID [ ID ] = ID [ ID ] ; ++ ID ; }', '  ID  undeclared '], 1433: ['    ID = CONST ; ID = CONST', ' expected  ;  before  for '], 1434: ['\tint ID = CONST * CONST * CONST * CONST * CONST ;', ' conflicting types for  ID '], 1435: ['    printf ( STRING )', ' expected  ;  before  return '], 1436: ['\tfor ( ID = CONST ; ID <= ; ID ++ )', ' expected expression before  ;  token'], 1437: ['        for ( ID = CONST ; ID < ID . ID , ID ++ ) {', ' expected  ;  before  )  token'], 1438: ['\t    if ( ID [ ID ] == CHARST ) || ( ID [ ID ] == CHART )', ' expected expression before  ||  token'], 1439: ['\t    ID ++', ' expected  ;  before  ID '], 1440: ['}', ' expected declaration or statement at end of input'], 1441: ['\tprintf ( STRING )', ' expected  ;  before  return '], 1442: ['   if ( pow ( ID . ID . ID - ID . ID . ID , CONST ) + pow ( ID . ID . ID - ID . ID . ID , CONST ) - pow ( ID . ID . ID , CONST ) - pow ( ID . ID . ID ) <= CONST )', ' too few arguments to function  pow '], 1443: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 1444: ['    printf ( STRING )', ' expected  ;  before  }  token'], 1445: ['        if  ( ( ID ( ID ) ) >= ID ) && ( ID ( ID ) <= ID ) ', ' expected identifier before  (  token'], 1446: ['    scanf ( STRING , & ( ID -> ID ) )', ' expected  ;  before  ID '], 1447: ['        for ( int ID = CONST ; ID < ID + CONST )', ' expected  ;  before  )  token'], 1448: ['    else if ( ID <= CONST && ID <= CONST )', '  else  without a previous  if '], 1449: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1450: ['    ID [ ID ] = CONST', ' expected  ;  before  }  token'], 1451: [' for ( int ID = CONST ; ID [ ID ] != CHARNST ; ID ++ )', ' empty character constant'], 1452: ['        else if ( ID != CONST )', '  else  without a previous  if '], 1453: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 1454: ['        scanf ( STRING , ID [ ID ] , ) ;', ' expected expression before  )  token'], 1455: ['\tint ID , ID = CONST , ID = CONST , ID , ID = ID ;', '  ID  undeclared '], 1456: ['    scanf ( STRING , & ID , & ID , & ID , & ID )', ' expected  ;  before  ID '], 1457: ['for ( ID = CONST ; ID , < ID ; ID ++ )', ' expected expression before  <  token'], 1458: ['\t            while ( ID [ ID + ID + ID ] < ID [ ID + ID - CONST + ID ] )', ' expected  ;  before  ID '], 1459: ['    printf ( STRING )', ' expected  ;  before  return '], 1460: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1461: ['        else', '  else  without a previous  if '], 1462: ['            printf ( STRING , CHARST + ID + ID - CONST )', ' expected  ;  before  }  token'], 1463: ['\t    { printf ( STRING , ID [ ID ] ) }', ' expected  ;  before  }  token'], 1464: ['            ID ( ID , ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 1465: ['      if ( ID ( * ( ID + ID ) , * ( ID + ID - CONST ) ) == ID ( * ( ID + ID ) , * ( ID + ID - CONST ) ) )', '  ID  undeclared '], 1466: ['if ( ID == ID == ID || != CONST ) {', ' expected expression before  !=  token'], 1467: ['            ID ++', ' expected  ;  before  }  token'], 1468: ['if ( ID == ( ID - CONST ) )', '  ID  undeclared '], 1469: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 1470: ['\t    ID [ ID ] = ID [ ID ] ;   ', '  ID  undeclared '], 1471: ['     else if ( ( ID * ID + ID * ID ) == ID * ID ) || ( ( ID * ID + ID * ID ) == ID * ID ) || ( ( ID * ID + ID * ID ) == ID * ID ) {             ', ' expected expression before  ||  token'], 1472: ['\tprintf ( STRING ID [ CONST ] ) ;', ' expected  )  before  ID '], 1473: ['     ID = ( ( ID == ID ) + ( ID == ID ) + ( ID == ID ) ) ;', '  ID  undeclared '], 1474: ['    char ID = CHAR', ' expected  ,  or  ;  before  printf '], 1475: ['\tprintf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 1476: ['\t    scanf ( STRING , & ID )', ' expected  ;  before  }  token'], 1477: ['    ID = ID ( ID , ID , ID , CONST , ID ) ;', ' too few arguments to function  ID '], 1478: [' printf ( STRING , ID , ) ;  ', ' expected expression before  )  token'], 1479: ['                else ( ID == ( ID - CONST ) )', ' expected  ;  before  printf '], 1480: ['\t        int ID = ID [ ID ]', ' expected  ,  or  ;  before  if '], 1481: ['else if', ' expected  (  before  {  token'], 1482: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 1483: ['while ( ID ! < CONST )', ' expected  )  before  !  token'], 1484: ['\tprintf ( STRING , ID ( CONST ) )', ' expected  ;  before  return '], 1485: ['            ID = ID + ID * ID', ' expected  ;  before  }  token'], 1486: ['    \tstruct ID * ID = ID [ ID ] . ID ;', '  ID  undeclared '], 1487: [' else      if ( CHARST <= ID <= CHARST )', '  else  without a previous  if '], 1488: ['        ID = getchar ( ID [ ID ] ) ;', ' too many arguments to function  getchar '], 1489: ['    }', ' expected identifier or  (  before  }  token'], 1490: ['        if ( ID == CHARST ) || ( ID == CHARST ) || ( ID == CHARST ) || ( ID == CHARST ) || ( ID == CHARST )', ' expected expression before  ||  token'], 1491: ['}', ' expected declaration or statement at end of input'], 1492: ['}', ' expected declaration or statement at end of input'], 1493: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 1494: ['     }   else ( ID = CONST )', ' expected  ;  before  {  token'], 1495: ['    ID [ CONST ] = CHART ;', '  ID  undeclared '], 1496: ['int ID', ' expected  ;  before  int '], 1497: ['\t        printf ( STRING , ID [ ID ] ) ;                     ', '  ID  undeclared '], 1498: ['    else if ( ID . CHARST &&  ID < CHARST )', ' expected identifier before  A '], 1499: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 1500: ['          printf ( STRING ID ID / STRING ) ;', ' expected  )  before  ID '], 1501: ['   scanf ( STRING , & ID , ID , & ID , & ID ) ;', '  ID  undeclared '], 1502: ['    ID = ID / CONST', ' expected  ;  before  }  token'], 1503: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 1504: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 1505: ['        ID ( STRING ID + CHARST ) ;', ' expected  )  before  ID '], 1506: ['\t        printf ( STRING ,\\ CONST ) ;', ' stray  \\  in program'], 1507: ['    else {', '  else  without a previous  if '], 1508: ['  int ID = int ID ( ID , ID ) ;', ' expected expression before  int '], 1509: ['    for ( ID = ; ID < CONST ; ID ++ )', ' expected expression before  ;  token'], 1510: ['    } printf ( STRING , ID , ID )', ' expected  ;  before  }  token'], 1511: ['\t    ID = ID + ID', ' expected  ;  before  }  token'], 1512: ['    ID = ID * pow ( CONST , ID )', ' expected  ;  before  printf '], 1513: ['int ID ( ID ID , ID ) {', ' parameter name omitted'], 1514: ['for ( ID = CONST ; ID < ID ; ++ )', ' expected expression before  )  token'], 1515: ['\t    if ( ID [ ID ] == ID ) {', '  ID  undeclared '], 1516: ['        ID ( char ID ) ;', ' expected expression before  CHAR '], 1517: ['        ID ++', ' expected  ;  before  }  token'], 1518: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 1519: ['}', ' expected declaration or statement at end of input'], 1520: ['if \t                                 ', ' expected  (  before  return '], 1521: [' else - if ( ( ID + ID ) > ID ) printf ( STRING ) ;', ' expected expression before  if '], 1522: ['if ( ID == CONST ) { return CONST ; }', '  ID  undeclared '], 1523: ['    for ( ID >= CONST ; ID <= ID ; ID = ID ( ID ) )', ' called object  ID  is not a function or function pointer'], 1524: ['    printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 1525: ['        printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 1526: ['\t            ID [ ID ] = ID [ ID ] + ID [ ID ] * ID [ ID ]', ' expected  ;  before  }  token'], 1527: ['\tID [ ID ] = CONST', ' expected  ;  before  for '], 1528: ['    return ID ( ID + CONST , ID + ID [ ID - CONST ] ) ;', '  ID  undeclared '], 1529: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 1530: ['    int ID [ ID ] ;', ' redeclaration of  ID  with no linkage'], 1531: ['    printf ( STRING )', ' expected  ;  before  }  token'], 1532: ['\t  } printf ( STRING )  ', ' expected  ;  before  return '], 1533: ['    else ( ID == ID ) {', ' expected  ;  before  {  token'], 1534: ['    scanf ( STRING , ID )                                                ', ' expected  ;  before  ID '], 1535: ['    int ID , ID ;', '  ID  redeclared as different kind of symbol'], 1536: ['                        case CONST : printf ( STRING ) ; break', ' expected  ;  before  case '], 1537: ['        scanf ( STRING , & ID [ ID ] , & ID ) ;', '  ID  undeclared '], 1538: ['\tprintf ( STRING , ID [ ] [ CONST ] ) ;', ' expected expression before  ]  token'], 1539: ['else printf ( STRING ) ;', '  else  without a previous  if '], 1540: ['\t} break ;', ' break statement not within loop or switch'], 1541: ['    printf ( STRING , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 1542: ['ID ( * ID , CONST , ID ) ;', ' incompatible type for argument 1 of  ID '], 1543: ['    int ID = ID ( ID ) ;', ' redefinition of  ID '], 1544: ['    ID ( ID [ ] , ID - CONST ) ;', ' expected expression before  ]  token'], 1545: ['  printf ( STRING )', ' expected  ;  before  }  token'], 1546: ['        int ID , ID = ID ;', '  ID  undeclared '], 1547: ['    return ID ;      ', '  ID  undeclared '], 1548: ['}', ' expected declaration or statement at end of input'], 1549: ['    for ( ID = ID + CONST ; ID = < ID - ID + CONST + ID ; ID ++ ) {', ' expected expression before  <  token'], 1550: ['\tfloat ID = CONST * ID * ID * ID * ID', ' expected  ,  or  ;  before  printf '], 1551: ['    for ( ID = ID - CONST ; ID >= ; ID -- )', ' expected expression before  ;  token'], 1552: ['\tfor ( ID = CONST ; ID [ ID ] != CHART )', ' expected  ;  before  )  token'], 1553: ['printf ( pow ( CONST , ID ) ) ;', ' incompatible type for argument 1 of  printf '], 1554: ['printf ( STRING )', ' expected  ;  before  }  token'], 1555: ['\tID [ ID + ID + CONST ] = CHART', ' expected  ;  before  printf '], 1556: ['\tchar ID [ CONST ] , ;', ' expected identifier or  (  before  ;  token'], 1557: ['    ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 1558: ['}', ' expected declaration or statement at end of input'], 1559: ['      int ID ;', ' conflicting types for  ID '], 1560: ['\t( ID = ; ID <= ID ; ID = ID + CONST )', ' expected expression before  ;  token'], 1561: ['scanf ( STRING , & ID , & ID ) ;         ', '  ID  undeclared '], 1562: ['    int ID [ ] ;', ' array size missing in  ID '], 1563: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 1564: ['int ID , ID , ID = CONST ;', '  ID  redeclared as different kind of symbol'], 1565: ['      if ( ID [ ID - CONST ] != CHARST ) { printf ( STRING , ID [ ID - CONST ] ) }', ' expected  ;  before  }  token'], 1566: ['    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 1567: ['    int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 1568: ['    while ( ID [ ID ] != CHART ) ID ++', ' expected  ;  before  return '], 1569: ['        ID = getchar ( )', ' expected  ;  before  }  token'], 1570: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1571: ['    printf ( " ID ID ID\\ ID\\ ( % CONST\\ , % CONST\\ )\\ ,\\ ID\\ ( % CONST\\ , CONST\\ ) ID \\ ( CONST\\ , % CONST\\ ) ID % CONST " . , ID , ID , ID , ID , ID ) ;', ' expected identifier before  ,  token'], 1572: [' if ( ( ID * ID ) ! = ( ID * ID ) )', ' expected  )  before  !  token'], 1573: ['  printf ( STRING )  ', ' expected  ;  before  return '], 1574: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 1575: ['printf ( STRING , ID ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ) ;', ' invalid operands to binary ^ '], 1576: ['\tprintf ( STRING )', ' expected  ;  before  return '], 1577: ['    static int ID = strlen ( ID ) ;', ' initializer element is not constant'], 1578: ['printf ( STRING ID ) ;', ' expected  )  before  ID '], 1579: ['    else ( ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) - ( ID * ID ) ) > CONST ) {', ' expected  ;  before  {  token'], 1580: ['    if ( ID = < CONST )', ' expected expression before  <  token'], 1581: ['        break ;', ' break statement not within loop or switch'], 1582: ['\tint ID = ID ;', ' redeclaration of  ID  with no linkage'], 1583: ['\t    printf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 1584: ['\tchar * ID = malloc ( getchar ( ) - CONST )', ' expected  ,  or  ;  before  return '], 1585: ['    static int ID = ID , ID = CONST ;', ' initializer element is not constant'], 1586: ['    ID ( ID )', ' expected  ;  before  }  token'], 1587: ['\tint ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 1588: ['\tchar [ CONST ] ;', ' expected identifier or  (  before  [  token'], 1589: ['    if ( ID = ID & ID = ID ) {', ' invalid operands to binary & '], 1590: ['    else ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) - ID * ID == CONST )', ' expected  ;  before  printf '], 1591: ['        if ( ID == CHART ID )', ' expected  )  before  ID '], 1592: ['        ID = ID + ( ( ID % CONST == CONST ) && ( ID % CONST != CONST ) )', ' expected  ;  before  }  token'], 1593: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 1594: ['printf ( STRING , ( ID ) , ( ID ) , ( ID ) , ( ID ) , ID ) . ;', ' expected identifier before  ;  token'], 1595: ['\t     ID [ ID ] = ID [ ID ] + ID [ ID ] * ID [ ID - ID ]', ' expected  ;  before  }  token'], 1596: ['\tID ( ID , ID , ID ) ;', '  ID  undeclared '], 1597: ['    else printf ( STRING )', ' expected  ;  before  return '], 1598: ['\tdouble ID [ ID + CONST ] ;', ' size of array  ID  has non-integer type'], 1599: ['\tprintf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 1600: ['    printf ( STRING , ID ( ID [ CONST ] ) ) ;', ' too few arguments to function  ID '], 1601: ['\tscanf ( STRING & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 1602: ['        ID = - ID', ' expected  ;  before  }  token'], 1603: ['    ID ( ID , ID , ID , ID ) ;', ' too few arguments to function  ID '], 1604: ['     { ID [ ID ] = CONST ;', ' assignment to expression with array type'], 1605: ['\t    ID [ ] == getchar ;', ' expected expression before  ]  token'], 1606: ['\tID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 1607: ['        * ID = ID -> ID ;', ' incompatible types when assigning to type  struct node  from type  struct node * '], 1608: ['    for ( ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 1609: ['\t        printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 1610: ['        printf ( STRING )', ' expected  ;  before  }  token'], 1611: ['\t    ID = ID + CONST                        ', ' expected  ;  before  }  token'], 1612: ['                        printf ( STRING )', ' expected  ;  before  }  token'], 1613: ['\tprintf ( STRING , ID ) ', ' expected  ;  before  printf '], 1614: ['    else', '  else  without a previous  if '], 1615: ['       ID = CONST ID + ID ;', ' invalid suffix "s" on integer constant'], 1616: ['        scanf ( STRING , ID [ ID ] . ID , ID [ ID ] . ID ) ;', '  ID  undeclared '], 1617: ['\tID = ( ID - CONST ) * ID + ( ID - CONST ) ID ;', ' expected  ;  before  ID '], 1618: ['\tprintf ( STRING , CONST * ( ID ( ID ) ) * ( ID ( ID ) ) * ( ID ( ID ) ) - CONST * ID ( ID ) )', ' expected  ;  before  }  token'], 1619: ['\telse ID ( ID , ID , STRING , STRING ) ;', '  ID  undeclared '], 1620: ['\t    ID = ID * CONST + ID', ' expected  ;  before  }  token'], 1621: ['                printf ( STRING )', ' expected  ;  before  ID '], 1622: [' if ( ( ID > ID + ID ) ID ( ID > ID + ID ) || ( ID > ID + ID ) ) {', ' expected  )  before  ID '], 1623: ['\tint ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 1624: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 1625: ['            ID [ ID ] = ID ;', '  ID  undeclared '], 1626: ['        ID = ID + ID [ ID - CONST ]', ' expected  ;  before  ID '], 1627: ['float ID = ( ) CONST ) * ID * ( ID * ID - ID * ID ) ;', ' expected expression before  )  token'], 1628: ['    return ID ( ID , ID - CONST ) ;', '  ID  undeclared '], 1629: ['        return CONST ', ' expected  ;  before  }  token'], 1630: ['printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 1631: ['    float ID = ( CONST * ID * ID * ID * ) ;', ' expected expression before  )  token'], 1632: ['      else ( ID == CONST ) {', ' expected  ;  before  {  token'], 1633: ['       ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 1634: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 1635: ['    else ( ID == CONST )', ' expected  ;  before  printf '], 1636: ['    ID ++', ' expected  ;  before  }  token'], 1637: ['            if ( ID == CONST )', '  ID  undeclared '], 1638: ['int main ( ) { printf ( STRING , ID ) ; printf ( STRING , ID )', ' expected  ;  before  return '], 1639: ['int ID ( int ID [ ] [ ID ] , int ID , int ID , ) ', ' expected declaration specifiers or  ...  before  )  token'], 1640: ['    { ID ( STRING ) ; }', ' incompatible type for argument 1 of  ID '], 1641: ['\tint ID = CONST ;', ' redeclaration of  ID  with no linkage'], 1642: ['\tID = ID ( ID , ID ) ;', '  ID  undeclared '], 1643: ['}', ' expected declaration or statement at end of input'], 1644: ['}', ' expected  ; , identifier or  (  before  int '], 1645: ['    printf ( STRING ,\\ ID ) ;', ' stray  \\  in program'], 1646: ['}', ' expected identifier or  (  before  }  token'], 1647: ['    if ( - CONST % ID = CONST )', ' lvalue required as left operand of assignment'], 1648: ['}', ' expected  ; , identifier or  (  before  int '], 1649: ['   gets ( ) ;', ' too few arguments to function  gets '], 1650: ['    float ID = ID * CONST', ' expected  ,  or  ;  before  printf '], 1651: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 1652: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 1653: ['}', ' expected declaration or statement at end of input'], 1654: ['   printf ( STRING ID ) ;', ' expected  )  before  ID '], 1655: ['    { return pow ( ID , CONST ) }', ' expected  ;  before  }  token'], 1656: ['if ( ( - ID ) / ID != = ( - ID ) / ID )', ' expected expression before  =  token'], 1657: ['        ID ( ID , ID ++ ) ; }', ' expected declaration or statement at end of input'], 1658: ['\tfor ( ID = CONST ; ID <= ID ; ID == * ) {', ' expected expression before  )  token'], 1659: ['ID   if ( ID == ID && ID == CONST ) ', ' expected  ;  before  if '], 1660: ['\tif ( ID - ID != ) {', ' expected expression before  )  token'], 1661: ['\t   if ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) ID ++ ; ', '  ID  undeclared '], 1662: ['\tID = CONST', ' expected  ;  before  while '], 1663: ['        ID ++ = ID * ( ID + CONST ) / CONST ;', ' lvalue required as left operand of assignment'], 1664: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 1665: ['    printf ( "                                  ', ' missing terminating " character'], 1666: ['    if ( sqrt ( pow ( ( ID . ID . ID - ID . ID . ID ) , CONST ) ) + pow ( ( ID . ID . ID - ID . ID . ID ) , CONST ) ) <= ( ID . ID . ID + ID . ID . ID ) {', ' expected expression before  <=  token'], 1667: ['    ID = ( char * ) malloc ( CONST * ID ( char ) ) ;', ' expected expression before  CHAR '], 1668: ['    scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 1669: ['        ID ( ID )', ' expected  ;  before  printf '], 1670: ['printf ( STRING )', ' expected  ;  before  }  token'], 1671: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 1672: ['          printf ( STRING , ID [ ID ] ID [ ID ] ) ;', ' expected  )  before  ID '], 1673: ['    char CHARST , CHARST , CHARST ;', ' expected identifier or  (  before  a '], 1674: ['    return ID', ' expected  ;  before  }  token'], 1675: ['\t    for ( ID = ID [ ID - ID - CONST ] + CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 1676: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 1677: ['    ID -= ID [ ID ]', ' expected  ;  before  ID '], 1678: ['    printf STRING ;', ' expected  ;  before string constant'], 1679: ['            ID [ ID ] = ID [ ( ID + ID ) % ID ] ;', '  ID  undeclared '], 1680: ['\tfor ( ID = CONST ; ID < ( ID / CONST + CONST ) , ID ++ )', ' expected  ;  before  )  token'], 1681: ['}', ' expected declaration or statement at end of input'], 1682: ['                if ( ( ID + ID > ID ) || ( ID + ID < ID ) || ( ID + ID < ID ) )', ' expected expression before  }  token'], 1683: ['            printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 1684: ['  int ID = ID [ CONST ] [ ID - CONST - ID ] ) + ID [ CONST ] [ ID - ID - CONST ] + ID ;', ' expected  ,  or  ;  before  )  token'], 1685: ['}', ' expected declaration or statement at end of input'], 1686: ['    ID = CONST', ' expected  ;  before  ID '], 1687: ['printf ( STRING )', ' expected  ;  before  return '], 1688: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 1689: ['\t    else if ( ID [ ID ] == ID ) printf ( STRING , ID [ ID - CONST ] , ID , ID , ID [ ID + CONST ] ) ;', '  ID  undeclared '], 1690: ['\tID = CONST * CONST * CONST', ' expected  ;  before  printf '], 1691: ['\tscanf ( STRING ID ) ;', ' expected  )  before  ID '], 1692: ['    double ID , ID , ID = CONST ; long ID , ID ;', ' expected expression before  ID  token'], 1693: ['        double float ID , ID ;', ' two or more data types in declaration specifiers'], 1694: ['\t    printf ( STRING , ID , ID ) ; continue', ' expected  ;  before  }  token'], 1695: ['    ID = ( struct ID * ) calloc ( sizeof ( struct ID ) ) ;', ' too few arguments to function  calloc '], 1696: ['    printf ( STRING )', ' expected  ;  before  printf '], 1697: ['    scanf ( STRING , ID , ID , ) ;', ' expected expression before  )  token'], 1698: ['    else ( CONST <= ID <= CONST ) { printf ( STRING ) ;', ' expected  ;  before  {  token'], 1699: ['       break }', ' expected  ;  before  }  token'], 1700: ['\tprintf ( STRING , ID ( ID ) == CONST ? STRING : STRING ) ;', ' too few arguments to function  ID '], 1701: ['\t    if ( ID [ ID ] == int ) {', ' expected expression before  int '], 1702: ['\tprintf ( STRING , ID , ID , ID , ID ID ) ;', ' expected  )  before  ID '], 1703: ['  ID = ID + ID + ID', ' expected  ;  before  printf '], 1704: ['      ID = CONST / CONST', ' expected  ;  before  return '], 1705: ['    return ID * ( * ID ) ;', ' invalid type argument of unary  *  '], 1706: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 1707: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 1708: ['\tscanf ( STRING , & ID , & ID & ID , & ID ) ;', ' invalid operands to binary & '], 1709: ['         return ID ;', '  ID  undeclared '], 1710: ['        ID ( ) ;', ' too few arguments to function  ID '], 1711: ['        char ID [ ID ] = ID ;', ' variable-sized object may not be initialized'], 1712: ['    ID = ID ;', '  ID  undeclared '], 1713: ['    }', ' expected  ; , identifier or  (  before  struct '], 1714: ['        if ( ( ID / ID ) < ID ) )', ' expected statement before  )  token'], 1715: ['        ID ++', ' expected  ;  before  }  token'], 1716: ['    for ( ID = CONST ; ID <= ID ; ID = ID + CONST ) {', '  ID  undeclared '], 1717: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 1718: ['\tscanf ( STRING , & ID , & ID , & ID ) ;', '  ID  undeclared '], 1719: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 1720: ['            else if ( ID [ ID ] != ID [ ID ] )', '  else  without a previous  if '], 1721: ['    else ( ID % CONST && ID % CONST )', ' expected  ;  before  printf '], 1722: ['float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 1723: ['int ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 1724: ['    for ( ID = CONST ; ID < ID ( ID ) , ID = ID + CONST ) {', ' expected  ;  before  )  token'], 1725: ['    for ( ID = ( ID - ( ID - CONST ) ) ; ID = ( ID + ID ) ) {', ' expected  ;  before  )  token'], 1726: ['\t        if ( ID != CONST && ID != ID ) { if ( ID + ID == ID + CONST || ID - ID = ID - CONST ) { printf ( STRING ) ; } }', ' lvalue required as left operand of assignment'], 1727: ['  scanf ( STRING , & ID ) ;', '  ID  undeclared '], 1728: ['   else {', '  else  without a previous  if '], 1729: ['    ID = ID', ' expected  ;  before  printf '], 1730: ['    for ( ID = CONST , ID = CONST ; ( ID < ID ) && ( ID < ID ) )', ' expected  ;  before  )  token'], 1731: ['        printf ( STRING )', ' expected  ;  before  }  token'], 1732: ['  int void ID ( int ID )', ' two or more data types in declaration specifiers'], 1733: ['    while ( ( ID [ ID ] % CONST == CONST ) && ( ID [ ID ] % != CONST ) && ID < CONST ) {', ' expected expression before  !=  token'], 1734: ['\tfloat ID = ( ( ID - CONST ) ) + CONST ) ;', ' expected  ,  or  ;  before  )  token'], 1735: ['    for ( ID > CONST ; ID -- )', ' expected  ;  before  )  token'], 1736: ['    for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 1737: ['            ID += CONST', ' expected  ;  before  }  token'], 1738: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1739: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 1740: ['\t    while ( ID != CHARNST )', ' empty character constant'], 1741: ['    printf ( STRING , ID [ CONST ] . ID )', ' expected  ;  before  return '], 1742: ['void ID ( int ID [ ID ] [ ID ] , int ID [ ID ] [ ] )', ' array type has incomplete element type  int[] '], 1743: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 1744: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 1745: ['    return ID ;', '  ID  undeclared '], 1746: ['        } printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 1747: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 1748: ['\t    if ( ID [ ID ] !=\\ CONST ) {', ' stray  \\  in program'], 1749: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 1750: ['\t     ID ++', ' expected  ;  before  }  token'], 1751: ['    ID ( ID [ ID ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 1752: [' printf ( STRING ID STRING ) ;  ', ' expected  )  before  ID '], 1753: [' if ( ID == ID != ID || ID != ID == ID || ID == ID != ID )   ', '  ID  undeclared '], 1754: ['        break ;', ' break statement not within loop or switch'], 1755: ['}', ' expected declaration or statement at end of input'], 1756: ['    ID = ( struct ID * ) malloc ( ID * sizeof ( struct ID ) ) ;', '  ID  undeclared '], 1757: [' printf ( STRING , ID )', ' expected  ;  before  return '], 1758: ['        printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 1759: ['\t        printf ( ID ( ID , ID ) ) ;', ' invalid use of void expression'], 1760: ['    float ID , ;', ' expected identifier or  (  before  ;  token'], 1761: ['    ID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 1762: ['    for ( ID = CONST ; ID , < ( CONST * ID ) ; ID = ID + CONST ) {', ' expected expression before  <  token'], 1763: ['    if ( ID ) {', '  ID  undeclared '], 1764: ['int ID = CONST', ' expected  ,  or  ;  before  while '], 1765: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 1766: ['\t       else ID ++ ;', '  else  without a previous  if '], 1767: ['    for ( ID = CONST ; ID ++ )', ' expected  ;  before  )  token'], 1768: ['    return CONST ;', ' incompatible types when returning type  int  but  struct birth_data  was expected'], 1769: ['        printf ( STRING )', ' expected  ;  before  }  token'], 1770: ['    int ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 1771: ['    if ( ( ID * ID ) + ( ID * ID ) = ( ID * ID ) )', ' lvalue required as left operand of assignment'], 1772: ['    ID ( ID , CONST ) ;', '  ID  undeclared '], 1773: ['           printf ( STRING , ID + CONST )', ' expected  ;  before  }  token'], 1774: [' printf ( STRING )   ', ' expected  ;  before  return '], 1775: ['\tID = ID ( ( ID - ID ) ^ CONST - ( ID - ID ) ^ CONST ) ;', ' invalid operands to binary ^ '], 1776: ['      while ( ( ID % CONST == CONST ) & ( & ID % CONST != CONST ) )', ' invalid operands to binary % '], 1777: ['    else break ;', ' break statement not within loop or switch'], 1778: ['}', ' expected declaration or statement at end of input'], 1779: ['\tgets ( ID , CONST , ID ) ;', ' too many arguments to function  gets '], 1780: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 1781: ['\tprintf ( % ID , ID ) ;', ' expected expression before  %  token'], 1782: ['printf ( STRING , * ( ID + ID ) )', ' expected  ;  before  }  token'], 1783: ['\tlong ID , ;', ' expected identifier or  (  before  ;  token'], 1784: ['        if ( ID [ ID ] != CHARST && ID [ ID ] != CHARNST ) {                  ', ' empty character constant'], 1785: ['       scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 1786: ['\t  ID < CONST', ' expected  ;  before  ID '], 1787: ['int main ( ) {', ' two or more data types in declaration specifiers'], 1788: ['        printf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  }  token'], 1789: ['      if ( ( ID ! / CONST ) ) { printf ( STRING ) ; }', ' expected  )  before  !  token'], 1790: ['    ID ( ID , ID + CONST , ID - CONST )', ' expected  ;  before  }  token'], 1791: ['\t    if ( ID ( ID [ ID ] , char ID ) ) {', ' expected expression before  CHAR '], 1792: ['    ID = malloc ( sizeof ( struct ID ) ) ;', ' incompatible types when assigning to type  struct node  from type  void * '], 1793: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 1794: ['    for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 1795: ['\tfor ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 1796: ['    if ( ID < CONST ) { ID = - ID } ;', ' expected  ;  before  }  token'], 1797: ['\tif ( ID = ID ) && ( ID = ID )', ' expected identifier before  (  token'], 1798: ['\t} else if {', ' expected  (  before  {  token'], 1799: ['\t    ID ++', ' expected  ;  before  }  token'], 1800: ['    printf ( STRING )', ' expected  ;  before  return '], 1801: ['    if ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST )', '  ID  undeclared '], 1802: ['        ID = ID + ID ;', '  ID  undeclared '], 1803: ['            else { printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 1804: ['    return ID ( ID , ID + CONST , ID ) ; }', ' too few arguments to function  ID '], 1805: ['\tscanf ( STRING , & ID )', ' expected  ;  before  ID '], 1806: ['\tprintf ( STRING , * CONST ) ;', ' invalid type argument of unary  *  '], 1807: ['\tfloat ID = CONST * CONST * ID ^ CONST ;', ' invalid operands to binary ^ '], 1808: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1809: ['    ID [ CONST ] = CONST', ' expected  ;  before  if '], 1810: ['    for ( ID >= CONST ; ID < )', ' expected expression before  )  token'], 1811: ['\t        ID ++', ' expected  ;  before  }  token'], 1812: ['    printf ( STRING )', ' expected  ;  before  return '], 1813: ['    if ( ID == CONST ) { return - CONST }', ' expected  ;  before  }  token'], 1814: ['        ID [ CONST ] = { CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST } ;', ' expected expression before  {  token'], 1815: ['}', ' expected declaration or statement at end of input'], 1816: ['             printf ( STRING , ID )', ' expected  ;  before  }  token'], 1817: ['\tfor ( ID = CONST ; ID < ID = CONST ; ID ++ )', ' lvalue required as left operand of assignment'], 1818: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 1819: ['}', ' expected  ; , identifier or  (  before  ID '], 1820: ['    for ( int ID = CONST ; ID < strlen ( ) ; ID ++ )', ' too few arguments to function  strlen '], 1821: ['    gets = ( ID ) ;', ' lvalue required as left operand of assignment'], 1822: ['        else if ( ( ID % ID ) != = CONST )', ' expected expression before  =  token'], 1823: ['    ID ( ID , ID + , ID - CONST ) ;', ' expected expression before  ,  token'], 1824: ['            printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 1825: ['printf ( STRING , ID )', ' expected  ;  before  return '], 1826: ['}', ' expected declaration or statement at end of input'], 1827: ['    printf ( STRING , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 1828: ['\t    printf ( STRING , STRING ID ) ;', ' expected  )  before  ID '], 1829: ['        else printf ( STRING ) ;', '  else  without a previous  if '], 1830: ['        printf ( STRING )', ' expected  ;  before  else '], 1831: ['    char ID = CHARST', ' expected  ,  or  ;  before  printf '], 1832: ['   float ID ', " expected  = , ',',  ; ,  asm  or  __attribute__  before  printf "], 1833: ['\tint ID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 1834: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 1835: ['\tint ID , ID , ;', ' expected identifier or  (  before  ;  token'], 1836: ['        if ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST && ID [ ID + CONST ] = ID [ ID + CONST ] - CONST )', ' lvalue required as left operand of assignment'], 1837: ['            if ( ID [ ID ] == ID ) { ID += CONST } ;', ' expected  ;  before  }  token'], 1838: ['       if ( ID [ ID ] == CHART )', '  ID  undeclared '], 1839: ['        for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 1840: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 1841: ['    }', ' expected  ; , identifier or  (  before  struct '], 1842: ['        ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 1843: ['\t    ID [ ID ] = CONST ;', ' subscripted value is neither array nor pointer nor vector'], 1844: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 1845: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  for '], 1846: ['    ID ++ } ;', ' expected  ;  before  }  token'], 1847: ['    scanf ( STRING , & ID , % ID , % ID ) ;', ' expected expression before  %  token'], 1848: ['           ID = ID', ' expected  ;  before  if '], 1849: ['\tprintf ( - CONST % CONST )', ' expected  ;  before  return '], 1850: ['\tID = ( char * * ) malloc ( ID * ID * sizeof ( char * ) ) ;', '  ID  undeclared '], 1851: ['    ID [ ID ] = ( char * ) malloc ( sizeof ( char * ) ) ;', '  ID  undeclared '], 1852: ['printf ( STRING , ID  STRING , ID ) ;', ' expected  )  before string constant'], 1853: ['        else ( ) {', ' expected expression before  )  token'], 1854: ['            printf ( STRING )', ' expected  ;  before  }  token'], 1855: ['else', '  else  without a previous  if '], 1856: ['printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 1857: ['printf ( STRING )', ' expected  ;  before  return '], 1858: ['\t        ID = CONST', ' expected  ;  before  break '], 1859: ['\tint ID = CONST ;', ' redeclaration of  ID  with no linkage'], 1860: ['     printf ( STRING , ID + ID ) ; }', '  ID  undeclared '], 1861: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 1862: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 1863: ['    printf ( STRING )', ' expected  ;  before  return '], 1864: ['}', ' expected declaration or statement at end of input'], 1865: ['\tprintf ( STRING , * ( ID + ID ) )', ' expected  ;  before  }  token'], 1866: ['    for ( int ID = CONST ; ID < ( ID ) ; ID ++ )', '  ID  undeclared '], 1867: ['    printf ( STRING )    ', ' expected  ;  before  }  token'], 1868: ['    else ( ID % CONST != CONST )', ' expected  ;  before  {  token'], 1869: ['        if ( ID ( ID , CONST , CONST ) == CONST )', ' too few arguments to function  ID '], 1870: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 1871: ['printf ( STRING , float ( ID ) ) ;', ' expected expression before  float '], 1872: ['\tID = ID ( ID , ID - ID , ID - CONST ) ;', ' assignment to expression with array type'], 1873: ['        ID [ ID ] = ID ( ID [ ] , ID , ID [ ID ] ) ;', ' expected expression before  ]  token'], 1874: ['        ID [ ID ] = CONST ;', ' subscripted value is neither array nor pointer nor vector'], 1875: ['}', ' expected declaration or statement at end of input'], 1876: [' for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 1877: ['\tchar ID = CHARST', ' expected  ,  or  ;  before  printf '], 1878: ['\tprintf ( STRING , * ID [ CONST ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 1879: ['\tID = ( ID * ID ) / CONST', ' expected  ;  before  printf '], 1880: ['    getchar ( ID ) ;', ' too many arguments to function  getchar '], 1881: ['for ( int ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 1882: ['     printf ( STRING )', ' expected  ;  before  return '], 1883: ['\t    if ( ID [ ID ] == CHART ) { ID = ID + CONST }', ' expected  ;  before  }  token'], 1884: ['                    if ( ID ) { ID [ CONST ] = ID ; ID [ CONST ] = ID } ;', ' expected  ;  before  }  token'], 1885: ['    scanf ( STRING , & ID )', ' expected  ;  before  return '], 1886: ['        ( ID == ID ) ? printf ( STRING , ID ) : ( ) ;', ' expected expression before  )  token'], 1887: ['        ID = ID - ID + CONST', ' expected  ;  before  printf '], 1888: ['ID = ( ID * ID ) / CONST', ' expected  ;  before  scanf '], 1889: ['                      printf ( STRING , ID -> ID )           ', ' expected  ;  before  ID '], 1890: ['            ID + ID = ( int * ) malloc ( sizeof ( int ) ) ;', ' lvalue required as left operand of assignment'], 1891: ['    for ( int ID = CONST ; ID <= ID ; ID ++ ) { ID = CONST', ' expected  ;  before  if '], 1892: ['       ID [ ID ] = & ID ;', '  ID  undeclared '], 1893: ['\tif ( ID [ ID ] == ID ) break ;', '  ID  undeclared '], 1894: ['    printf ( STRING , ID * ID )', ' expected  ;  before  return '], 1895: ['    if ( ID == ID )', '  ID  undeclared '], 1896: ['\tif ( ) {', ' expected expression before  )  token'], 1897: ['    printf ( STRING , ID , ID , ID , ID ID ) ;', ' expected  )  before  ID '], 1898: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 1899: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 1900: ['{   scanf ( STRING , & ID )', ' expected  ;  before  scanf '], 1901: ['}', ' expected declaration or statement at end of input'], 1902: ['   char ID [ ] ;', ' array size missing in  ID '], 1903: ['        ID [ ID ] = getchar', ' expected  ;  before  }  token'], 1904: ['\t    printf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 1905: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 1906: ['    if ( ( ID - ID ) <= CONST ) ) {', ' expected statement before  )  token'], 1907: ['        continue ; .                      ', ' expected expression before  .  token'], 1908: ['\tprintf ( ID ) ;', ' incompatible type for argument 1 of  printf '], 1909: ['        if ( ID % ID == CONST )', '  ID  undeclared '], 1910: ['    int ID = ID ( ID )', ' expected  ,  or  ;  before  printf '], 1911: ['\twhile ( ID != CHARNST && ID < CONST ) {', ' empty character constant'], 1912: ['\t        if ( ID [ ID ] [ ID ] > ID )', '  ID  undeclared '], 1913: ['        printf ( STRING )', ' expected  ;  before  switch '], 1914: ['}', ' expected  ; , identifier or  (  before  int '], 1915: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 1916: ['\tdouble ID = ID * CONST * CONST ;', '  ID  undeclared '], 1917: ['    float ID = float ( ID ) ;', ' expected expression before  float '], 1918: ['        ID ( ID , ID - CONST , ID , ID + CONST , ID ) ;', ' too few arguments to function  ID '], 1919: ['\twhile ( ID [ ID ] != ID )', '  ID  undeclared '], 1920: ['          scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 1921: ['    printf ( STRING )', ' expected  ;  before  ID '], 1922: ['int ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 1923: ['        ID ( ID + CONST , ID , ID )', ' expected  ;  before  }  token'], 1924: ['        ID = ID + ID', ' expected  ;  before  }  token'], 1925: ['int ID ( int ID , int ID , int ID , ) {', ' expected declaration specifiers or  ...  before  )  token'], 1926: ['    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 1927: ['\t        if ( ID == ID [ ID ] || ID == ID [ ID ] ) printf ( STRING , ID )   ', ' expected  ;  before  }  token'], 1928: ['\tfor ( ID = CONST ; ID != ID ; ID ++ )', '  ID  undeclared '], 1929: ['\t        ID ++', ' expected  ;  before  }  token'], 1930: ['    ID = ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 1931: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 1932: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 1933: ['        if ( ID [ ID ] == CHARNST ) printf ( STRING ) ;', ' empty character constant'], 1934: ['        ID += ID [ ID ] ;', '  ID  undeclared '], 1935: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 1936: ['    ID = ID ( ID , ID , ID ) ;', ' void value not ignored as it ought to be'], 1937: ['    double ID , ID ;', ' expected identifier or  (  before numeric constant'], 1938: ['              if ( ID ( ID , ID , ID ) != CONST ) {', ' too few arguments to function  ID '], 1939: ['        for ( ID = ID ; ID < CONST ) {', ' expected  ;  before  )  token'], 1940: ['           ID = ( ID - ID ) * * ( ID + ID ) ; break ', ' expected  ;  before  }  token'], 1941: ['void ID ( int ID [ ] , int ID , ID )', ' unknown type name  ID '], 1942: ['     static int ID = ID - CONST ;', ' initializer element is not constant'], 1943: ['    int ID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 1944: ['\t        ID ++', ' expected  ;  before  }  token'], 1945: ['\t    else if ( ID [ CONST * ID ] != / CONST ) printf ( STRING ) ;', ' expected expression before  ID  token'], 1946: ['    ID = CHART', ' expected  ;  before  ID '], 1947: ['                ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 1948: ['\tprintf ( STRING , ID ( ID ) ) ;', ' called object  ID  is not a function or function pointer'], 1949: ['ID = ID ;', '  ID  undeclared '], 1950: ['\t    ID = ID + int ID [ ID ] ;', ' expected expression before  int '], 1951: ['               ID [ ID ] [ ID ] [ ID ] = { ID + CONST , ID , ID } ;', ' expected expression before  {  token'], 1952: ['            for ( ID = CONST ; ID < ID [ CONST ] ; ID ++ )', '  ID  undeclared '], 1953: ['                printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 1954: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 1955: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 1956: ['}', ' expected  ; , identifier or  (  before  int '], 1957: ['        ID = CONST', ' expected  ;  before  for '], 1958: ['}', ' expected declaration or statement at end of input'], 1959: ['    printf ( STRING , ( ID -> ID ) ) ;', ' invalid type argument of  ->  '], 1960: ['ID = ( CHARST == CHARST ) + ( CHARST == CHARST ) + ( CHARST == CHARST ) + ( CHARST == CHARST ) + ( CHARST == CHARST )', ' expected  ;  before  printf '], 1961: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1962: ['    int ID = CONST * ID * ID * ID * ID ;', ' conflicting types for  ID '], 1963: ['   { printf ( STRING , ID ) ; return CONST }', ' expected  ;  before  }  token'], 1964: ['\t    for ( ID = CONST ; ID < CONST ID ; ID ++ )', ' invalid suffix "n" on integer constant'], 1965: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 1966: ['  printf ( STRING . ID , ID ) ;', ' request for member  ID  in something not a structure or union'], 1967: ['\tID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 1968: ['\t} printf ( STRING , ID )', ' expected  ;  before  return '], 1969: ['  printf ( STRING )', ' expected  ;  before  return '], 1970: ['\t ID = ID + ID * pow ( CONST , ID )', ' expected  ;  before  ID '], 1971: ['\tID = CONST', ' expected  ;  before  while '], 1972: ['                if ( ID [ ID + ID ] != ID [ ID ] ) {', '  ID  undeclared '], 1973: ['    ID = ID ( ID ) ;', ' too few arguments to function  ID '], 1974: ['\t    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 1975: ['    else if {', ' expected  (  before  {  token'], 1976: ['    printf ( STRING CONST , CONST , ID , CONST , CONST , ID , ID ) ;                                                       ', ' expected  )  before numeric constant'], 1977: [' if ( ( ID % CONST == CONST ) && ( ID % CONST != = CONST ) ) {', ' expected expression before  =  token'], 1978: ['\tprintf ( STRING , CONST )                                ', ' expected  ;  before  return '], 1979: ['    printf ( STRING , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 1980: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 1981: ['\t    if ( ID ( ID [ ] , CONST , ID ) == CONST )', ' expected expression before  ]  token'], 1982: ['    printf ( STRING , ( ID [ ID ] . ID ) , ( ID [ ID ] . ID ) , ( ID [ ID ] . ID ) ) ;', '  ID  undeclared '], 1983: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 1984: ['                ID ++', ' expected  ;  before  }  token'], 1985: ['}', ' expected declaration or statement at end of input'], 1986: ['    printf ( STRING )', ' expected  ;  before  return '], 1987: ['    if ( ( ID = ID ) & ( ID = ID ) )                                               ', ' invalid operands to binary & '], 1988: ['    float ID = ID ( CONST + ( ID * ID ) / CONST ) ;', ' called object  ID  is not a function or function pointer'], 1989: ['}', ' expected declaration or statement at end of input'], 1990: ['\t} printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 1991: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 1992: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 1993: ['    printf ( STRING )', ' expected  ;  before  return '], 1994: ['    if ( ID % CONST == CONST || ( ID %= = CONST && ID % CONST == CONST ) )', ' expected expression before  =  token'], 1995: ['    printf ( STRING , ID ( CONST + ( ( ID * ID ) / CONST ) ) , ID , ID ) ;', ' called object  ID  is not a function or function pointer'], 1996: ['scanf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 1997: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 1998: ['      ID = ID ', ' expected  ;  before  while '], 1999: ['    ID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 2000: ['    scanf ( STRING , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 2001: ['\t    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 2002: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 2003: ['    printf ( STRING , ID * ( printf ( STRING , ID ) ) ) ;', ' expected declaration or statement at end of input'], 2004: ['\tfloat ID = ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) )', ' expected  ,  or  ;  before  scanf '], 2005: ['        if ( ID [ ID ] == CHARNST ) {', ' empty character constant'], 2006: ['\tfor ( int ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 2007: ['   printf ( STRING , ID )', ' expected  ;  before  return '], 2008: ['    }        ', ' expected identifier or  (  before  }  token'], 2009: ['    if ( ID == CONST )', '  ID  undeclared '], 2010: ['                {  if ( ID [ ID ] [ ID ] ! CONST )', ' expected  )  before  !  token'], 2011: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 2012: ['       printf ( STRING , ID [ ID ] )  ', ' expected  ;  before  }  token'], 2013: ['\t    ID = ID + CONST', ' expected  ;  before  scanf '], 2014: ['}', ' expected declaration or statement at end of input'], 2015: ['        ID = ID ( ID )', ' expected  ;  before  if '], 2016: ['\t   {  ID = ID + ( ( ID + CONST ) / CONST )', ' expected  ;  before  ID '], 2017: ['        if ( ID [ ID ] > ID [ ID + CONST ] ) { ID ( ID + ID , ID + ID + CONST ) ; ID ++ }', ' expected  ;  before  }  token'], 2018: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 2019: ['         printf ( STRING , ID [ ID ] . ID )', ' expected  ;  before  }  token'], 2020: ['    return ID ( ID ) ;', ' too few arguments to function  ID '], 2021: ['    else if ( ID == ) {', ' expected expression before  )  token'], 2022: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 2023: ['        if ( CHARST <= ID )', ' expected expression before  }  token'], 2024: ['    ID = ID ( CONST + ( ID * ID / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 2025: ['\tID = ID * ( ID ^ CONST ) ;', ' invalid operands to binary ^ '], 2026: ['}', ' expected declaration or statement at end of input'], 2027: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2028: ['        { printf ( STRING , ID [ ID - ID ] , ID [ ID - ID ] )  continue ; }', ' expected  ;  before  continue '], 2029: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 2030: ['      printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 2031: ['    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 2032: ['        if ( ID % ID == ID )', '  ID  undeclared '], 2033: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 2034: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 2035: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 2036: ['\twhile ( ) {', ' expected expression before  )  token'], 2037: ['ID = ( struct ID * ) malloc ( ID * sizeof ( ID ) ) ;', '  ID  undeclared '], 2038: ['    ID = ID [ ID ] ;', '  ID  undeclared '], 2039: ['         printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 2040: ['printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 2041: ['      printf ( STRING , ID , ID * ) ;', ' expected expression before  )  token'], 2042: ['    printf ( STRING , ID )', ' expected  ;  before  for '], 2043: ['\t        scanf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 2044: ['            printf ( STRING )', ' expected  ;  before  ID '], 2045: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 2046: ['\tif ( ID == ID && ID == ID )', '  ID  undeclared '], 2047: ['    int ID = sizeof ( ID ) / sizeof ( int ) ;', '  ID  undeclared '], 2048: ['\tfor ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 2049: ['    char CHAR [ CONST ] ;                                    ', ' expected identifier or  (  before  \\x646f74 '], 2050: ['    else ( ID * ID != ID * ID ) {', ' expected  ;  before  {  token'], 2051: ['\tfor ( ID = CONST ; ID [ ID ] != CHART ; ID ++ ) {', '  ID  undeclared '], 2052: ['      printf ( STRING , CONST , - CONST , - CONST )', ' expected  ;  before  }  token'], 2053: ['            if ( * ( ( ID + ID * ID ) + ID ) == CONST )', '  ID  undeclared '], 2054: ['            if ( * ( ID + ID ) > * ( ID + ID ) && ID != ID && ID = ID )', ' lvalue required as left operand of assignment'], 2055: ['    scanf ( STRING & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 2056: ['        ID ( ID -> ID , ID ) ;', '  ID  undeclared '], 2057: ['    if ( ( ID >= ID && ID >= ID && ID < ID ) || ( ID = < ID && ID >= ID && ID >= ID ) || ( ID >= ID && ID <= ID && ID >= ID ) ) ', ' expected expression before  <  token'], 2058: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 2059: ['}', ' expected declaration or statement at end of input'], 2060: ['    float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 2061: ['\twhile ( ( ( ID != CHARNST ) || ( ID != CHART ) || ( ID != CHART ) ) && ( ID < CONST ) ) {', ' empty character constant'], 2062: ['    printf ( STRING ID [ CONST ] ) ;', ' expected  )  before  ID '], 2063: ['    for ( ID = CONST ; ID < ID ; ID ++ ) printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 2064: ['\t    printf ( STRING , ) ;', ' expected expression before  )  token'], 2065: ['\tprintf ( STRING )', ' expected  ;  before  return '], 2066: ['\tif ( ID == CONST ) ( printf ( STRING , ID ( ID [ ] , CONST ) ) ) ;', ' expected expression before  ]  token'], 2067: ['        int ID = ID ( ID ) ;', ' redeclaration of  ID  with no linkage'], 2068: ['    if ( ( ID >= ) && ( ID > ID ) && ( ID > ID ) )', ' expected expression before  )  token'], 2069: ['    ID = ID ( ID , CONST , ID - CONST ) ; ', '  ID  undeclared '], 2070: ['\tprintf ( STRING , ID , * ID )', ' expected  ;  before  scanf '], 2071: ['\tprintf ( STRING , CHARST - CHARST )', ' expected  ;  before  return '], 2072: ['\t    if ( ( ID % CONST == CONST ) && ( ! ID ( CHARST , ID , CHARST ) ) ) {', '  ID  undeclared '], 2073: ['\tprintf ( STRING STRING , ID , ) ;', ' expected expression before  )  token'], 2074: ['                    printf ( STRING , ID , ID )', ' expected  ;  before  if '], 2075: ['\telse printf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 2076: ['        ID += ID * ( pow ( ID , ID ) / ID ( ID ) ) ; ', '  ID  undeclared '], 2077: ['}', ' expected declaration or statement at end of input'], 2078: ['    printf ( STRING , ID , ID * ( ID * * CONST ) ) ;', ' invalid type argument of unary  *  '], 2079: ['                int ID [ ] [ ID ] ;', ' array size missing in  ID '], 2080: ['        if ( ID )', ' expected expression before  }  token'], 2081: ['\tprintf ( STRING . , ID , ID , ID , ID , ID ) ;', ' expected identifier before  ,  token'], 2082: ['    int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  for "], 2083: ['\tscanf ( STRING , & ID , & ID , & ID ) ;', '  ID  undeclared '], 2084: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 2085: ['\tint ID [ CONST ] = { CONST , CONST , CONST , CONST , CONST }', ' expected  ,  or  ;  before  ID '], 2086: ['printf ( STRING , ID , CONST - ID ) ;', '  ID  undeclared '], 2087: [' ID ++', ' expected  ;  before  }  token'], 2088: ['    printf ( STRING , ID -> ID ) ;', '  ID  undeclared '], 2089: ['}', ' expected declaration or statement at end of input'], 2090: ['            if ( ( ID > ID ) && ( ID < ID ) ) {', '  ID  undeclared '], 2091: ['        getchar ( ID [ ID ] ) ;', ' too many arguments to function  getchar '], 2092: ['    if ( ID = ID [ ID ] [ ID ] )                                              ', ' lvalue required as left operand of assignment'], 2093: ['           printf ( STRING , ID ) ;', '  ID  undeclared '], 2094: ['            ID ( ID + CONST , ID , ID + CONST , ID )', ' expected  ;  before  }  token'], 2095: ['    for ( ID = CONST ; ID !=\\ ID ; ID ++ )', ' stray  \\  in program'], 2096: ['}', ' expected declaration or statement at end of input'], 2097: ['int ID , ;                           ', ' expected identifier or  (  before  ;  token'], 2098: ['int main ( ) {', ' redefinition of  main '], 2099: ['    ID % CONST = ID ;', ' lvalue required as left operand of assignment'], 2100: ['    ID ( ID , ID , CONST , ID ) ;', ' too few arguments to function  ID '], 2101: ['    float ', ' expected identifier or  (  before  return '], 2102: ['    ID = ID ( CONST + ( ID * ID ) / CONST ) ;', ' called object  ID  is not a function or function pointer'], 2103: ['\tfor ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 2104: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 2105: ['\tscanf ( STRING , & ID [ ID ] , & ID [ ID ] ) ;', '  ID  undeclared '], 2106: ['     { if ( ( ID % CONST ) != CONST && ID %= = CONST )', ' expected expression before  =  token'], 2107: ['\t    ID [ ID ] = ID [ ID - CONST ] ;', '  ID  undeclared '], 2108: ['    printf ( STRING , ID ( ID ) )', ' expected  ;  before  return '], 2109: ['    ID ( ID ) ;', '  ID  undeclared '], 2110: ['    } else if ( ID + ID < ID ) || ( ID + ID < ID ) || ( ID + ID < ID ) {', ' expected expression before  ||  token'], 2111: ['}', ' expected  ; , identifier or  (  before  int '], 2112: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2113: ['\tint ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 2114: ['   ID = ( * struct ID ) * malloc ( CONST * sizeof ( struct ID ) ) ;', ' expected expression before  struct '], 2115: ['\t        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 2116: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2117: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 2118: ['\t        printf ( STRING , ID [ ID ] , ID [ ID ] ) ;', '  ID  undeclared '], 2119: ['    ID [ CONST ID - CONST ] = CHARST ;', ' invalid suffix "n" on integer constant'], 2120: ['                    if ID [ ID ] [ ID ] = ID [ ID ] [ ID ] ;', ' expected  (  before  ID '], 2121: ['\tID = sqrt ( CONST ID / sqrt ( CONST ) ) ;', ' invalid suffix "a" on integer constant'], 2122: ['}', ' expected declaration or statement at end of input'], 2123: ['    printf ( STRING , ID * ID * ID )', ' expected  ;  before  return '], 2124: ['}', ' expected declaration or statement at end of input'], 2125: ['            ID = CONST', ' expected  ;  before  printf '], 2126: ['            printf ( STRING , ( CONST ID + ID - ID + CONST ) % CONST ) ;', ' invalid operands to binary % '], 2127: ['            if ( ID = ID - ID + CONST || ID = ID ) {', ' lvalue required as left operand of assignment'], 2128: ['    float ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 2129: ['            ID ++ :', ' expected  ;  before  :  token'], 2130: ['scanf ( STRING , & ID , & CONST , & ID ) ;', ' lvalue required as unary  &  operand'], 2131: [' scanf ( STRING , & ) ;', ' expected expression before  )  token'], 2132: ['   printf ( STRING )', ' expected  ;  before  return '], 2133: ['\t   \t        for ( ID = CONST ; ID < ID - CONST ; CONST ++ ) {', ' lvalue required as increment operand'], 2134: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2135: ['        if ( ID ID ID )', ' expected  )  before  ID '], 2136: ['    if ( ID [ CONST * ID ] == CHARST || CHARST || CHARST || ID )', '  ID  undeclared '], 2137: ['               ID [ ID / CONST + ID ] = ID', ' expected  ;  before  }  token'], 2138: ['printf ( "                              ', ' missing terminating " character'], 2139: ['    else { return CONST }', ' expected  ;  before  }  token'], 2140: ['ID = CONST', ' expected  ;  before  while '], 2141: [' if ( ( ID == CONST ) && ( ID == CONST ) )', '  ID  undeclared '], 2142: ['\tprintf ( STRING , ID ++ ) ; ) ;', ' expected statement before  )  token'], 2143: ['        for ( int ID = ID ; ID < ( ID - CONST ) / CONST ; ID ++ )', '  ID  undeclared '], 2144: ['}', ' expected declaration or statement at end of input'], 2145: ['}', ' expected declaration or statement at end of input'], 2146: ['    int * ID , * ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 2147: ['} else ( ID == CONST ) {', ' expected  ;  before  {  token'], 2148: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 2149: ['    ID = ID * ID ; /', ' expected expression before  ID  token'], 2150: ['\telse ( ID != ID != ID ) {', ' expected  ;  before  {  token'], 2151: ['printf ( STRING )', ' expected  ;  before  return '], 2152: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 2153: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 2154: ['int ID = ;                   ', ' expected expression before  ;  token'], 2155: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 2156: ['else', '  else  without a previous  if '], 2157: ['        for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 2158: ['}', ' expected declaration or statement at end of input'], 2159: ['\tscanf ( STRING , & ID [ ID ] ) ; }', '  ID  undeclared '], 2160: ['         ID = ID + ( ID [ ID - ID + ID ] [ ID ] - CONST )', ' expected  ;  before  }  token'], 2161: ['    for ( ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 2162: ['        if ( ID != CONST && ID != ID && ID = ID - CONST ) {', ' lvalue required as left operand of assignment'], 2163: ['float ID = CONST / CONST * ID * ( ( ID * ID ) - ( ID * ID ) )', ' expected  ,  or  ;  before  printf '], 2164: ['        if ( ( ID [ ID ] == ID [ CONST ] ) && ID == CONST )', ' subscripted value is neither array nor pointer nor vector'], 2165: ['        printf ( STRING , ID . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 2166: ['        ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 2167: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2168: ['        for ( long ID = CONST ; ID <= ; ID ++ )', ' expected expression before  ;  token'], 2169: ['\tscanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 2170: ['    ID ( ID , CONST , CONST , ID , ID )', ' expected  ;  before  return '], 2171: ['\t    else { printf ( STRING ) : }', ' expected  ;  before  :  token'], 2172: ['    else ( ID == CONST )', ' expected  ;  before  {  token'], 2173: ['                ID ; }', '  ID  undeclared '], 2174: ['scanf ( STRING , & ID ) ;', '  ID  undeclared '], 2175: ['        if ( ID ( * ( ID + ID ) , * ID ) ) {', ' incompatible type for argument 1 of  ID '], 2176: ['\t    int ID , ID , ;                             ', ' expected identifier or  (  before  ;  token'], 2177: ['        if ( ID + ID >= ( ( * ID ) . ID . ID ) && ID + ID <= ( ( * ID ) . ID . ID ) )', '  struct rect  has no member named  ID ; did you mean  ID ?'], 2178: ['    printf ( STRING )', ' expected  ;  before  return '], 2179: ['    return ID', ' expected  ;  before  }  token'], 2180: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 2181: ['        else ID [ ID ] = ID [ ID ] ;', '  else  without a previous  if '], 2182: ['                ID ( ID , - CONST , CONST )', ' expected  ;  before  }  token'], 2183: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 2184: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', ' array subscript is not an integer'], 2185: [' int ID = ID ( ID , ID , ID [ ] ) ;', ' expected expression before  ]  token'], 2186: ['printf ( STRING ID ID & STRING ) ;', ' expected  )  before  ID '], 2187: ['\tID = ( ( ID / ( pow ( CONST , ( ID + CONST ) ) ) ) * CONST - ( ID / ( pow ( CONST , ID ) ) ) )', ' expected  ;  before  return '], 2188: ['        ID ( int ID ) ;', ' expected expression before  int '], 2189: ['printf ( STRING ) ; printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2190: ['        printf ( STRING )', ' expected  ;  before  for '], 2191: ['   ID = ID ( ID * ID = ID * ID ) ;', ' lvalue required as left operand of assignment'], 2192: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 2193: ['    else if ( ID == ID )', ' expected expression before  int '], 2194: ['        if ( ID * ID + ID * ID = ID * ID ) {', ' lvalue required as left operand of assignment'], 2195: [' ID ( ID == ID && ID == ID ) {', ' expected  ;  before  {  token'], 2196: ['     switch ( )', ' expected expression before  )  token'], 2197: ['} }', ' expected identifier or  (  before  }  token'], 2198: ['\tfor ( ID = CONST ; ID < ID ; ++ )', ' expected expression before  )  token'], 2199: ['    ID = CONST ID ;', ' invalid suffix "n" on integer constant'], 2200: ['\tint ID = , ID = CONST ;     ', ' expected expression before  ,  token'], 2201: ['    else if ( ID = > CONST && ID <= CONST )', ' expected expression before  >  token'], 2202: ['\t    putchar ( ID )', ' expected  ;  before  ID '], 2203: ['    if ( ID % CONST != CONST ) printf ( STRING )                                 ', ' expected  ;  before  while '], 2204: ['\t    printf ( STRING , ID [ ID ] . ID )', ' expected  ;  before  }  token'], 2205: ['        if ( ( CHAR CHARST ) && ( CHAR CHARST ) ) || ( CHAR CHARST ) || ( CHAR CHARST )', ' expected expression before  ||  token'], 2206: ['    int ID = strlen ( ID ) ;', ' redeclaration of  ID  with no linkage'], 2207: ['    scanf ( STRING , & ID )', ' expected  ;  before  while '], 2208: ['        ID [ ID ] = ID [ ID ]', ' expected  ;  before  return '], 2209: ['\t        if ( int ( ID [ ID ] == ID [ ID ] ) )', ' expected expression before  int '], 2210: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 2211: ['    printf ( STRING , ID ( ID , CONST , ID , * ID ) ) ; * /', ' expected expression before  ID  token'], 2212: ['   ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 2213: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 2214: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 2215: ['\tID ( ID , ID - ID )', ' expected  ;  before  ID '], 2216: ['        ID = ID + CONST', ' expected  ;  before  for '], 2217: ['        ID [ ID ] = putchar ( ) ;', ' too few arguments to function  putchar '], 2218: ['int main ( ) { printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2219: ['        ID += int ( ID [ ID ] - CHARST ) * ID ;', ' expected expression before  int '], 2220: ['                     ID = CONST   ', ' expected  ;  before  }  token'], 2221: ['\t        if ( ID [ ID ] == CHARNST )', ' empty character constant'], 2222: ['            if ( ID == CONST || ID == ID || ID == ID || ID == ID )', '  ID  undeclared '], 2223: ['    ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 2224: ['\t\tfor ( ID = CONST ; ID = > CONST ; ID -- ) {', ' expected expression before  >  token'], 2225: ['}', ' expected declaration or statement at end of input'], 2226: ['printf ( ID ) ;    ', ' incompatible type for argument 1 of  printf '], 2227: ['             ID [ ID ] [ ID ] = - ID [ ID ] [ ID ]', ' expected  ;  before  }  token'], 2228: ['\tif ( ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID = CONST ) printf ( STRING ) ;', ' lvalue required as left operand of assignment'], 2229: ['            ID = sqrt ( CONST * ID / CONST )', ' expected  ;  before  printf '], 2230: ['    ID [ ID - ID ] == ID [ CONST ]', ' expected  ;  before  return '], 2231: ['\t    ID [ ID % strlen ( ID ) ] = - CONST ; ', '  ID  undeclared '], 2232: ['\tprintf ( STRING , CHARST )', ' expected  ;  before  return '], 2233: ['     printf ( STRING , ID ) ;', '  ID  undeclared '], 2234: ['    return ID ;', '  ID  undeclared '], 2235: ['    printf ( STRING / ID , ID [ ID ] ) ;', '  ID  undeclared '], 2236: ['        if ( ID % ID == CONST ) return CONST', ' expected  ;  before  }  token'], 2237: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 2238: ['\t    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 2239: ['scanf ( STRING & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 2240: ['    if ( ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) < ID * ID ) {', '  ID  undeclared '], 2241: ['    ID [ ID ] = CHART ;', '  ID  undeclared '], 2242: ['        ID [ ID ] [ ID ] = CONST', ' expected  ;  before  printf '], 2243: ['\tID = ID ( int ID [ ID ] ) ;', ' expected expression before  int '], 2244: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 2245: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2246: ['    if ( ID == || CHARST || CHARST || CHARST || CHARST ) {', ' expected expression before  ||  token'], 2247: ['    int ID = ID ( ID ) ;', ' too few arguments to function  ID '], 2248: ['else', '  else  without a previous  if '], 2249: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 2250: ['\t            if ( ( CHAR>= CHARST && CHAR<= CHARST ) && ( CHAR CHART ID [ ID ] <= CHARST ) && ( ID [ ID ] >= CONST && ID [ ID ] <= CONST ) )', ' expected  )  before  ID '], 2251: ['         if ( ID + CONST = ID )', ' lvalue required as left operand of assignment'], 2252: ['int ID = CONST , ID = ID ;', '  ID  undeclared '], 2253: ['                    return ID ;', '  ID  undeclared '], 2254: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 2255: ['   printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2256: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  ID '], 2257: ['  printf ( STRING , ID )', ' expected  ;  before  return '], 2258: ['\tID = ( CONST / CONST ) ( ID * ID ) ;', ' called object is not a function or function pointer'], 2259: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 2260: ['    ID ( ID - CONST ) ;', ' too few arguments to function  ID '], 2261: ['    if ( ID ) {', '  ID  undeclared '], 2262: ['        printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 2263: ['\tscanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 2264: ['        ID ++', ' expected  ;  before  }  token'], 2265: ['printf ( ID = STRING , ID ) ;', '  ID  undeclared '], 2266: ['    ID = ID * ( ID )', ' expected  ;  before  printf '], 2267: ['scanf ( STRING , ID ) ;', '  ID  undeclared '], 2268: ['   char ID [ CONST ] = CHAR;', ' invalid initializer'], 2269: ['}', ' expected declaration or statement at end of input'], 2270: ['}', ' expected  ; , identifier or  (  before  int '], 2271: ['   if ( ID != CONST && ID [ ID - CONST ] < ID [ ID - CONST ] )', '  ID  undeclared '], 2272: ['    printf ( STRING )', ' expected  ;  before  if '], 2273: ['    abs ( ID ) = ( CONST / CONST ) * ( ( ID ) * ( ID ) ) ;', ' lvalue required as left operand of assignment'], 2274: ['{ printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 2275: ['\t        ID [ ID ] = CONST', ' expected  ;  before  for '], 2276: ['}', ' expected declaration or statement at end of input'], 2277: ['        ID [ ID ] = ID [ ID - ID ]', ' expected  ;  before  }  token'], 2278: ['            ID = ( ID + ID ) -> ID ;', '  ID  undeclared '], 2279: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 2280: ['    else', '  else  without a previous  if '], 2281: ['            printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 2282: ['    for ( ID = ID ; ID <= ID + ID , ID ++ ) {\t   ', ' expected  ;  before  )  token'], 2283: ['    ID = ID - ID', ' expected  ;  before  if '], 2284: ['    float ID = CONST', ' expected  ,  or  ;  before  ID '], 2285: ['if ( ID % CONST != CONST )', ' invalid operands to binary % '], 2286: ['    printf ( STRING , ID - ID ) ;', ' invalid operands to binary - '], 2287: ['   if ( ID == ID ) && ( ID != CONST ) return CONST ;', ' expected identifier before  (  token'], 2288: ['    if ( ID ID < CONST ) {', ' expected  )  before  ID '], 2289: [' int ID , ID , ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  scanf "], 2290: ['    ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 2291: ['\t    ID ( ID ) ;', ' too few arguments to function  ID '], 2292: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 2293: ['\t        if ( ( ID [ ID ] ==\\ CONST ) ) ;', ' stray  \\  in program'], 2294: ['\tfloat ID = ID * ( CONST + ( ID * ID ) / CONST ) ) ;', ' expected  ,  or  ;  before  )  token'], 2295: ['printf ( STRING , CHARST + CHART )', ' expected  ;  before  return '], 2296: ['        scanf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 2297: ['    printf ( STRING ID ) ;  ', ' expected  )  before  ID '], 2298: ['\t        putchar ( ID ) ;', '  ID  undeclared '], 2299: ['   for ( ID = CONST ; ID < CONST , ID ++ ) {', ' expected  ;  before  )  token'], 2300: ['            printf ( STRING )', ' expected  ;  before  }  token'], 2301: ['\tID [ ID ] = ID [ ID ] + ID - ( - CHARST + CHARST - CONST )', ' expected  ;  before  }  token'], 2302: ['    while ( )', ' expected expression before  )  token'], 2303: ['    while ( ( ID < CONST ) && ( ID !=\\ CONST ) )', ' stray  \\  in program'], 2304: ['    int ID = pow ( CONST , ID + CONST - ID ) * ID', ' expected  ,  or  ;  before  ID '], 2305: ['ID [ ID ] = ( int ) malloc ( CONST * sizeof ( int ) ) ;', ' incompatible types when assigning to type  struct point  from type  int '], 2306: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 2307: ['\tID = ( ID + CONST ) / CONST', ' expected  ;  before  for '], 2308: ['            if ( ( ID [ ID ] == ID [ ID ] ) || ( ID [ ID ] == ID [ ID ] ) || ( ID ( ID [ ID ] - ID [ ID ] ) ) == ID ( ID [ ID ]      - ID [ ID ] ) ) )', ' expected statement before  )  token'], 2309: ['    while ( )', ' expected expression before  )  token'], 2310: ['\tif ( ID * ID - ID * ID = CONST ) {', ' lvalue required as left operand of assignment'], 2311: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2312: ['    while ( ID < CONST && getchar != ID ) {', '  ID  undeclared '], 2313: ['\tif ( ID != ID ! && ID != ID && ID != ID )', ' expected  )  before  !  token'], 2314: ['    printf ( STRING , ID -> ID [ ID ] ) ;', '  ID  undeclared '], 2315: ['\tif ( ID [ ID ] ==\\ ID )', ' stray  \\  in program'], 2316: ['        ID = CHAR; printf ( STRING , ID )', ' expected  ;  before  if '], 2317: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 2318: [' else ( ID > ID )', ' expected  ;  before  {  token'], 2319: ['    ID ( ID [ ] , ID , ID + CONST ) ;', ' expected expression before  ]  token'], 2320: ['        scanf ( STRING , & ID [ ID ] . ID -> ID , & ID . ID -> ID ) ;', '  (struct list_entry *)&list_entries  is a pointer; did you mean to use  -> ?'], 2321: ['    printf ( STRING ID ID ) ;', ' expected  )  before numeric constant'], 2322: ['  else { ( ID % CONST == CONST )', ' expected  ;  before  printf '], 2323: ['      else if ( )', ' expected expression before  )  token'], 2324: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 2325: ['        else', ' expected expression before  }  token'], 2326: ['\t    if ( ID >= ID ) { printf ( STRING , ID ) ; ID ++ } ;', ' expected  ;  before  }  token'], 2327: ['                printf ( STRING , ID )', ' expected  ;  before  }  token'], 2328: ['    scanf ( STRING , & ID , & ID , & ID ) ;', '  ID  undeclared '], 2329: ['    ID = CONST , CONST , CONST ;', ' incompatible types when assigning to type  ID  {aka  struct day } from type  int '], 2330: ['\tID = int ( ID ) ;', ' expected expression before  int '], 2331: ['\tID ( ID , ID [ ] ) ;', ' expected expression before  ]  token'], 2332: ['}', ' expected declaration or statement at end of input'], 2333: ['\tscanf ( STRING , & ID , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 2334: ['\twhile ( ID [ ID ] != )', ' expected expression before  )  token'], 2335: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 2336: ['            printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 2337: ['    else ID ++', ' expected  ;  before  }  token'], 2338: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2339: ['\t    ID = ID - ID ;', '  ID  undeclared '], 2340: ['    ID = getchar ( )', ' expected  ;  before  for '], 2341: ['\t            ID [ ID ] = ID', ' expected  ;  before  ID '], 2342: ['            ID [ ID ] = ( ID - ID - ) * ( ID [ ID - CONST ] - ID ) ;                                  ', ' expected expression before  )  token'], 2343: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 2344: ['    scanf ( STRING ID ) ;', ' expected  )  before  ID '], 2345: ['        for ( ID = CONST ; ID <= ID , ID ++ ) ;', ' expected  ;  before  )  token'], 2346: ['            printf ( STRING ID ) ;', ' expected  )  before  ID '], 2347: ['\t    if ( == ID - CONST )', ' expected expression before  ==  token'], 2348: ['        ID = ID + ID ( ID [ ID ] ) * ID', ' expected  ;  before  }  token'], 2349: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 2350: ['\tfor ( ID = ; ID <= ID - CONST ; ID ++ )', ' expected expression before  ;  token'], 2351: ['        if ( ID [ ID ] , ID )', ' used struct type value where scalar is required'], 2352: ['} }', ' expected identifier or  (  before  }  token'], 2353: ['  else if ( ( ( ID > ID ) && ( ID > ID ) && ( ID > ID ) ) || ( ( ID > ID ) && ( ID > ID ) && ( ID > ID ) ) || ( ( ID > ID ) && ( ID > ID ) && ( ID > ID ) ) ) { printf ( STRING % ID , ID ) ; }', ' invalid operands to binary % '], 2354: ['\tscanf ( STRING , ID ) ;', '  ID  undeclared '], 2355: ['    float = ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) ;', ' expected identifier or  (  before  =  token'], 2356: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 2357: ['    ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 2358: ['}', ' expected declaration or statement at end of input'], 2359: ['\tint ID = ID , ID , ID , ID , ID , ID , ID ;', '  ID  undeclared '], 2360: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 2361: ['  printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 2362: ['            printf ( STRING )', ' expected  ;  before  }  token'], 2363: ['\t            ID [ CONST ] [ ID ] = ID [ CONST ] [ ID ]', ' expected  ;  before  }  token'], 2364: ['                printf ( STRING , ID , * ( ID + ID ) )', ' expected  ;  before  break '], 2365: ['   printf ( STRING )', ' expected  ;  before  return '], 2366: ['                    ID = ID + CONST', ' expected  ;  before  }  token'], 2367: ['            if ( ID ) {', '  ID  undeclared '], 2368: ['            for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 2369: ['    printf ( STRING , ID , ID , ID , ID , ID )', ' expected  ;  before  return '], 2370: ['\t       ID = CONST ;', '  ID  undeclared '], 2371: ['\t ID [ ID ] = CHART', ' expected  ;  before  printf '], 2372: ['\t                                if ( ID [ ID + CONST ] == ID [ ID + CONST ] ) printf ( STRING )', ' expected  ;  before  }  token'], 2373: ['else if', ' expected  (  before  {  token'], 2374: ['         ID = ID ( ID ) ;', '  ID  undeclared '], 2375: ['    printf ( STRING )', ' expected  ;  before  return '], 2376: ['\t    scanf ( STRING , & CHAR) ;', ' lvalue required as unary  &  operand'], 2377: ['          ID [ ID ] = int ( ( * ( ID + ID ) ) ) ;', ' expected expression before  int '], 2378: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2379: ['\t        if ( ( ID >= CONST && ID <= ID - CONST ) && ( ID = CONST || ID = ID ) ) {', ' lvalue required as left operand of assignment'], 2380: ['    ID ( ID ) ;', ' expected expression before  ID  token'], 2381: ['\t    for ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 2382: ['    printf ( STRING , ID )', ' expected  ;  before  while '], 2383: ['     int ID = CHARST ; int ID = ID ; ID = ID ;', ' redeclaration of  ID  with no linkage'], 2384: ['    for ( ID = CONST ; ID [ ID ] != < CHART ; ID ++ ) {', ' expected expression before  <  token'], 2385: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2386: ['    printf ( STRING , ID ( ID , ID ) ) ;', '  ID  undeclared '], 2387: ['    { { if ( ID % ID == CONST )', '  ID  undeclared '], 2388: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 2389: ['            ID --', ' expected  ;  before  }  token'], 2390: ['\t        if ( ID [ ID ] [ ID ] == CONST ) printf ( STRING , ID ) ;', '  ID  undeclared '], 2391: ['        if ( ! ID ( * ID , ID [ ID ] ) ) ID = ID [ ID ] ;', ' incompatible type for argument 2 of  ID '], 2392: ['        ID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 2393: ['    int ID = CONST', ' expected  ,  or  ;  before  while '], 2394: ['    for ( int ID = CONST ; < ID ; ID ++ )', ' expected expression before  <  token'], 2395: ['\t ID [ ID ] =   ', ' expected expression before  }  token'], 2396: ['        { ID [ ID ] = int ( ID [ ID ] ) - CONST ; ID ++ ; }', ' expected expression before  int '], 2397: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 2398: [' ID [ ID ] = CHART ;', '  ID  undeclared '], 2399: ['    }', ' expected identifier or  (  before  }  token'], 2400: ['\t    if ( ID = > CONST ) {', ' expected expression before  >  token'], 2401: ['ID = ID ( ( ID - CONST ) * ( ID - CONST ) )', ' expected  ;  before  ID '], 2402: ['printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 2403: ['\t    if ( CHARST <= ID [ CONST * ID ] && ID [ CONST * ID ] <= CHARST && CHARST <= ID [ CONST * ID + CONST ] && ID [ CONST * ID + CONST ] <= CHARST && ID [ CONST * ID + CONST ] == ID [ CONST * ID + CONST ] + CONST )', ' expected expression before  }  token'], 2404: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 2405: ['          ID ( ID , ID ) = ID [ CONST ] ;', ' lvalue required as left operand of assignment'], 2406: ['\t    continue', ' expected  ;  before  else '], 2407: ['}', ' expected declaration or statement at end of input'], 2408: ['    while ( )', ' expected expression before  )  token'], 2409: ['    for ( ID = CONST ; ID <= ID ; ID = ID + CONST ) { ID = CONST', ' expected  ;  before  for '], 2410: ['    printf ( STRING , ID ID ID ID ) ;', ' expected  )  before  ID '], 2411: ['    return ID ;', '  ID  undeclared '], 2412: ['        ID = ID * ID', ' expected  ;  before  }  token'], 2413: ['                else if ( ( ID [ ID - CONST ] [ ID ] == CONST ) || ( ID [ ID ] [ ID - CONST ] == CONST ) || ( ID [ ID + CONST ] ID [ ID ] == CONST ) || ( ID [ ID ] [ ID + CONST ] == CONST ) )', ' expected  )  before  ID '], 2414: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 2415: ['        ID ++', ' expected  ;  before  return '], 2416: ['    int ID , ID , ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 2417: ['if ( ( ID ) == ( ID ) ) { return CONST ; }', '  ID  undeclared '], 2418: ['           ID = ID [ ID ] [ ID ]', ' expected  ;  before  }  token'], 2419: ['    int ', ' expected identifier or  (  before  return '], 2420: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 2421: ['            ID = ID + CONST', ' expected  ;  before  }  token'], 2422: ['}', ' expected declaration or statement at end of input'], 2423: ['        ID = ID + ID', ' expected  ;  before  }  token'], 2424: ['    float ID = ID * ( ( ID ) ^ CONST - ( ID ) ^ CONST ) / CONST ;', ' invalid operands to binary ^ '], 2425: ['    ID = CONST * ID * ID', ' expected  ;  before  if '], 2426: ['if ID [ ID ] == CHARST', ' expected  (  before  ID '], 2427: ['         ID = ( ( ( CONST * ID + CONST ) * ( CONST * ID + CONST ) ) ^ ID ) / ID ( ID + CONST ) ;', ' invalid operands to binary ^ '], 2428: ['ID = { ID * ( ID * ID - ID * ID ) } / CONST ;', ' expected expression before  {  token'], 2429: ['scanf ( STRING , & CHARST ) ;', ' lvalue required as unary  &  operand'], 2430: ['}', ' expected declaration or statement at end of input'], 2431: ['printf ( STRING ID , ID , ID , ID ) ;    ', ' expected  )  before numeric constant'], 2432: ['    printf ( STRING , CONST * ID * ID * ID * ID / ID ) ;', '  ID  undeclared '], 2433: ['          ID = * ID ;', " incompatible types when assigning to type  struct node *  from type 'struct node'"], 2434: ['    { while ( * ( ID + ID ) != * ID && * ( ID + ID ) != CHART ) )', ' expected statement before  )  token'], 2435: ['printf ( STRING , ID CHART ) ;', ' expected  )  before  \\xa '], 2436: ['} }', ' expected declaration or statement at end of input'], 2437: ['\t if ( ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST || )', ' expected expression before  )  token'], 2438: [' ID . ID = ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 2439: ['\t    scanf ( STRING , & ID [ ] , & ID [ ] ) ;', ' expected expression before  ]  token'], 2440: ['        ID = ID + float ( ID ( ID , ID ) ) * ID ( - CONST , ID ) / ID ( ID ) ;', ' expected expression before  float '], 2441: ['                for ( int ID = CONST ; ( ID < ID = - ID ) && ( ID <= ID - ID ) ; ID ++ ) {', ' lvalue required as left operand of assignment'], 2442: ['    printf ( STRING ID [ CONST ] ) ;', ' expected  )  before  ID '], 2443: ['    \tfor ( int ID = CONST ; ID < CONST ; CONST ++ ) {', ' lvalue required as increment operand'], 2444: ['    while ( * ( ID -> ID ) != - CONST )', ' invalid operands to binary != '], 2445: ['       printf ( STRING , ID ) ;', '  ID  undeclared '], 2446: ['        else ID = CONST ; }', '  else  without a previous  if '], 2447: ['\tID ( ID , ID )', ' expected  ;  before  return '], 2448: ['\tfor ( ID = ID ; ID < ; ID ++ )', ' expected expression before  ;  token'], 2449: ['\tint ID = ID [ CONST ] , ID ;', ' redeclaration of  ID  with no linkage'], 2450: ['  else ( ID == ID )', ' expected  ;  before  printf '], 2451: ['    scanf ( STRING , & ID , & ID , & ID , & )', ' expected expression before  )  token'], 2452: ['\telse printf ( STRING )', ' expected  ;  before  return '], 2453: ['printf ( STRING )', ' expected  ;  before  return '], 2454: ['\t    if ( ID == CONST &&  ( ID [ ID [ ID ] ] < ID [ ID [ ID + CONST ] ] ) )', ' expected expression before  else '], 2455: ['           ID = return ID ( ID , ID + CONST , ID + CONST , ID , ID , CONST ) ;', ' expected expression before  return '], 2456: ['\tprintf ( STRING )', ' expected  ;  before  return '], 2457: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 2458: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 2459: ['    int ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 2460: ['void ID ( int ID ) ;', ' expected identifier or  (  before  {  token'], 2461: ['\t    int ID = ID ( CONST , ID + CONST - ID )', ' expected  ,  or  ;  before  ID '], 2462: ['    else if ( ID >= CONST ) && ( ID <= CONST ) {', ' expected identifier before  (  token'], 2463: ['   for ( ID = CONST ; ID < CONST , ID ++ ) {', ' expected  ;  before  )  token'], 2464: ['    ID = ID ( ID ) ;', ' void value not ignored as it ought to be'], 2465: ['\t        printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 2466: ['\tprintf ( STRING , * ID [ ID - CONST ] ) ;', ' invalid type argument of unary  *  '], 2467: ['            if ( ID < ( CONST ID + ID ) / CONST )', ' invalid suffix "n" on integer constant'], 2468: ['\t        ID ++ ; continue', ' expected  ;  before  }  token'], 2469: ['\t    scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 2470: ['    ID = ID . ID ;', ' incompatible types when assigning to type  struct node  from type  struct node * '], 2471: ['int main ( ) { printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2472: ['scanf ( STRING , ) ;', ' expected expression before  )  token'], 2473: ['\t    ID [ ID ] <= ( ID + CONST ) && ID [ ID ] >= ID ? ID ++ : ID = CONST ;    ', ' lvalue required as left operand of assignment'], 2474: ['int ID ( char ID [ ] || int ID [ ] ) {', " expected  ; , ',' or  )  before  ||  token"], 2475: ['}', ' expected declaration or statement at end of input'], 2476: ['    {   ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 2477: ['\tscanf ( STRING , ID , & ID )', ' expected  ;  before  ID '], 2478: ['{ for ( ID = CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 2479: ['\t            ID [ ID ] = ID + CONST', ' expected  ;  before  }  token'], 2480: ['\tint ID = strlen ( ID ) ;', '  ID  undeclared '], 2481: ['}', ' expected identifier or  (  before  }  token'], 2482: ['            return ID ( ID , ID - CONST , ID , ID , ID ) || ID ( ID , ID + CONST , ID , ID , ID ) || ID ( ID , ID , ID + CONST , ID , ID ) ;', '  ID  undeclared '], 2483: ['        printf ( STRING )', ' expected  ;  before  return '], 2484: ['    printf ( STRING , CHARNST ) ;', ' empty character constant'], 2485: ['    ID = { ID , ID , ID , ID , ID } ;', ' expected expression before  {  token'], 2486: ['    for ( ID = CONST ; ID [ ID ] != CHART , ID ++ ) ;', ' expected  ;  before  )  token'], 2487: ['        if ( ID [ ID ] == ID ) {', '  ID  undeclared '], 2488: ['        else if ( ( ID * ID ) = ( ( ID * ID ) + ( ID * ID ) ) )', ' lvalue required as left operand of assignment'], 2489: ['\tID ( ID , ID ) ;', '  ID  undeclared '], 2490: ['    printf ( STRING , CONST , CONST )', ' expected  ;  before  return '], 2491: ['void ID ( char int ID [ ] , int ID ) {', ' two or more data types in declaration specifiers'], 2492: ['\t    int  ID = ID ;', '  ID  undeclared '], 2493: ['    if ( ( ( ID * ID ) + ( ID * ID ) ) == ( ID * ID ) ) && ( ( ( ID * ID ) + ( ID * ID ) ) == ( ID * ID ) ) {', ' expected identifier before  (  token'], 2494: ['    else printf ( STRING ) ;', '  else  without a previous  if '], 2495: ['    ID ( CONST , CONST ) ;', ' too many arguments to function  ID '], 2496: ['        for ( ID = CONST ; ID < ID ) printf ( STRING ) ;', ' expected  ;  before  )  token'], 2497: ['\tID = ID ( ID , ID , ID ) % CONST ;', '  ID  undeclared '], 2498: [' for ( ID = ID ; ID = ID - CONST )', ' expected  ;  before  )  token'], 2499: ['        else ( ID == CONST )', ' expected  ;  before  {  token'], 2500: ['        printf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 2501: ['        while ( ID != ID ) && ( ID != CHART )', ' expected identifier before  (  token'], 2502: ['    int ID = ID ;', ' redeclaration of  ID  with no linkage'], 2503: ['            else { ID [ ID ] = ID [ ID ] ; ID ++ ; ID = ID + ID - ( ID + CONST ) }', ' expected  ;  before  }  token'], 2504: ['\t    if (  ( ID [ ID ] % CONST )  == CONST ) ID ++ ;', '  ID  undeclared '], 2505: ['    ID', ' expected  ;  before  return '], 2506: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 2507: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 2508: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2509: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2510: ['            ID = ID', ' expected  ;  before  return '], 2511: ['}', ' expected declaration or statement at end of input'], 2512: ['{ int ID = ID ;', '  ID  undeclared '], 2513: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2514: ['        }', ' expected expression before  ID  token'], 2515: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 2516: ['\t    printf ( STRING , ID ( ID [ ] , ID , ID ) ) ;', ' expected expression before  ]  token'], 2517: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 2518: ['\t    printf ( STRING , ) ;', ' expected expression before  )  token'], 2519: ['        if ( ID ( ID [ ] ) )', ' expected expression before  ]  token'], 2520: ['    ID = ID * ( ID ^ CONST ) ;', ' invalid operands to binary ^ '], 2521: ['\t        for ( ID = CONST ; ID < ( CONST ID + CONST ) ; ID ++ ) {', ' invalid operands to binary < '], 2522: ['    if ( ID == CONST )', '  ID  undeclared '], 2523: ['    getchar ( ID [ ID ] ) ;', ' too many arguments to function  getchar '], 2524: ['\t    scanf ( STRING , & ID [ ID ] ) ;', ' array subscript is not an integer'], 2525: ['    else if ( ID + ID > - CONST ID && ID - ID < CONST + ID )', ' invalid suffix "_err" on integer constant'], 2526: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2527: ['          printf ( STRING ID ) ; break ;', ' expected  )  before  ID '], 2528: ['\t    ID ( ID - ID , ID - ( ID - ID ) )', ' expected  ;  before  }  token'], 2529: ['    for ( int ID = ( ID > CONST ) ? ID [ ID - CONST ] + CONST : CONST ; ID < CONST ID ; ID ++ ) {', ' invalid suffix "n" on integer constant'], 2530: ['while ( ID [ ID ] != CHART && ID < ID && ID [ ID ] != CHART )', '  ID  undeclared '], 2531: ['        ID ( ID , ID , ID + CONST , ID , ID ) ; .             ', ' expected expression before  .  token'], 2532: ['\t else ( ID < CONST )', ' expected  ;  before  {  token'], 2533: ['    int ID , ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 2534: ['printf ( STRING ) ', ' expected  ;  before  return '], 2535: ['        else ( ( ID * ID ) + ( ID * ID ) < ( ID * ID ) ) {', ' expected  ;  before  {  token'], 2536: ['    int ID , ID ;', ' conflicting types for  ID '], 2537: ['    scanf ( STRING , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 2538: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2539: ['\tID ( ID [ ] [ ID ] , ID [ ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 2540: ['    }', ' expected identifier or  (  before  }  token'], 2541: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2542: ['\tscanf ( STRING , & int ID [ CONST ] ) ;', ' expected expression before  int '], 2543: ['    else {', '  else  without a previous  if '], 2544: ['            `   for ( ID = ( ID / CONST ) + CONST - ID ; ID <= ( ID / CONST ) + ID ; ID ++ )', ' stray  `  in program'], 2545: ['        ID = ID', ' expected  ;  before  ID '], 2546: ['if ( ID >= CHARST && ID <= ID )', '  ID  undeclared '], 2547: ['       ID = ID / CONST', ' expected  ;  before  }  token'], 2548: ['\twhile ( ID , ID < ID ) { }', '  ID  undeclared '], 2549: ['printf ( STRING , STRING , ID , ID ) ;', '  ID  undeclared '], 2550: ['        else ( ID % CONST != CONST )', ' expected  ;  before  printf '], 2551: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2552: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 2553: ['    if ( ID == CONST ) ;', '  ID  undeclared '], 2554: ['printf ( STRING )', ' expected  ;  before  return '], 2555: ['            printf ( STRING , ( ID -> ID [ ID ] ) )', ' expected  ;  before  ID '], 2556: ['    printf ( STRING )', ' expected  ;  before  return '], 2557: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 2558: ['    for ( int ID = CONST ; ID < CONST && ID ( ID ) ; ID ++ )', ' called object is not a function or function pointer'], 2559: ['            ID ++', ' expected  ;  before  }  token'], 2560: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 2561: ['    printf ( CHARNST ) ;', ' empty character constant'], 2562: ['\t    ID = CONST * ID', ' expected  ;  before  ID '], 2563: ['    ID ( CONST , CONST , CONST , CONST , ID )', ' expected  ;  before  return '], 2564: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 2565: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2566: ['}', ' expected declaration or statement at end of input'], 2567: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2568: ['    printf ( STRING , ID [ CONST ] [ ] ) ;', ' expected expression before  ]  token'], 2569: ['    printf ( STRING )', ' expected  ;  before  return '], 2570: ['    if ( ID == CHARST )', '  ID  undeclared '], 2571: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 2572: ['\tif ( ID == ID - CONST ) { }', '  ID  undeclared '], 2573: ['\tfor', ' expected  (  before  printf '], 2574: ['        printf ( STRING , ID [ ID ] ID [ ID ] ) ;', ' expected  )  before  ID '], 2575: ['    printf ( STRING , & ID )', ' expected  ;  before  return '], 2576: ['\tID = ID ( CONST + ( ID * ID / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 2577: ['int ID , ID = CONST , * ID ; char * * ID , * ID , ( * ID ) [ CONST ] , * * ID ;', ' conflicting types for  ID '], 2578: ['    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 2579: ['printf ( STRING )', ' expected  ;  before  return '], 2580: ['  return CONST', ' expected  ;  before  else '], 2581: ['    if ( ID > ID ) return ', ' expected expression before  if '], 2582: ['\t        if ( ID = > ID )', ' expected expression before  >  token'], 2583: ['}', ' expected declaration or statement at end of input'], 2584: ['}', ' expected declaration or statement at end of input'], 2585: ['    ID = ID + CHARST', ' expected  ;  before  for '], 2586: ['    else printf ( STRING )                                 ', ' expected  ;  before  return '], 2587: ['\t    if ( ID > ID )', '  ID  undeclared '], 2588: ['\tID ( ID [ ] ) ;', ' expected expression before  ]  token'], 2589: ['    else return ID [ ID ] ID [ ID - CONST ] ;', ' expected  ;  before  ID '], 2590: ['\tscanf ( STRING , ID ) ; scanf ( STRING , & ID ) ; scanf ( STRING , & ID ) scanf ( STRING , ID ) ;', ' expected  ;  before  scanf '], 2591: ['\tint ', ' expected identifier or  (  before  return '], 2592: ['\t    ID ++', ' expected  ;  before  }  token'], 2593: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 2594: ['}', ' expected declaration or statement at end of input'], 2595: ['       if ( ID == ID ) ID ( ID , ID )', ' expected  ;  before  if '], 2596: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2597: ['        else ( ID [ ID ] == ID [ ID - CONST ] )', ' expected  ;  before  printf '], 2598: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 2599: ['\t     { printf ( STRING )', ' expected  ;  before  continue '], 2600: ['}', ' expected declaration or statement at end of input'], 2601: ['    }', ' expected declaration or statement at end of input'], 2602: ['            ID [ ID ] = ID', ' expected  ;  before  if '], 2603: ['\t        printf ( STRING , ID [ ID ] )', ' expected  ;  before  break '], 2604: ['        printf ( STRING , CHAR )', ' expected  ;  before  }  token'], 2605: ['                while ( ID = ID && ID = ID && ID = ID ) {', ' lvalue required as left operand of assignment'], 2606: ['    printf ( STRING , ID [ ] ) ; return ID ( ID , ID - CONST ) ;', ' expected expression before  ]  token'], 2607: ['     ID [ CONST * ( ID ) - ID ] = ID ;', '  ID  undeclared '], 2608: ['    float ID = ID ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;', ' invalid operands to binary ^ '], 2609: ['scanf ( STRING ID ) ;', ' expected  )  before  ID '], 2610: ['scanf ( STRING , ID )', ' expected  ;  before  printf '], 2611: ['\tscanf ( STRING & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 2612: ['        if ( ID [ ID ] == ID )', '  ID  undeclared '], 2613: ['\t        ID [ ID + ID - ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 2614: ['    if ( ID = CHARST && ID = CHARST ) {', ' lvalue required as left operand of assignment'], 2615: ['   int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 2616: ['    scanf ( STRING , & ID & ID , & ID ) ;', ' invalid operands to binary & '], 2617: ['        ID ++', ' expected  ;  before  }  token'], 2618: ['    char ID = ID ;', '  ID  undeclared '], 2619: ['        if ( ID [ ID ] > ID )', '  ID  undeclared '], 2620: ['         else\t printf ( STRING ) ;', '  else  without a previous  if '], 2621: ['    ID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 2622: ['    if ( ID [ ID ] - ID [ ID - CONST ] = ID [ ID ] - ID [ ID - CONST ] )', ' lvalue required as left operand of assignment'], 2623: ['    for ( int ID = CONST ; ID [ ID ] != CHART ; ID ++ )', ' lvalue required as increment operand'], 2624: ['\t        ID [ ID ] [ CONST - ID ] = ID [ ID ] [ ID ]', ' expected  ;  before  }  token'], 2625: ['    for ( ID = ID ; ID ++ )', ' expected  ;  before  )  token'], 2626: ['            if ( ID [ ID ] == ) {', ' expected expression before  )  token'], 2627: ['\tif ( ID = > ID ) {', ' expected expression before  >  token'], 2628: ['\twhile ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 2629: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 2630: ['\tint ID [ ( ID > ( ID + CONST ) ) ? ID : ( ID + CONST ) ] = { } , ID [ ID ] ;', ' variable-sized object may not be initialized'], 2631: ['    ID ( ID , ID [ ] , ID , ID [ ] , ID [ ] ) ;', ' expected expression before  ]  token'], 2632: ['    float ID = abs ( ID ) + abs ( ID ) + ( ID )', ' expected  ,  or  ;  before  printf '], 2633: ['\tfor ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 2634: ['\t    if ( ID == CONST ) {', '  ID  undeclared '], 2635: ['{ if ( ID == CONST || ID = CONST || ID = CONST ) { ID = CONST ; } else {', ' lvalue required as left operand of assignment'], 2636: [' ID = ID ( ID [ ] , ID [ ] , ID , ID ) ;', ' expected expression before  ]  token'], 2637: ['    char ID = CHART', ' expected  ,  or  ;  before  printf '], 2638: ['    if ( ( ID . ID < ID . ID ) || ( ( ID . ID == ID . ID ) && ( ID . ID < ID . ID ) ) || ( ( ID . ID == ID . ID ) && ( ID . ID == ID . ID ) && ( ID . ID < ID . ID ) ) )', '  ID  {aka  struct birth_data } has no member named  ID '], 2639: ['            if ( ID [ ] == ID [ ID ] ) ', ' expected expression before  ]  token'], 2640: ['                   ID [ ID ] = ID ;', '  ID  undeclared '], 2641: ['\tprintf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  return '], 2642: ['            scanf ( STRING , * ID [ ID ] [ ID ] ) ;', ' invalid type argument of unary  *  '], 2643: ['        ID = ID ( ID ) ;', ' too few arguments to function  ID '], 2644: ['if ( ID ( ( ( ID - ID ) * ( ID - ID ) ) + ( ( ID - ID ) * ( ID - ID ) ) ) = < ID ) {', ' expected expression before  <  token'], 2645: ['    ID += ID [ ID ] ;', '  ID  undeclared '], 2646: ['\tfor ( int ID = CONST ; <= ID ; ID ++ )', ' expected expression before  <=  token'], 2647: ['                ID ++ ;                                                                                                                                                                                                                                 ', '  ID  undeclared '], 2648: ['ID = & ID ;', '  ID  undeclared '], 2649: ['        ID = ID [ ID ] + ID ;', '  ID  undeclared '], 2650: ['    while ( ID != = CONST ) {', ' expected expression before  =  token'], 2651: ['int ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 2652: ['        ID ( ID , ID + CONST , ID ) ;', ' too few arguments to function  ID '], 2653: ['printf ( STRING , ID ID ID ) ;', ' expected  )  before numeric constant'], 2654: ['        } -', ' expected expression before  }  token'], 2655: ['int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 2656: ['}', ' expected declaration or statement at end of input'], 2657: ['    else return - CONST ;', '  else  without a previous  if '], 2658: ['\t    ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 2659: ['printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 2660: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 2661: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 2662: ['    putchar ( ID [ ID ] ) ;', '  ID  undeclared '], 2663: ['    if ( ID [ ID ] > ID )', '  ID  undeclared '], 2664: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2665: ['\t    ID [ ID ] [ ID ] = CONST + ID ( ID [ ID - CONST ] [ ID ] , ID [ ID ] [ ID - CONST ] , ID [ ID - CONST ] [ ID - CONST ] )', ' expected  ;  before  }  token'], 2666: ['      for ( ID = CONST ; ID [ ID ] != CHARST )', ' expected  ;  before  )  token'], 2667: ['    printf ( STRING )', ' expected  ;  before  return '], 2668: ['\telse {', '  else  without a previous  if '], 2669: ['    for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 2670: ['    else', '  else  without a previous  if '], 2671: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 2672: ['\tint ID = getchar ( ) ;', ' redeclaration of  ID  with no linkage'], 2673: ['\telse ( ID == CONST ) {', ' expected  ;  before  {  token'], 2674: ['    ID ( ID , ID , ID )', ' expected  ;  before  return '], 2675: ['\tint ID [ ID ] , ID [ ID ] , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 2676: ['        printf ( STRING , ( * ID ) . ID ) ;', '  ID  undeclared '], 2677: ['    ID = ID ( ID , ID , ID , ID , ID )', ' expected  ;  before  printf '], 2678: ['          { for ( ID = CONST ; ID = CONST * ID - CONST )', ' expected  ;  before  )  token'], 2679: ['\tfor ( ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 2680: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 2681: ['\tprintf ( STRING , ( ID [ ID ] < CHARST ) || ( ID [ ID ] > CHARST && ID [ ID ] < CHARST ) || ( ID [ ID ] > CHARST ) )', ' expected  ;  before  return '], 2682: ['    for ( ID = CONST ; ID <= ; ID -- ) {', ' expected expression before  ;  token'], 2683: ['\t    for ( ID = CONST ; ID <= ( CONST ID - CONST ) ; ID ++ )', ' invalid suffix "a" on integer constant'], 2684: ['        if ( ID [ ID ] = > ID )', ' expected expression before  >  token'], 2685: ['            break', ' expected  ;  before  }  token'], 2686: ['if ( pow ( CONST , ID ) <= ID ) && ( ID <= pow ( CONST , ID + CONST ) )', ' expected identifier before  (  token'], 2687: ['int main ( ) { printf ( STRING CONST / CONST * CONST * CONST * CONST ) ;', ' expected  )  before numeric constant'], 2688: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2689: ['\tfor', ' expected  (  before  return '], 2690: ['\t   for ( ID = ID - CONST ; ID < ID ; ID = ID - CONST )', ' expected expression before  int '], 2691: ['\tint ID = ID ( ID , CONST )', ' expected  ,  or  ;  before  printf '], 2692: ['        printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 2693: ['\twhile ( ID [ ID ] != CHART )', '  ID  undeclared '], 2694: ['    float ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 2695: ['    else if ( )', ' expected expression before  )  token'], 2696: ['int ID ( int ID , )', ' expected declaration specifiers or  ...  before  )  token'], 2697: ['\t    printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 2698: ['        ID = ID ( ID + ID , ID , ID )', ' expected  ;  before  if '], 2699: ['     ` printf ( STRING , ID [ ID ] ) ;', ' stray  `  in program'], 2700: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 2701: ['    return ID [ CONST ]', ' expected  ;  before  }  token'], 2702: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 2703: ['\tfor ( int ID = CONST ; ID < ID - CONST ; ID ++ )', '  ID  undeclared '], 2704: ['    return ID ( ID )', ' expected  ;  before  }  token'], 2705: ['                ID [ ID ] [ ID ] = ( CONST + ID ( ID [ ID - CONST ] [ ID ] , ID [ ID ] [ ID - CONST ] , ID [ ID - CONST ] [ ID - CONST ] ) )', ' expected  ;  before  }  token'], 2706: ['        ID = ID * ID ; printf ( STRING , ID )', ' expected  ;  before  }  token'], 2707: ['        ID = CONST', ' expected  ;  before  return '], 2708: ['     if ( ID * ID * ID * ID == CONST )', ' expected expression before  else '], 2709: ['           ID [ ID ] = CONST', ' expected  ;  before  for '], 2710: ['\tscanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 2711: ['        else if ( ( ID * ID ) = ( ID * ID ) + ( ID * ID ) || ( ID * ID ) = ( ID * ID ) + ( ID * ID ) || ( ID * ID ) = ( ID * ID ) + ( ID * ID ) )', ' lvalue required as left operand of assignment'], 2712: ['\t        if ( ID == CONST && ID == CONST &&  ID = ID == ID )', ' lvalue required as left operand of assignment'], 2713: ['    if ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST && ID [ ID + CONST ] <= CHARST && ID [ ID + CONST ] >= CHARST && ID [ ID + CONST ] = ID [ ID + CONST ] - CONST )    ', ' lvalue required as left operand of assignment'], 2714: ['    printf ( STRING , ID ( ID ) ) ;', ' invalid use of void expression'], 2715: ['    ID = sqrt ( CONST * ( ID CONST / CONST ) ) ;', ' expected  )  before numeric constant'], 2716: ['\twhile ( ID ! < CONST ) {', ' expected  )  before  !  token'], 2717: ['            printf ( STRING )', ' expected  ;  before  }  token'], 2718: ['    ID ( ID [ ID ] [ ID ] ) ;', ' too few arguments to function  ID '], 2719: ['\t    ID = ID + ID ( ID , ID , ID , ) ;', ' expected expression before  )  token'], 2720: [' else ( ID = CONST ) ; {', '  else  without a previous  if '], 2721: ['}', ' expected  ; , identifier or  (  before  int '], 2722: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', ' subscripted value is neither array nor pointer nor vector'], 2723: [' int ID , ;', ' expected identifier or  (  before  ;  token'], 2724: ['        ID = ID + ID - ( ID * CONST ) ;', '  ID  undeclared '], 2725: ['    if ( ID ( ID , ID , ID ) == CONST ) {', '  ID  undeclared '], 2726: ['    ID ( ID , ID + CONST , ID ) ;', ' too many arguments to function  ID '], 2727: ['\t  printf ( STRING , ID )', ' expected  ;  before  }  token'], 2728: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2729: ['    int ID = CONST ID - CONST ;', ' invalid suffix "n" on integer constant'], 2730: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 2731: ['    float ID = ID + ID + sqrt ( ( ID * ID ) + ( ID * ID ) ) ;', '  ID  undeclared '], 2732: ['    scanf ( STRING , & ID ) ; ) ;', ' expected statement before  )  token'], 2733: ['\t            printf ( STRING )', ' expected  ;  before  }  token'], 2734: ['\tint ID ;', ' redeclaration of  ID  with no linkage'], 2735: ['    float ID = ID ( ( ID - CONST ) * ( ID - CONST ) + ( ID - CONST ) * ( ID - CONST ) )', ' expected  ,  or  ;  before  ID '], 2736: ['            if ( ID [ ID ] > ID [ ID ] )', '  ID  undeclared '], 2737: ['                ID ( & ID [ ID ] , & ID [ ID ] ) ;', '  ID  undeclared '], 2738: ['\t        ID = ID ( ID [ ID ] , ID [ ID + CONST ] , ID [ ID + CONST ] ) ;', '  ID  undeclared '], 2739: ['printf ( STRING )   ', ' expected  ;  before  return '], 2740: ['ID = ID * ID * ID ;', '  ID  undeclared '], 2741: ['    return ( ID ) ;', '  ID  undeclared '], 2742: ['\tfloat ID = sqrt ( ( CONST ID ) / CONST ) ;', ' invalid suffix "ar" on integer constant'], 2743: ['                    printf ( STRING , * ( ID + ID ) )', ' expected  ;  before  }  token'], 2744: ['        for ( int ID = CONST ; ID < ID - CONST ) {', ' expected  ;  before  )  token'], 2745: ['    ID ( ID , ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 2746: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 2747: ['    for ( ID = CHARST ; ID <= ; ID ++ ) {', ' expected expression before  ;  token'], 2748: ['    ID -> ID = ID ;', '  ID  undeclared '], 2749: ['            printf ( STRING ID -> ID ) ;', ' expected  )  before  ID '], 2750: ['\twhile ( ID [ ID ] != ID )', '  ID  undeclared '], 2751: [' else if ( ID >= CONST && ID <= CONST )', '  else  without a previous  if '], 2752: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 2753: ['                ID [ ID ] = ID ( ID , ID ) + CONST ;', ' called object  ID  is not a function or function pointer'], 2754: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 2755: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 2756: ['             ID [ ID ] = ID [ ID ] + ID [ ID ] [ ID ] ;', '  ID  undeclared '], 2757: ['    for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 2758: ['# ID < ID . ID >', ' invalid preprocessing directive #inlcude; did you mean #include?'], 2759: ['\tchar ID = ID ;', '  ID  undeclared '], 2760: ['        else if (  ID == ID  )', '  else  without a previous  if '], 2761: ['    if ( ( ID ( ID ) ) ( ID ( ID - ID ) ) )                             ', ' called object is not a function or function pointer'], 2762: ['                printf ( STRING )', ' expected  ;  before  }  token'], 2763: ['             if ( ID [ ID ] . ID = > ID [ ID ] . ID ) {', ' expected expression before  >  token'], 2764: ['        scanf ( STRING < & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 2765: ['         if ( ID == - CONST ) && ( ID == - CONST )', ' expected identifier before  (  token'], 2766: ['\tscanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 2767: ['}', ' expected declaration or statement at end of input'], 2768: ['\t        scanf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 2769: ['         if ( ( ID % ID ) != = CONST )', ' expected expression before  =  token'], 2770: ['    ID = ID ;', '  ID  undeclared '], 2771: ['    else ( ID >= CHARST ) {', ' expected  ;  before  {  token'], 2772: ['   int ID = CHARST - CHARST', ' expected  ,  or  ;  before  printf '], 2773: ['    for ( ID = CONST ; ID > CONST ; ID = ( ID * CONST ) + ID % CONST , ID = ID / CONST ) { } printf ( STRING , ID )', ' expected  ;  before  if '], 2774: ['printf ( STRING )', ' expected  ;  before  return '], 2775: ['\tID ( ID [ ] [ CONST ] , ID , ID ) ;', ' expected expression before  ]  token'], 2776: ['\tprintf ( STRING STRING , ID STRING ) ;', ' expected  )  before string constant'], 2777: ['        printf ( STRING , ( ID + ID ) -> ID , ( ID + ID ) -> ID )', ' expected  ;  before  }  token'], 2778: ['\tint ID , ID , ID = , ID ;', ' expected expression before  ,  token'], 2779: ['    if ( ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 2780: ['    if ( )', ' expected expression before  )  token'], 2781: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2782: ['    printf ( STRING , CHARST )', ' expected  ;  before  }  token'], 2783: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 2784: ['            else if ( ID % CONST != CONST ) {', '  else  without a previous  if '], 2785: ['int ID ( int ID , int ID , ID )', ' expected declaration specifiers or  ...  before  ID '], 2786: ['\tint ID , ID , ID , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 2787: ['\t    for ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 2788: ['    free ID ;', ' expected  ;  before  ID '], 2789: ['    if ( ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 2790: ['    ID = ID * ( CONST + ( ( ID * ID ) / CONST ) )', ' expected  ;  before  printf '], 2791: ['}', ' expected declaration or statement at end of input'], 2792: ['    printf ( STRING , CHAR    return CONST ;', ' expected  ;  before  return '], 2793: ['\t        ID [ ID ] = CHAR }', ' expected  ;  before  }  token'], 2794: ['    else ( ID > ID && ID > ID && ID > ID && ID > ID && ID > ID ) {', ' expected  ;  before  {  token'], 2795: [' int ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 2796: ['    printf ( STRING ID [ CONST ] [ CONST ] ) ;', ' expected  )  before  ID '], 2797: [' for ( ID = CONST ; ID <= CONST , ID ++ )', ' expected  ;  before  )  token'], 2798: ['        ID = getchar ( ) ;', ' assignment to expression with array type'], 2799: ['     if else ( ID != CONST )', ' expected  (  before  else '], 2800: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 2801: ['\t else ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST )', ' expected  ;  before  {  token'], 2802: ['scanf ( STRING , ID , ID , ID )', ' expected  ;  before  printf '], 2803: ['}', ' expected  ; , identifier or  (  before  int '], 2804: ['    ID = ID ( ID -> ID , ID ) ;', "  struct mrk  has no member named  ID ; did you mean 'mt'?"], 2805: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 2806: ['\tif ( ID == CONST && ID != CHARNST ) {', ' empty character constant'], 2807: ['\t    printf ( STRING , ID )', ' expected  ;  before  while '], 2808: ['    } printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 2809: ['}', ' expected declaration or statement at end of input'], 2810: ['\tprintf ( STRING STRING , ID STRING STRING , ID STRING STRING , ID  STRING ) ;', ' expected  )  before string constant'], 2811: ['        ID = ID ( CONST - ( ID / ID ) ) ;', ' called object  ID  is not a function or function pointer'], 2812: ['        int * ID [ ID ] = ( int * ) malloc ( CONST * sizeof ( int ) ) ;', ' variable-sized object may not be initialized'], 2813: ['    if ( )', ' expected expression before  )  token'], 2814: ['\tprintf ( STRING )', ' expected  ;  before  return '], 2815: ['printf ( STRING )', ' expected  ;  before  return '], 2816: ['    for ( ID = CONST ; ID < CONST ID ; ID ++ ) {', ' invalid suffix "n" on integer constant'], 2817: ['else', '  else  without a previous  if '], 2818: ['    scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 2819: ['    while ( * ( ID + ID ) != CHART && * ( * ( ID + ID ) != CHART ) ) {', ' invalid type argument of unary  *  '], 2820: ['        case CONST : printf ( STRING ) ;', ' case label not within a switch statement'], 2821: ['    printf ( STRING , CONST )', ' expected  ;  before  return '], 2822: ['\tfor ( int ID = ID ; ID <= ID * ID ; ID ++ )', '  ID  undeclared '], 2823: ['                while ( ID [ ID + ID ] [ ID + ID ] != CONST && ) {', ' expected expression before  )  token'], 2824: ['    ID = ID * ID', ' expected  ;  before  if '], 2825: ['    break ;', ' break statement not within loop or switch'], 2826: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 2827: ['   ID = int ( ID ) - CONST ;', ' expected expression before  int '], 2828: ['    printf ( STRING )', ' expected  ;  before  return '], 2829: ['}', ' expected identifier or  (  before  }  token'], 2830: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 2831: ['    printf ( STRING , ID * ID * ID )', ' expected  ;  before  return '], 2832: ['float ID = ID * ID', ' expected  ,  or  ;  before  printf '], 2833: ['    ID ( ID , CONST , ID ) ;', '  ID  undeclared '], 2834: ['           for ( int ID = ID ; ID < CONST ID ; ID ++ ) {', ' invalid suffix "n" on integer constant'], 2835: ['                if ( ID [ ID ] . ID < ID [ ID ] . ID ) {', '  ID  {aka  struct stud } has no member named  ID ; did you mean  ID ?'], 2836: ['    ID = ( int * ) malloc ( sizeof ( int ) * ( ID + ID + ID ) ) ;', '  ID  undeclared '], 2837: ['\tfor ( ID = CONST ; ID < ID - ID ; ID ++ ) {', '  ID  undeclared '], 2838: ['\tID = ID ( ID [ ] , CONST ) ;', ' expected expression before  ]  token'], 2839: ['        else break ;', '  else  without a previous  if '], 2840: ['    } else if {', ' expected  (  before  {  token'], 2841: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2842: ['            printf ( STRING )', ' expected  ;  before  continue '], 2843: ['}', ' expected declaration or statement at end of input'], 2844: ['}', ' expected declaration or statement at end of input'], 2845: ['}', ' expected declaration or statement at end of input'], 2846: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 2847: ['if ( ID > ID ) {', '  ID  undeclared '], 2848: ['     for ( ID = CONST ; ID <= CONST ID - CONST ; ID ++ ) {', ' invalid suffix "n" on integer constant'], 2849: ['      }   break ;', ' break statement not within loop or switch'], 2850: ['\tscanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 2851: ['if ( ID [ ID ] == )', ' expected expression before  )  token'], 2852: ['\t    scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 2853: ['            ID ++', ' expected  ;  before  }  token'], 2854: ['printf ( STRING , ID ( CONST , CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 2855: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 2856: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 2857: ['        printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  printf '], 2858: ['\tif ( int ( ID [ CONST ] ) == int ( ID ) )', ' expected expression before  int '], 2859: ['    for ( ID = CONST ; ID <= CONST ; ID += ) {', ' expected expression before  )  token'], 2860: [' ID = ID + ID', ' expected  ;  before  if '], 2861: ['\tfor ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 2862: ['\t  ID = ID / CONST ; ID = ID % CONST ; ID [ ID ] = CHARCHAR;', ' expected  ;  before  \\x615b6a5d '], 2863: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 2864: ['    int ID , ID , ID [ CONST ] [ CONST ] , ID = CONST , ID = CONST , ID , ID [ CONST ] = CONST , ID = CONST , ID [ CONST ] , ID = CONST ;', ' invalid initializer'], 2865: ['  }        ', ' expected identifier or  (  before  }  token'], 2866: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2867: ['int ID ( int ID , int ID ) ;', ' expected identifier or  (  before  {  token'], 2868: ['            printf ( STRING )', ' expected  ;  before  }  token'], 2869: ['  ID ++', ' expected  ;  before  }  token'], 2870: ['    ID = ID [ ID ] ;', '  ID  undeclared '], 2871: ['    if ( ( * ID <= * ID ) && ( * ID <= * ID ) ) || ( ( * ID <= * ID ) && ( * ID <= * ID ) ) || ( ( * ID <= * ID ) && ( * ID <= * ID ) ) || ( ( * ID <= * ID ) && ( * ID <= * ID ) ) {', ' expected expression before  ||  token'], 2872: ['    else ( ID == CONST )', ' expected  ;  before  printf '], 2873: ['    return ID', ' expected  ;  before  }  token'], 2874: ['    for ( ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 2875: ['\t    if ( ID [ ID ] == CHARST || ID [ ID ] == ID ) {', '  ID  undeclared '], 2876: ['\tID = CONST * ID * ID * ID - CONST * ID', ' expected  ;  before  printf '], 2877: ['    ID = ID * ID * ID', ' expected  ;  before  printf '], 2878: ['        ID = ID % CONST', ' expected  ;  before  ID '], 2879: ['    int * ID = ( int * ) calloc ( ID * sizeof ( int ) ) ;', ' too few arguments to function  calloc '], 2880: ['    else if ( ID = > ID )', ' expected expression before  >  token'], 2881: ['        ID ++', ' expected  ;  before  }  token'], 2882: ['     printf ( STRING , ID )', ' expected  ;  before  ID '], 2883: ['        ID ++', ' expected  ;  before  }  token'], 2884: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 2885: ['    for ( ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 2886: ['    scanf ( STRING , int ID ) ;', ' expected expression before  int '], 2887: ['    } printf ( STRING )', ' expected  ;  before  return '], 2888: ['        printf ( STRING )', ' expected  ;  before  printf '], 2889: ['}', ' expected declaration or statement at end of input'], 2890: ['     }', ' expected identifier or  (  before  }  token'], 2891: ['}', ' expected declaration or statement at end of input'], 2892: ['        for ( ID = CONST ; ID <= ID - ID < ID ++ )', ' expected  ;  before  )  token'], 2893: ['}', ' expected declaration or statement at end of input'], 2894: ['        scanf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 2895: ['     if else ( ID * ID + ID * ID < ID * ID ) {', ' expected  (  before  else '], 2896: ['ID = ID + ID [ ID ]', ' expected  ;  before  if '], 2897: ['                printf ( STRING )', ' expected  ;  before  }  token'], 2898: ['    printf ( STRING )', ' expected  ;  before  return '], 2899: ['\t else { printf ( STRING ) }', ' expected  ;  before  }  token'], 2900: ['for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 2901: ['\t     ID =\tID [ ID ] + ID [ ID ] - CONST', ' expected  ;  before  if '], 2902: ['        else ', ' expected expression before  [  token'], 2903: ['scanf ( STRING , ID )                   ', ' expected  ;  before  scanf '], 2904: ['\t        scanf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 2905: ['\tID = ID [ CONST ]', ' expected  ;  before  for '], 2906: ['printf ( STRING )', ' expected  ;  before  return '], 2907: ['    int ID [ CONST ] , ID , ID , ID = CONST , ID , ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 2908: ['if ( ID == CONST ) { printf ( STRING ) }', ' expected  ;  before  }  token'], 2909: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 2910: ['            * ( ID + ID ) = * ( ID + ID ) ; ID ++ ; printf ( STRING , * ( ID + ID ) ) ; ID = ID + ( ID ) * ( ID - CONST )', ' expected  ;  before  }  token'], 2911: ['printf ( STRING )', ' expected  ;  before  return '], 2912: ['\t            ID = CONST', ' expected  ;  before  break '], 2913: ['{ printf ( STRING , ID ) } }', ' expected  ;  before  }  token'], 2914: ['}', ' expected declaration or statement at end of input'], 2915: ['        ID ( ID , ID , ID )', ' expected  ;  before  }  token'], 2916: ['\tfor ( ID = CONST ; ID < ID )', ' expected  ;  before  )  token'], 2917: ['    { ID = CONST', ' expected  ;  before  if '], 2918: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 2919: ['    else', '  else  without a previous  if '], 2920: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 2921: [' }', ' expected identifier or  (  before  }  token'], 2922: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 2923: ['        if ( ID . ID [ ID ] == ID . ID [ ID ] ) {', '  ID  undeclared '], 2924: ['        ID ++', ' expected  ;  before  }  token'], 2925: ['      if ( ID [ ID > ] = CHARST && ID [ ID ] <= CHARST )', ' expected expression before  ]  token'], 2926: ['if ( ID % ID == ID )', '  ID  undeclared '], 2927: ['}', ' expected  ; , identifier or  (  before  int '], 2928: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 2929: ['\tscanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 2930: ['}', ' expected declaration or statement at end of input'], 2931: ['\tID ( ID , ID , ID [ ] ) ;', ' expected expression before  ]  token'], 2932: ['\tfor ( int ID = CONST ; ID != ID ; ID ++ ) {', '  ID  undeclared '], 2933: ['printf ( STRING . ) ;', ' expected identifier before  )  token'], 2934: ['    if char ( ID [ ID ] [ ID ] )', ' expected  (  before  CHAR '], 2935: ['\tprintf ( STRING , ID ( ID , ID , ID , ID ) )', ' expected  ;  before  return '], 2936: ['\t    if ( ( ID [ ID ] <= CHARST ) || ( ( ID [ ID ] >= CHARST ) && ( ID [ ID ] = < CHARST ) ) || ( ID [ ID ] >= CHARST ) ) {', ' expected expression before  <  token'], 2937: ['    if ( ID * ID = ID * ID ) {', ' lvalue required as left operand of assignment'], 2938: ['        while ( ID ==\\ CONST )', ' stray  \\  in program'], 2939: ['    return  ID ( ID , ID + CONST , ID , ID ) || return ID ( ID , ID , ID - CONST , ID ) ;', ' expected expression before  return '], 2940: ['\tprintf ( STRING , CONST * ID * ID ) ;', '  ID  undeclared '], 2941: ['scanf ( STRING . & ID ) ;', ' expected identifier before  &  token'], 2942: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 2943: ['\tID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 2944: ['    printf ( STRING , ID [ CONST ] -> ID )', ' expected  ;  before  return '], 2945: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 2946: ['}', ' expected declaration or statement at end of input'], 2947: ['        ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 2948: ['                printf ( CHAR )', ' expected  ;  before  }  token'], 2949: ['  for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 2950: ['\tfor ( ID = CONST ; ID < ID ) {', ' expected  ;  before  )  token'], 2951: ['       else if ( ( ( ID >= CHARST && ID <= CHARST ) || ( ID >= CHARST && ID <= CHARST ) || ( ID >= CHARST && ID <= CHARST ) ) && ID == ID - CONST ) ', '  ID  undeclared '], 2952: ['           ID ++', ' expected  ;  before  ID '], 2953: ['\tfor ( ID = CONST ; ID != ID ; ID ++ )', '  ID  undeclared '], 2954: ['int ID ( ID ID , int ID )', ' unknown type name  ID ; did you mean  int ?'], 2955: ['    ID = CONST', ' expected  ;  before  for '], 2956: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 2957: ['    printf ( STRING , ( ID * ID - CONST * ID * ID ) )', ' expected  ;  before  return '], 2958: ['        printf ( STRING , ID )', ' expected  ;  before  for '], 2959: ['    scanf ( STRING , & ID ) } ;', ' expected  ;  before  }  token'], 2960: ['}', ' expected declaration or statement at end of input'], 2961: ['     if else ( ID + ID < ID ) {', ' expected  (  before  else '], 2962: ['\t        else { ID ++ } ;', ' expected  ;  before  }  token'], 2963: ['       scanf ( STRING & ID [ ID ] [ ID ] ) ;                                                                              ', ' invalid operands to binary & '], 2964: ['         for ( ID = ID - CONST ; ID = > CONST ; ID -- )', ' expected expression before  >  token'], 2965: ['}', ' expected declaration or statement at end of input'], 2966: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 2967: ['            ( ID [ ID ] + ID ) = ID [ ID ] + ID - CONST ;', ' lvalue required as left operand of assignment'], 2968: ['    else ( ID < CONST ) {', ' expected  ;  before  {  token'], 2969: ['           ID = ID % CONST', ' expected  ;  before  switch '], 2970: ['    printf ( STRING , int ID ( ID , ID ) ) ; ', ' expected expression before  int '], 2971: ['\t    if ( if ( ID - ID ) < CONST ) {', ' expected expression before  if '], 2972: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 2973: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 2974: ['\tID = ID', ' expected  ;  before  for '], 2975: ['\tprintf ( STRING , ID . ID = ID * ( ( ID * ID ) - ( ID * ID ) ) / CONST ) ;', ' request for member  ID  in something not a structure or union'], 2976: ['\tscanf ( STRING , && ID , ID ) ;', ' label  ID  used but not defined'], 2977: ['    else if ( ID == ID == ID = CONST ) {', ' lvalue required as left operand of assignment'], 2978: ['        printf ( STRING )', ' expected  ;  before  }  token'], 2979: ['    ID * * ID = ( ID * * ) malloc ( sizeof ( ID * ) ) ;', ' redeclaration of  ID  with no linkage'], 2980: ['  scanf ( STRING , & ID )', ' expected  ;  before  if '], 2981: ['printf ( STRING . , ID , ID , ID ) ;', ' expected identifier before  ,  token'], 2982: ['    printf ( STRING , ID * ID * ID )', ' expected  ;  before  return '], 2983: ['if ( ID + ID % CONST = CONST )', ' lvalue required as left operand of assignment'], 2984: ['\twhile ( ID != CHART && ID != CHARNST && ID < CONST ) {', ' empty character constant'], 2985: ['\tID [ ID ] = ID ( ID , ID ) ; }', ' too many arguments to function  ID '], 2986: ['    if ( ( ID + ID == ID && ID <= ID / CONST + CONST ) || ( ID - ID = ID / CONST && ID > ID / CONST ) )', ' lvalue required as left operand of assignment'], 2987: ['\tprintf ( STRING , & ID [ CONST ] )', ' expected  ;  before  printf '], 2988: ['   if', ' expected  (  before  for '], 2989: ['                        ID = CONST', ' expected  ;  before  }  token'], 2990: ['\t ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 2991: ['scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 2992: ['\tscanf ( STRING / ID , & ID ) ;', ' invalid operands to binary / '], 2993: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 2994: ['printf ( STRING , ID * ID * ID , ID * ID * , CONST * CONST * CONST , ID ) ;', ' expected expression before  ,  token'], 2995: ['    ID [ ID ] = CHART ;', '  ID  undeclared '], 2996: ['    ID ( int ID ) ;', ' expected expression before  int '], 2997: ['return ID ;', '  ID  undeclared '], 2998: [' for ( ID = CONST ; ID <= CONST , ID ++ ) ;', ' expected  ;  before  )  token'], 2999: ['                    else if ( ID < continue )', ' expected expression before  continue '], 3000: ['        if ( ID [ ID ] == CHART || ID [ ID ] == CHART )', '  ID  undeclared '], 3001: ['for ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 3002: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 3003: ['  ID . ID = ( int * ) ID ( sizeof ( int ) * ID . ID ) ;', "  struct set  has no member named  ID '; did you mean 'n'?"], 3004: ['printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 3005: ['     scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 3006: ['    ID = ( ID % CONST )', ' expected  ;  before  if '], 3007: ['\tgets ( ID [ ] ) ;', ' expected expression before  ]  token'], 3008: ['    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 3009: ['\t    ID ++', ' expected  ;  before  }  token'], 3010: ['\t        printf ( STRING , CHARST + ID )', ' expected  ;  before  }  token'], 3011: ['\tint ID , ID , ID [ ] [ CONST ] ;', ' array size missing in  ID '], 3012: ['        printf ( STRING )', ' expected  ;  before  }  token'], 3013: ['        printf ( STRING )', ' expected  ;  before  }  token'], 3014: ['        case CONST : continue', ' expected  ;  before  case '], 3015: ['}', ' expected declaration or statement at end of input'], 3016: ['    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 3017: ['    if ( ID >= ID ) {', '  ID  undeclared '], 3018: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 3019: ['   else ID [ ID ] = ID [ ID ++ ] ;', '  ID  undeclared '], 3020: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 3021: ['    else if ( ID == ID )', '  else  without a previous  if '], 3022: ['  printf ( STRING , )', ' expected expression before  )  token'], 3023: ['\t        ID = ID ( ID , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 3024: ['\tfor ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 3025: ['    ID [ ++ ID ] = CONST', ' expected  ;  before  ID '], 3026: ['    if ID % CONST == CONST {', ' expected  (  before  ID '], 3027: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) ', '  ID  undeclared '], 3028: ['    int ID = ID [ CONST ] ;', ' redeclaration of  ID  with no linkage'], 3029: ['printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 3030: ['if ID [ ID ] == ID [ ID ]', ' expected  (  before  ID '], 3031: ['            ID ++', ' expected  ;  before  }  token'], 3032: ['            printf ( STRING & ID [ ID ] [ ID ] ) ;', ' invalid operands to binary & '], 3033: ['}', ' expected declaration or statement at end of input'], 3034: ['   return ID * ID * ; }', ' expected expression before  ;  token'], 3035: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3036: ['    ID ( ID , CONST )', ' expected  ;  before  return '], 3037: ['    ID [ CONST ] = CHARST', ' expected  ;  before  ID '], 3038: ['\t    ID [ ID ] == ID [ ID ]', ' expected  ;  before  ID '], 3039: ['\t    printf ( STRING , ID [ ID ] ) ', ' expected  ;  before  }  token'], 3040: ['for ( ID = CONST ; ID [ ID ] != CHART , ID ++ )', ' expected  ;  before  )  token'], 3041: ['}', ' expected declaration or statement at end of input'], 3042: ['scanf ( STRING , ID )', ' expected  ;  before  for '], 3043: ['             ID = ID [ ID ]', ' expected  ;  before  }  token'], 3044: ['}', ' expected declaration or statement at end of input'], 3045: ['}', ' expected declaration or statement at end of input'], 3046: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 3047: ['\tif ( ID / ID = ID / ID )', ' lvalue required as left operand of assignment'], 3048: ['        printf ( STRING )', ' expected  ;  before  return '], 3049: ['            printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 3050: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 3051: ['        ID = ID [ ID ] * ( ID + CONST )', ' expected  ;  before  if '], 3052: ['}', ' expected declaration or statement at end of input'], 3053: ['\tID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 3054: ['\tfor ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 3055: ['ID = ID & ID * ID ;', ' invalid operands to binary & '], 3056: ['\tint ID = CONST', ' expected  ,  or  ;  before  scanf '], 3057: ['    ID ( ID , ID , CONST , ID , CONST ) ;                       ', ' too few arguments to function  ID '], 3058: ['     puts ( ID )', ' expected  ;  before  else '], 3059: ['\twhile ( ID == CONST )', '  ID  undeclared '], 3060: ['    printf ( STRING ) :', ' expected  ;  before  :  token'], 3061: ['    if ( ID == ID && ID == ID ) )    ', ' expected statement before  )  token'], 3062: ['        putchar ( CHART )', ' expected  ;  before  }  token'], 3063: ['    continue ; }', ' continue statement not within a loop'], 3064: [' printf ( STRING , )', ' expected expression before  )  token'], 3065: ['\t else', '  else  without a previous  if '], 3066: ['                { ID ++ : }', ' expected  ;  before  :  token'], 3067: ['        if ( ID ( ( ID ( ID , ID ) , ID ) == ID ) )', ' too few arguments to function  ID '], 3068: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 3069: ['    ID ( ID )', ' expected  ;  before  return '], 3070: ['scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 3071: ['    while ( ID != CHART && ID != CHARNST && ID != CHART )', ' empty character constant'], 3072: ['\tprintf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 3073: ['    ID [ ] = ID ( & ID , ID , ID ) ;', ' expected expression before  ]  token'], 3074: ['\tif ( ID * ID = ID * ID ) { printf ( STRING ) ; }', ' lvalue required as left operand of assignment'], 3075: ['             }', ' expected declaration or statement at end of input'], 3076: ['printf ( STRING CONST * CONST * CONST ) ;', ' expected  )  before numeric constant'], 3077: ['struct ID { int ID ; ID ; } ;', ' expected specifier-qualifier-list before  ID '], 3078: ['            ID [ ID ] [ ID ] = CONST + ID ( ID [ ID - CONST ] [ ID ] && ID [ ID ] [ ID - CONST ] && ID [ ID - CONST ] [ ID - CONST ] ) ;', ' too few arguments to function  ID '], 3079: ['printf ( STRING , ID , ID , ID , ID ID ID ) ;', ' expected  )  before  ID '], 3080: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 3081: ['printf ( STRING )', ' expected  ;  before  return '], 3082: ['    while ( ID ! ID ) {', ' expected  )  before  !  token'], 3083: ['     ID = ID + ID * pow ( CONST , ID ) ;', '  ID  undeclared '], 3084: ['    ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 3085: ['ID = ( int * ) malloc ( sizeof ( int ) )', ' expected  ;  before  printf '], 3086: ['       ID += ( && ( ID + ID >= ID ) ) ? CONST : CONST ;', ' expected identifier before  (  token'], 3087: ['}', ' expected declaration or statement at end of input'], 3088: ['\t        printf ( STRING , ID )', ' expected  ;  before  printf '], 3089: [' ID [ CONST ] [ CONST ] = ID [ CONST ] [ CONST ] ;', ' subscripted value is neither array nor pointer nor vector'], 3090: ['        scanf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 3091: ['        if ( ID = > ID ) {', ' expected expression before  >  token'], 3092: ['\t    ID ( * ( ID + ID ) ) ;', ' too few arguments to function  ID '], 3093: ['    ID = ID [ CONST ] ;', '  ID  undeclared '], 3094: [' int ID ;', ' redeclaration of  ID  with no linkage'], 3095: ['    printf ( STRING )', ' expected  ;  before  return '], 3096: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 3097: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 3098: ['    float ID = ( ( CONST / CONST ) * ( ID - CONST ) ) + CONST ) ;', ' expected  ,  or  ;  before  )  token'], 3099: ['\tID = ID - ID ( ID ) ;', '  ID  undeclared '], 3100: ['    int', ' expected identifier or  (  before  return '], 3101: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 3102: ['    int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 3103: ['\tint ID = ID ( ID , ID ) , ID = CONST , ID = ID ( ID ) , ID = CONST , ID = ID ( ID ) ;', '  ID  undeclared '], 3104: ['        ID = ID * CONST + ID ;', '  ID  undeclared '], 3105: ['for ( ID = CONST ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 3106: ['  printf ( STRING , ID ) ;', '  ID  undeclared '], 3107: ['        * ID + ID = * ID + CONST ;', ' lvalue required as left operand of assignment'], 3108: ['    else if ( CONST , <= ID <= CONST )', ' expected expression before  <=  token'], 3109: ['        printf ( STRING , ID [ ID - ID ] [ ID ] ) ;', '  ID  undeclared '], 3110: ['\tID [ ID ] = ID ;', '  ID  undeclared '], 3111: ['ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 3112: ['    if else ( ID != ID != ID )', ' expected  (  before  else '], 3113: ['    { ID = CONST', ' expected  ;  before  for '], 3114: ['    if ( ID )', '  ID  undeclared '], 3115: ['      else if { printf ( STRING ) ; }', ' expected  (  before  {  token'], 3116: ['int main ( ) { printf ( STRING ) ; return ID ;', '  ID  undeclared '], 3117: ['\t   while ( )', ' expected expression before  )  token'], 3118: ['            printf ( STRING )', ' expected  ;  before  }  token'], 3119: ['       printf ( STRING , ) ;', ' expected expression before  )  token'], 3120: ['        scanf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 3121: ['\tID = ID', ' expected  ;  before  for '], 3122: ['            else ', ' expected expression before  }  token'], 3123: ['\tprintf ( STRING , ID ( ID [ ] ) ) ;', ' expected expression before  ]  token'], 3124: ['    if ( ID [ CONST ] > ID - CONST ) {', '  ID  undeclared '], 3125: ['\t        if ( ID [ ID [ ID ] ] < ID [ ID [ ID ] - CONST ] && ID [ ID [ ID ] ] = ID [ ID [ ID ] + CONST ] )', ' lvalue required as left operand of assignment'], 3126: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 3127: ['\t    ID + CHARST - CHARST = ID ;', ' lvalue required as left operand of assignment'], 3128: ['\t        printf ( STRING , ID [ ID + ID ] )', ' expected  ;  before  }  token'], 3129: ['{ int ', ' expected identifier or  (  before  return '], 3130: ['\tchar ID = ID ;', '  ID  undeclared '], 3131: ['    if ( ID == CONST ) {', '  ID  undeclared '], 3132: ['   printf ( STRING )', ' expected  ;  before  }  token'], 3133: ['\tscanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 3134: ['for ( int ID = CONST , ID = CONST , ID = CONST ; ID < ID , ID < ID , ID < ( ID + ID ) ; ID ++ , ID ++ , ID ++ CONST )', ' expected  )  before numeric constant'], 3135: ['    scanf ( STRING STRING STRING , & ID , & ID , & ID ) ;', '  ID  undeclared '], 3136: ['\t    break ;', ' break statement not within loop or switch'], 3137: ['\tprintf ( STRING )', ' expected  ;  before  return '], 3138: ['\tputchar ( ) ;', ' too few arguments to function  putchar '], 3139: ['\tID = getchar ( )', ' expected  ;  before  return '], 3140: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 3141: ['    scanf ( STRING , & ID & ID & ID ) ;                   ', ' invalid operands to binary & '], 3142: ['    printf ( STRING )', ' expected  ;  before  scanf '], 3143: ['   int ID = ID [ CONST ] ;', '  ID  undeclared '], 3144: ['int ID = CONST * ID = CONST + CONST * ID = CONST ;', ' lvalue required as left operand of assignment'], 3145: ['    getchar ( ID ) ;', ' too many arguments to function  getchar '], 3146: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 3147: ['   int ID , ID , ID , ID , ID , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 3148: ['    ID = ID ( CONST + ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 3149: ['ID += ( ID [ CONST ] >= CHARST && ID [ CONST ] <= CHARST ) ? CONST : CONST', ' expected  ;  before  if '], 3150: ['}', ' expected declaration or statement at end of input'], 3151: ['    ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 3152: ['for ( ID = CONST ; ID < CONST ; ID ++ + )', ' expected expression before  )  token'], 3153: ['\tID = ID', ' expected  ;  before  while '], 3154: ['\tID ( ID [ ID ] [ ID ] , ID [ ID ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 3155: ['\tfor ( ID = CONST ; ID <= ID , ++ ID )', ' expected  ;  before  )  token'], 3156: ['    for ( ID = ID ; ID <= ID ; ID ++ )', '  ID  undeclared '], 3157: ['    printf ( STRING )', ' expected  ;  before  return '], 3158: ['        ID = ID [ CONST ] ;', '  ID  undeclared '], 3159: ['    printf ( STRING , , ID ) ;', ' expected expression before  ,  token'], 3160: ['   char ID , ;', ' expected identifier or  (  before  ;  token'], 3161: ['for ( ID = CONST ; ID * ID < strlen ( ID ) ; ID ++ )', '  ID  undeclared '], 3162: ['    if ( ID == ID - CONST && ID = ID - CONST )', ' lvalue required as left operand of assignment'], 3163: ['      ID = ( int ) ( ID / ID )', ' expected  ;  before  if '], 3164: ['\t ID = ID ( CONST + ( ( ID * ID ) / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 3165: ['\tfor ( ID = CONST ; ID != ID ; ID ++ )', '  ID  undeclared '], 3166: [' printf ( STRING , ID , ID )', ' expected  ;  before  return '], 3167: ['    if ( ID && ID [ ID ] = CHARST ) {', ' lvalue required as left operand of assignment'], 3168: ['}', ' expected declaration or statement at end of input'], 3169: ['\tID = ID ; CONST ; ID ;', '  ID  undeclared '], 3170: ['\tID [ ] = STRING ;', ' expected expression before  ]  token'], 3171: ['\t    for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 3172: ['    scanf ( STRING , & ( ID . ID ) , & ( ID . ID ) )', ' expected  ;  before  printf '], 3173: ['    if ( ID ( CONST , CONST , ID , ID , ID ) )', ' too many arguments to function  ID '], 3174: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 3175: ['            printf ( STRING )', ' expected  ;  before  }  token'], 3176: ['    printf ( STRING , ID [ ID ] . ID , ID [ ID ] . ID , ID [ ID ] . ID )', ' expected  ;  before  return '], 3177: ['\t     if ( ID [ ID ] ID [ ID ] )', ' expected  )  before  ID '], 3178: ['ID = ( int * ) ID ( sizeof ( int ) * ID ) ;', '  ID  undeclared '], 3179: ['   while ( ID % CONST = CONST || ID % CONST = CONST || ID % CONST = CONST ) {', ' lvalue required as left operand of assignment'], 3180: ['        printf ( STRING )', ' expected  ;  before  }  token'], 3181: ['        ID + ID = ID ;', ' lvalue required as left operand of assignment'], 3182: [' else ( ID < ID - CONST )', ' expected  ;  before  printf '], 3183: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 3184: ['\t    ID = ID + ID [ ID + ID ]', ' expected  ;  before  printf '], 3185: ['        ID ++', ' expected  ;  before  }  token'], 3186: ['float ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 3187: ['\tint ID = CONST ;', ' redeclaration of  ID  with no linkage'], 3188: ['  printf ( STRING )', ' expected  ;  before  ID '], 3189: ['\tprintf ( STRING )', ' expected  ;  before  return '], 3190: ['\tID = ID + CONST', ' expected  ;  before  printf '], 3191: ['            if ( ID [ ID ] [ ID ] == CONST ) {', ' subscripted value is neither array nor pointer nor vector'], 3192: ['int ID , ID , ID = CONST , ID = CONST ,', ' expected identifier or  (  before  ID '], 3193: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 3194: ['   printf ( STRING , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] )', ' expected  ;  before  return '], 3195: ['    default :', ' label at end of compound statement'], 3196: ['\tprintf ( STRING )', ' expected  ;  before  return '], 3197: ['ID main ( )', ' unknown type name  ID '], 3198: ['\t    for ( ID = CONST ; ID >= CONST ; ID = ID - CONST ) { printf ( STRING , ID * ) ; }', ' expected expression before  )  token'], 3199: ['\tfor ( ID = CONST ; ID [ ID ] != CHART && ID [ CONST ] != CHART ; ID ++ )', '  ID  undeclared '], 3200: ['    while ( ID != ID ) printf ( STRING , ID [ ID ++ ] ) ;', '  ID  undeclared '], 3201: ['printf ( STRING STRING )\t', ' expected  ;  before  return '], 3202: ['  ID = strcat ( ID , ID ) ;', ' assignment to expression with array type'], 3203: ['    ID ( ( * ( ID + ID ) ) . ID > ID ) {', ' expected  ;  before  {  token'], 3204: ['        ID = ID * ID', ' expected  ;  before  }  token'], 3205: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 3206: ['float ID = ID ( CONST * ID ) / CONST ) ;', ' expected  ,  or  ;  before  )  token'], 3207: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 3208: ['    ( ID + ID ) = ID [ ID ] * ID ;', ' lvalue required as left operand of assignment'], 3209: ['    if ( ID [ ID ] > ID || ID [ ID ] == CONST || ID [ ID ] > ID || ID [ ID ] == = CONST ) {', ' expected expression before  =  token'], 3210: ['printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 3211: [' { else printf ( STRING ) ; }', '  else  without a previous  if '], 3212: ['    ID -> ID = ID ;', '  struct node  has no member named  ID '], 3213: ['\t            ID [ ID ] ++', ' expected  ;  before  }  token'], 3214: ['   float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 3215: ['    ID [ ID ] [ ID ] = CONST', ' expected  ;  before  ID '], 3216: ['\t    ID ++', ' expected  ;  before  }  token'], 3217: ['    printf ( STRING , ID * ID ) ;', '  ID  undeclared '], 3218: ['    scanf ( STRING , & ID . ID , & ID -> ID , & ID -> ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 3219: ['for ( int ID = CONST ; ID < ID ; ID += )', ' expected expression before  )  token'], 3220: ['if ( ID % / CONST )', ' expected expression before  ID  token'], 3221: ['    return ID ;', '  ID  undeclared '], 3222: ['    printf ( STRING , ID * ( CONST + ( ID * ID ) / CONST ) , ID , ID ) ;                                  ', '  ID  undeclared '], 3223: ['\treturn CONST ; }', ' expected declaration or statement at end of input'], 3224: ['        printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 3225: ['    float ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 3226: ['      scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 3227: ['ID = CONST , ID = CONST , ID = CONST , ID = CONST', ' expected  ;  before  ID '], 3228: ['    scanf ( STRING & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 3229: ['        ID ( ID < ID [ ID ] )', ' expected  ;  before  {  token'], 3230: ['}', ' expected declaration or statement at end of input'], 3231: ['\t    printf ( STRING , ID ) ;', '  ID  undeclared '], 3232: ['}', ' expected declaration or statement at end of input'], 3233: ['        if ( ID [ ID != CONST ) {', ' expected  ]  before  )  token'], 3234: ['        ID = ID % ID', ' expected  ;  before  }  token'], 3235: ['float ID = ID + ID + ( ID * ID + ID * ID )', ' expected  ,  or  ;  before  return '], 3236: ['    ID = int ID ;', ' expected expression before  int '], 3237: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3238: ['    else { return ID } ;', ' expected  ;  before  }  token'], 3239: ['\tID ( ID , ID , ID ) ;', '  ID  undeclared '], 3240: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 3241: ['            return CONST ; break ;', ' break statement not within loop or switch'], 3242: ['    printf ( STRING , ID + , ID ) ;', ' expected expression before  ,  token'], 3243: ['    printf ( STRING strlen ( ID ) ) ;', ' expected  )  before  strlen '], 3244: ['  printf ( STRING , ID . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 3245: ['                    continue', ' expected  ;  before  }  token'], 3246: ['ID ( ID , ID )', ' expected  ;  before  return '], 3247: ['printf ( STRING )', ' expected  ;  before  return '], 3248: ['    ID = ( CONST / CONST ) * ID * ID ;', '  ID  undeclared '], 3249: ['           printf ( STRING , ID )', ' expected  ;  before  }  token'], 3250: ['        ID = - ID', ' expected  ;  before  }  token'], 3251: ['\t    else if ( ID [ CONST ] == STRING ) {', '  else  without a previous  if '], 3252: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 3253: ['printf ( STRING , , ID , ID ) ;', ' expected expression before  ,  token'], 3254: ['\t    if ( ( ID [ ID ] ) . ID < ID ( ID [ ID ] ) . ID )', ' request for member  ID  in something not a structure or union'], 3255: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 3256: ['void ID ( int ID , int ID , )', ' expected declaration specifiers or  ...  before  )  token'], 3257: ['printf ( STRING , ID [ ID - CONST ] [ ID - CONST ] )', ' expected  ;  before  for '], 3258: ['\tfloat ID , ID , ID , ;                ', ' expected identifier or  (  before  ;  token'], 3259: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 3260: ['\t        printf ( STRING , ID + ID ) ;', '  ID  undeclared '], 3261: ['        printf ( STRING )', ' expected  ;  before  }  token'], 3262: ['\tprintf ( STRING , - CONST % CONST )', ' expected  ;  before  return '], 3263: ['        ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 3264: ['\t    int ID = ID [ ID ] [ CONST ] ;', '  ID  undeclared '], 3265: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 3266: ['    else { printf ( STRING ) ; }', '  else  without a previous  if '], 3267: ['\t            { ID ++', ' expected  ;  before  break '], 3268: ['    ID ( ID , ID . ID ) ;                               ', '  ID  undeclared '], 3269: ['\t    else if ', ' expected  (  before  {  token'], 3270: ['    else if ( ID > CONST && ) {', ' expected expression before  )  token'], 3271: ['\tprintf ( STRING ID ( ID , ID ) ) ;', ' expected  )  before  ID '], 3272: ['\telse ( ID == CONST )', ' expected  ;  before  printf '], 3273: ['for ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 3274: ['         while ( ID > && ( ID [ ID ] < ID [ ID - CONST ] ) )', ' expected identifier before  (  token'], 3275: ['}', ' expected declaration or statement at end of input'], 3276: ['\t        if ( ID [ ID ] [ ID ] = > ID [ ID ] [ ID - CONST ] && ID [ ID ] [ ID ] <= ID [ ID ] [ ID + CONST ] ) {', ' expected expression before  >  token'], 3277: ['if ( ID [ ID ] == / CONST )', ' expected expression before  ID  token'], 3278: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 3279: ['    if ( ID > CONST ) {', '  ID  undeclared '], 3280: ['    printf ( STRING )', ' expected  ;  before  if '], 3281: ['\tprintf ( STRING , ID [ ID ] )    ', ' expected  ;  before  }  token'], 3282: ['}', ' expected declaration or statement at end of input'], 3283: ['}', ' expected declaration or statement at end of input'], 3284: ['           if ( ID ( ) == CONST )', ' too few arguments to function  ID '], 3285: ['\t    printf ( STRING , * ( ID + ID ) ) ;', '  ID  undeclared '], 3286: ['\tID [ ID ] = CHART ;', '  ID  undeclared '], 3287: ['          if ( ID <= ID && ID = > ( ID - ID ) ) {', ' expected expression before  >  token'], 3288: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3289: ['else {', '  else  without a previous  if '], 3290: ['\tID [ ID ] = CHART', ' expected  ;  before  printf '], 3291: ['}', ' expected declaration or statement at end of input'], 3292: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  ID '], 3293: ['    ID = ID ^ CONST - CONST ID ;', ' invalid suffix "ac" on integer constant'], 3294: ['        int ID = ( ID - ID ) * ID [ ID ]', ' expected  ,  or  ;  before  if '], 3295: ['           { printf ( STRING , CHARST + ( ID + ID ) )', ' expected  ;  before  }  token'], 3296: ['    ID [ ID ] = ( ( ID ( ID ) + ID - CONST ) % CONST ) + CONST ;    ', ' called object  ID  is not a function or function pointer'], 3297: ['        for ( int ID = ID - CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 3298: ['    ID = ID', ' expected  ;  before  return '], 3299: ['                ID ( ID + ID , ID + ID )', ' expected  ;  before  ID '], 3300: ['\tfor ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 3301: ['    ID = ID / CONST ;                                ', '  ID  undeclared '], 3302: ['            scanf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 3303: ['        return ID ;', '  ID  undeclared '], 3304: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 3305: ['    for ( ID = CONST ; ID ++ ) ', ' expected  ;  before  )  token'], 3306: ['    printf ( STRING , CONST , - CONST , - CONST )', ' expected  ;  before  }  token'], 3307: ['        for ( ID = CONST ; ) {', ' expected expression before  )  token'], 3308: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3309: ['    printf ( STRING , ID , ID [ ID ] . ID , ID [ ID ] . ID ) ;', '  ID  undeclared '], 3310: ['    printf ( STRING , ID ) ;    ', '  ID  undeclared '], 3311: ['    if ( ( ID / ID ) = ( ID / ID ) ) { printf ( STRING ) ; }', ' lvalue required as left operand of assignment'], 3312: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3313: ['    ID = ( ID ) ;', ' incompatible types when assigning to type  ID  {aka  struct birth_data } from type  BirthData *  {aka  struct birth_data * }'], 3314: ['          printf ( STRING , ID )', ' expected  ;  before  }  token'], 3315: ['    if ( ID [ ID ] == ID [ ID - ID ] )', ' expected expression before  else '], 3316: ['\tfor ( int ID = CONST ; ID < ID )', ' expected  ;  before  )  token'], 3317: ['\tfor ( CONST <= ID <= CONST ; - CONST <= ID [ ID ] <= CONST ) {', ' expected  ;  before  )  token'], 3318: ['    else', '  else  without a previous  if '], 3319: ['    for ( ID = CONST ; ID <= ID / CONST ; ID ++ )', '  ID  undeclared '], 3320: ['\tprintf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 3321: ['\tfor ( int ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 3322: ['        while ( ( ID = CONST || ID = ID - CONST ) && ID <= CONST * ID ) {', ' lvalue required as left operand of assignment'], 3323: ['}', ' expected declaration or statement at end of input'], 3324: [' ID = ( int * ) malloc ( ID * sizeof ( int ) ) ;', '  ID  undeclared '], 3325: ['    if ( ID % CONST == CONST ) && ( ID % CONST != CONST ) {', ' expected identifier before  (  token'], 3326: ['       for ( int ID = CONST ; ID < CONST ID ; ID ++ ) {', ' invalid suffix "n" on integer constant'], 3327: ['\t      if ( ( ID >= CHARST && ID <= CHARST && ID % CONST == CONST ) || ( ID >= CHARST && ID <= CHARST && ID % CONST == CONST ) || ( ID >= CHARST && ID <= CHARST && ID % CONST == CONST ) )', ' expected expression before  }  token'], 3328: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3329: ['    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 3330: ['}', ' expected declaration or statement at end of input'], 3331: ['            for ( ID = ID ; ID >= ID ; ID ++ )', '  ID  undeclared '], 3332: ['    if ( ( ID [ ID ] > ID [ ID ] ) && ( ID < ID ) )', '  ID  undeclared '], 3333: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 3334: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 3335: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  while '], 3336: ['\tfloat ID = ( ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 3337: ['     for ( ID = CONST ; ID < )', ' expected expression before  )  token'], 3338: ['    if ( )', ' expected expression before  )  token'], 3339: ['    if ( ( ID == CHARST ) && ( ( ID - ID ) = < CONST ) )', ' expected expression before  <  token'], 3340: ['    }', ' expected declaration or statement at end of input'], 3341: ['    if ( ID [ ID + CONST ] == CHART || ID [ ID + CONST ] == CHARST || ID [ ID + CONST ] = CHART )', ' lvalue required as left operand of assignment'], 3342: ['        continue', ' expected  ;  before  }  token'], 3343: ['  printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3344: ['        printf ( STRING , ID [ CONST ] )', ' expected  ;  before  }  token'], 3345: ['        ID = ( struct ID * ) malloc ( CONST * sizeof ( ID ) ) ;', '  ID  undeclared '], 3346: ['    int ID [ CONST ] = { CONST ; ID ; CONST ; CONST ; CONST ; CONST ; CONST ; CONST ; CONST ; CONST ; CONST ; CONST } ;', ' expected  }  before  ;  token'], 3347: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 3348: ['    printf ( STRING )', ' expected  ;  before  printf '], 3349: ['\t     for ( ID = abs ( ID - ID ) ; ID < ID ; ID += )', ' expected expression before  )  token'], 3350: ['}', ' expected  ; , identifier or  (  before  int '], 3351: ['        return CONST', ' expected  ;  before  }  token'], 3352: ['\tint ID = ID ; int ID = CONST ;', ' redefinition of  ID '], 3353: [' else if ( CHARST <= ID && <= CHARST )', ' expected expression before  <=  token'], 3354: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 3355: ['        printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 3356: ['                if ( ( ( ID + ID > ID ) && ( ID + ID > ID ) ) && ( ID + ID > ID ) = CONST ) {', ' lvalue required as left operand of assignment'], 3357: ['\t  printf ( STRING , ID ) ;', '  ID  undeclared '], 3358: ['\tprintf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 3359: ['\t  ID ( ID [ ] , ID [ ] , ID [ ] ) ;', ' expected expression before  ]  token'], 3360: ['\t    scanf ( STRING , ID + ID ) ;', '  ID  undeclared '], 3361: ['     ID = CONST * CONST * CONST ^ CONST ;', ' invalid operands to binary ^ '], 3362: ['\t    ID = ID * CONST', ' expected  ;  before  }  token'], 3363: ['\t    if ( ID [ ID ] ==\\ STRING )', ' stray  \\  in program'], 3364: ['    if ( ( ID * ( ID - ID ) + ID * ( ID - ID ) + ID * ( ID - ID ) ) = CONST )', ' lvalue required as left operand of assignment'], 3365: ['\tint ID , ID , ID [ CONST ] , ID , ID , ID , ID , ID , ID , ID [ CONST ] ;', ' redeclaration of  ID  with no linkage'], 3366: ['}', ' expected declaration or statement at end of input'], 3367: ['    ID = CONST', ' expected  ;  before  scanf '], 3368: ['\tint ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  scanf "], 3369: ['    float ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 3370: ['        ID = ID + pow ( ID , CONST ID ) * pow ( - CONST , ID ) / ID ( CONST ID )', ' expected  ;  before  }  token'], 3371: ['     return ID ( ID + CONST , ID - ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 3372: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3373: ['else ', '  else  without a previous  if '], 3374: ['else printf ( STRING )', ' expected  ;  before  return '], 3375: ['              printf ( STRING ID - CONST ) ; }', ' expected  )  before  ID '], 3376: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3377: ['    else', ' expected expression before  }  token'], 3378: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 3379: ['\treturn ID', ' expected  ;  before  }  token'], 3380: ['    else if ( ID % CONST == CONST % % ID != CONST ) {', ' expected expression before  %  token'], 3381: ['for ( ID = ID ; ID <= ID - CONST ; ID ++ ) ;', '  ID  undeclared '], 3382: ['       if ( ID ( ID [ ID ] - ID [ ID - CONST ] ) ! = ID ( ID [ ID ] - ID [ ID - CONST ] ) ) return CONST ; ', ' expected  )  before  !  token'], 3383: ['\tscanf ( STRING , ID )', ' expected  ;  before  return '], 3384: ['printf ( STRING )', ' expected  ;  before  return '], 3385: ['\t    if ( ( ( ID [ ID ] >= CONST ID ) && ( ID [ ID ] <= CONST ) ) || ( ( ID [ ID ] >= CONST ) && ( ID [ ID ] <= CONST ) ) || ( ( ID [ ID ] >= CONST ) && ( ID [ ID ] <= CONST ) ) ) ', ' exponent has no digits'], 3386: ['                ID = ID ( ID , ID , ID , ID , ID )', ' expected  ;  before  if '], 3387: ['    ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 3388: ['    ID ( ID , CONST , ID , ID ) ;', '  ID  undeclared '], 3389: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before numeric constant'], 3390: ['        ID ( ID [ ID ] , ID [ ID ] , ID , ID ) ; }', '  ID  undeclared '], 3391: ['        ID [ ID ] = * ID ;', ' incompatible types when assigning to type  CHAR  from type  struct data '], 3392: ['    if ( ID % ID == CONST || ID % ID = CONST ) {', ' lvalue required as left operand of assignment'], 3393: ['       ID = ID', ' expected  ;  before  return '], 3394: ['    printf ( STRING )', ' expected  ;  before  return '], 3395: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3396: ['     ID = CONST', ' expected  ;  before  }  token'], 3397: ['    float ID = CONST CONST ;', ' too many decimal points in number'], 3398: ['else ( ID * ID == ID * ID ) {', ' expected  ;  before  {  token'], 3399: ['printf ( STRING , ID , ID )', ' expected  ;  before  return '], 3400: ['\t} else if ( ( ( ID / ID ) + ( ID / ID ) ) == CONST ) && ( ( ( ID / ID ) + ( ID / ID ) ) == CONST ) {', ' expected identifier before  (  token'], 3401: ['  printf ( STRING , ID )', ' expected  ;  before  return '], 3402: ['\t            ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 3403: ['            ( ID % CONST ) * ! ( ID % CONST ) ) / CONST', ' expected  ;  before  printf '], 3404: ['\t{   printf ( STRING . ID [ ID ] ) ;', ' request for member  ID  in something not a structure or union'], 3405: ['    printf ( STRING )', ' expected  ;  before  return '], 3406: [' int ID , ID , ID = CONST , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 3407: ['    printf ( STRING , ID ( CONST , CONST , CONST , ID ) , ID ) ;', '  ID  undeclared '], 3408: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3409: ['    if ( ID ( ID , ID ) ) ? printf ( STRING ) : printf ( STRING ) ;', ' expected expression before  ?  token'], 3410: ['\tprintf ( STRING , ID ( ID , ID , ID ) )', ' expected  ;  before  return '], 3411: ['    return ID ;', " incompatible types when returning type 'BirthData "], 3412: ['        scanf ( STRING , & [ ID ] ) ;', ' expected expression before  [  token'], 3413: ['\tID = ID ^ CONST ;', ' invalid operands to binary ^ '], 3414: ['    ID ( ID , ID , ID ) = CONST ;', ' lvalue required as left operand of assignment'], 3415: ['\t    else ( ID [ ID ] > CONST ) {', ' expected  ;  before  {  token'], 3416: ['\tfloat ID = CONST / CONST * ID * ID * ID * ID ;', ' redeclaration of  ID  with no linkage'], 3417: ['            for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 3418: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3419: ['\t        printf ( STRING , ID [ strlen ( ID ) - ID ] )', ' expected  ;  before  }  token'], 3420: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 3421: ['      if ( ID = < ID )', ' expected expression before  <  token'], 3422: ['{ if ( ID % ID = CONST )', ' lvalue required as left operand of assignment'], 3423: ['    ID = ID * ID ( ID , ID ) ;', '  ID  undeclared '], 3424: ['\tint ID , ID [ ID ] , ID ;', ' redeclaration of  ID  with no linkage'], 3425: ['# define < ID . ID >', ' macro names must be identifiers'], 3426: ['\tfor ( ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 3427: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3428: ['    if ( ID * ID = ID * ID ) { printf ( STRING ) ; } else { printf ( STRING , ID , ID ) ; }', ' lvalue required as left operand of assignment'], 3429: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3430: ['           scanf ( STRING & ID [ ID ] [ ID ] ) ;    ', ' invalid operands to binary & '], 3431: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 3432: ['        {   int ID = ID ( ID [ ID ] [ ] , ID [ ID ] [ ] , ID [ ID ] [ ] ) ;                    ', ' expected expression before  ]  token'], 3433: ['\t            ID ++', ' expected  ;  before  }  token'], 3434: ['\tint ID [ ] ;', ' array size missing in  ID '], 3435: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 3436: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 3437: ['            break ;', ' break statement not within loop or switch'], 3438: ['    printf ( STRING , ID * CONST + CONST )', ' expected  ;  before  return '], 3439: ['\t    else if ( CHARST <= ID [ ID ] <= CHARST )', '  else  without a previous  if '], 3440: ['\t    ID = ID ;', '  ID  undeclared '], 3441: ['    if ( ID == CONST ) { ID = - CONST ; ID = - CONST }', ' expected  ;  before  }  token'], 3442: ['}', ' expected declaration or statement at end of input'], 3443: ['    printf ( STRING )', ' expected  ;  before  return '], 3444: ['  scanf ( STRING , & ID [ ID ] )                            ', ' expected  ;  before  }  token'], 3445: [' for ( int ID = CONST ; ID < CONST ID - CONST ; ID ++ ) {', ' invalid suffix "n" on integer constant'], 3446: ['    ID [ ID ] = / CONST ;', ' expected expression before  ID  token'], 3447: ['       { ID = getchar ( ) } ; }', ' expected  ;  before  }  token'], 3448: ['\t    ID [ ID ] = getchar ( )', ' expected  ;  before  if '], 3449: ['    ID [ ID ] = CHART', ' expected  ;  before  printf '], 3450: ['\tdouble ID = sqrt ( ( CONST ID / CONST ) ) ;', ' invalid suffix "a" on integer constant'], 3451: ['    ID = ID ( ( ID * ID ) + ( ID * ID ) )                                                                                     ', ' expected  ;  before  ID '], 3452: ['    if ( ID == CONST ) { ID = CONST }', ' expected  ;  before  }  token'], 3453: ['\t{  for ( ID = CONST ; ID < ID , ID ++ )  ', ' expected  ;  before  )  token'], 3454: ['        printf ( STRING , ID [ ID ] , ) ;', ' expected expression before  )  token'], 3455: ['        } printf ( STRING )', ' expected  ;  before  }  token'], 3456: ['         printf ( STRING , * ) ;', ' expected expression before  )  token'], 3457: ['ID = sqrt ( ( ID - ID ) + ( ID - ID ) )', ' expected  ;  before  printf '], 3458: ['printf ( STRING , ID ( ) ) ;', ' too few arguments to function  ID '], 3459: ['\t    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 3460: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 3461: ['         printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 3462: ['    printf ( STRING )', ' expected  ;  before  return '], 3463: ['free ( ID ) ;', '  ID  undeclared '], 3464: ['}', ' expected declaration or statement at end of input'], 3465: ['        ID ( ID , ID , ID , ID )', ' expected  ;  before  }  token'], 3466: ['\tint ID = CONST ; printf ( STRING , ID ) ;', ' redeclaration of  ID  with no linkage'], 3467: ['    ID = CONST', ' expected  ;  before  scanf '], 3468: ['    char ID [ ] = { CHARST , CHARST , CHARST }', ' expected  ,  or  ;  before  printf '], 3469: ['\t    if ( ID [ ID ] = CHARNST )', ' empty character constant'], 3470: ['\t    ID = ID', ' expected  ;  before  while '], 3471: ['    while ( ID < CONST ) && ( ID != ID )', ' expected identifier before  (  token'], 3472: ['\t    if ( ID [ ] == CHART )', ' expected expression before  ]  token'], 3473: ['    printf ( ( STRING , ID . ID ) ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 3474: ['\t    printf ( STRING )', ' expected  ;  before  printf '], 3475: ['\tprintf ( STRING , ID ( ID , ID , CONST ) ) ;', ' too many arguments to function  ID '], 3476: ['}', ' expected declaration or statement at end of input'], 3477: ['     if ( ID % ID = CONST )', ' lvalue required as left operand of assignment'], 3478: ['for ( ID = ID - CONST ; ID >= CONST ; ID -- )', '  ID  undeclared '], 3479: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  }  token'], 3480: ['            if ( ID [ ID ] == ID [ ID ] )', ' expected expression before  }  token'], 3481: ['    }', ' expected identifier or  (  before  }  token'], 3482: ['    ID = getchar ( )', ' expected  ;  before  for '], 3483: ['    scanf ( STRING , & ID , & ID , ) ;', ' expected expression before  )  token'], 3484: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 3485: ['         printf ( STRING , ID * ID * ID ) ;', '  ID  undeclared '], 3486: ['}', ' expected identifier or  (  before  }  token'], 3487: ['    scanf ( STRING , % ID , % ID ) ;', ' expected expression before  %  token'], 3488: ['\tprintf ( STRING , ID )', ' expected  ;  before  scanf '], 3489: ['    ID = ( struct ID * ) malloc ( sizeof ( struct ID ) ) ;', ' incompatible types when assigning to type  struct node  from type  struct node * '], 3490: ['\tif ( ID == CHARNST )\tscanf ( STRING , & ID ) ;', ' empty character constant'], 3491: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 3492: ['    ID = ID - CHARST + ID ;', '  ID  undeclared '], 3493: ['\t        { printf ( STRING , ID [ ID ] ) }', ' expected  ;  before  }  token'], 3494: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 3495: ['printf ( STRING )', ' expected  ;  before  return '], 3496: ['    if ( ID = CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 3497: ['\t    getchar ( STRING , ID [ ID ] ) ;', ' too many arguments to function  getchar '], 3498: ['}', ' expected declaration or statement at end of input'], 3499: ['        printf ( STRING )', ' expected  ;  before  }  token'], 3500: ['\tint ID = ID ( ID , ID , CONST , CONST ) = > CONST ? ID ( ID , ID , CONST , CONST ) : CONST ; ', ' expected expression before  >  token'], 3501: ['    scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 3502: ['    ID ( ID , ID )', ' expected  ;  before  return '], 3503: ['                if ( ID [ ID + ID ] != ID [ CONST ID ] )', ' array subscript is not an integer'], 3504: [' return ( ID ( ID , ID , ++ ID ) )                         ', ' expected  ;  before  }  token'], 3505: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 3506: ['       ID = ID + ( pow ( - CONST , ID ) * pow ( ID , CONST * ID ) ) / ID ( CONST * ID ) ', ' expected  ;  before  }  token'], 3507: ['    else ( ID == ID && ID == ID )                                                                                  ', ' expected  ;  before  return '], 3508: ['            if ( ( ID != CONST ) && ( ID == ID ) ) )', ' expected statement before  )  token'], 3509: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 3510: ['ID = - ;', ' expected expression before  ;  token'], 3511: ['    int ID = ID [ CONST ] ;', ' redeclaration of  ID  with no linkage'], 3512: ['\t    ID ( ID [ CONST ] ) ;', ' too few arguments to function  ID '], 3513: ['printf ( STRING )', ' expected  ;  before  return '], 3514: ['ID = ID ^ CONST - CONST * ID * ID ;', ' invalid operands to binary ^ '], 3515: ['{   ID ++ ;', '  ID  undeclared '], 3516: ['      ID [ ID - CONST - ID ] = ID [ ID ]', ' expected  ;  before  printf '], 3517: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 3518: ['            printf ( STRING )', ' expected  ;  before  }  token'], 3519: ['     ID [ ID ] = ID [ ID - ID ]   ', ' expected  ;  before  }  token'], 3520: ['     if ( ID ( ID [ ID ] , ID ) )', ' incompatible type for argument 2 of  ID '], 3521: ['     printf ( STRING , ID - ID [ ID + CONST ] ) ;', '  ID  undeclared '], 3522: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 3523: ['\t        if ( ID == ID ) || ( ID == ID ) {', ' expected expression before  ||  token'], 3524: ['\tID = CONST', ' expected  ;  before  if '], 3525: ['       else', '  else  without a previous  if '], 3526: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 3527: ['\tfloat ID , ID , ;', ' expected identifier or  (  before  ;  token'], 3528: ['\tprintf ( STRING CONST , ID ) ;', ' expected  )  before numeric constant'], 3529: ['\t     if ( ( ID [ CONST ] = ID [ CONST ] - CONST ) && ID [ CONST ] = ID [ CONST ] )', ' lvalue required as left operand of assignment'], 3530: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 3531: ['printf ( STRING ID / STRING ) ;\t', ' expected  )  before  ID '], 3532: ['     if ( ID = CONST && ID = ID ) { printf ( STRING ) ; }', ' lvalue required as left operand of assignment'], 3533: ['\t ID ++', ' expected  ;  before  }  token'], 3534: ['\t       if ( ID [ ID ] == ID [ ID ] ) ID = ID + CONST ;', '  ID  undeclared '], 3535: ['}', ' expected  ; , identifier or  (  before  int '], 3536: ['    ID ( ID , ID ) ;', ' too many arguments to function  ID '], 3537: ['\tint ID = strlen ( ) ;', ' too few arguments to function  strlen '], 3538: ['printf ( STRING )\t', ' expected  ;  before  return '], 3539: ['\tID = ID ( ID )', ' expected  ;  before  for '], 3540: ['    ID ( ID , CONST , CONST , ID )', ' expected  ;  before  return '], 3541: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3542: ['    ID ( ID , ID [ ] , CONST ) ;', ' expected expression before  ]  token'], 3543: ['            ID [ ] = ID [ ID ] ;', ' expected expression before  ]  token'], 3544: ['void ID ( ID [ ] [ CONST ] , int ID , int ID )', ' unknown type name  ID ; did you mean  int ?'], 3545: ['        printf ( STRING )', ' expected  ;  before  }  token'], 3546: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 3547: ['\tfloat ID , ;', ' expected identifier or  (  before  ;  token'], 3548: ['                        printf ( STRING , ID )', ' expected  ;  before  }  token'], 3549: ['        ID = ID % ID', ' expected  ;  before  if '], 3550: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 3551: ['    if ( ID == ID - CONST && ID = ID - CONST )', ' lvalue required as left operand of assignment'], 3552: ['    scanf ( STRING , & CHARST ) ;', ' lvalue required as unary  &  operand'], 3553: ['    printf', ' expected  ;  before  while '], 3554: ['printf ( STRING , ID )', ' expected  ;  before  return '], 3555: ['  else if ( ID = CONST ) ;', '  else  without a previous  if '], 3556: ['        scanf ( STRING , ID )', ' expected  ;  before  }  token'], 3557: ['        for ( ID = ID - CONST ; ID <= CONST * ID - CONST ; ID ++ ) {', '  ID  undeclared '], 3558: ['float ID = CONST * ID * ID ;', ' redeclaration of  ID  with no linkage'], 3559: ['\tif ID == CONST ;', ' expected  (  before  ID '], 3560: [' else if ( ID == ID ) {', '  else  without a previous  if '], 3561: ['    ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 3562: ['        for ( ID = ID ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 3563: ['\t    if ( ( ID [ ID ] ) == CHARNST ) {', ' empty character constant'], 3564: ['\t    else printf ( STRING , ID )', ' expected  ;  before  printf '], 3565: ['int main ( ) { int ID = ;', ' expected expression before  ;  token'], 3566: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID , & ID )', ' expected  ;  before  if '], 3567: ['float ID = CONST / CONST ID * ID * ID * ID ;', ' invalid suffix "pi" on integer constant'], 3568: ['\tprintf ( STRING , ID [ ID ] - ID [ ID ] )', ' expected  ;  before  return '], 3569: ['            } ID [ ID - CONST ] = CHART', ' expected  ;  before  puts '], 3570: ['    printf ( " ID = % ID \\ ID ID = % ID \\ ID ID = % ID \\ ID ID = % ID ,', ' missing terminating " character'], 3571: ['\t    ID ( CONST , CONST , ID [ ID ] , CONST , CONST ) ;', ' too many arguments to function  ID '], 3572: ['    scanf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 3573: ['\tfor ( ID = CONST , ID [ ID ] = CHART ; ID ++ , ) {', ' expected expression before  )  token'], 3574: ['        ID ++', ' expected  ;  before  }  token'], 3575: ['    , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 3576: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3577: ['\tscanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 3578: ['    printf ( STRING , & ID )', ' expected  ;  before  }  token'], 3579: ['    for ( ID = CONST ; ID != ID && ; ID ++ ) {', ' expected expression before  ;  token'], 3580: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 3581: ['        if ( ID = < ID / CONST )', ' expected expression before  <  token'], 3582: ['\t            printf ( STRING )', ' expected  ;  before  }  token'], 3583: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 3584: ['    printf ( STRING , ID ( ID , CONST , ID - CONST , CONST ) ? STRING : STRING ) ;', ' too many arguments to function  ID '], 3585: ['\tprintf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 3586: [' printf ( STRING )', ' expected  ;  before  return '], 3587: ['\t        printf ( STRING , ID [ ID * ID - ID ] ) ;', '  ID  undeclared '], 3588: ['        if ( ID != = ID ) {', ' expected expression before  =  token'], 3589: ['float ID = ID ( ID )', ' expected  ,  or  ;  before  printf '], 3590: ['         printf ( STRING , ID )', ' expected  ;  before  ID '], 3591: ['   ID ( ) ;', ' too few arguments to function  ID '], 3592: ['    for ( ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 3593: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3594: ['\t            continue', ' expected  ;  before  }  token'], 3595: ['        break ;', ' break statement not within loop or switch'], 3596: ['ID = ID = ID = CONST ;', ' initializer element is not constant'], 3597: ['\treturn CONST ; -', ' expected expression before  }  token'], 3598: ['\tscanf ( STRING )', ' expected  ;  before  return '], 3599: ['}', ' expected declaration or statement at end of input'], 3600: ['   if ( ( ID < CONST ID ) || ( ID > CONST ) || ( ID < CONST ) || ( ID > CONST ) )', ' invalid suffix "d" on integer constant'], 3601: ['\t        ID [ ID ] = CHARST CHARST ;', ' expected  ;  before  ID '], 3602: ['    struct ID * ID = * ( struct ID ) malloc ( sizeof ( struct ID ) ) ;', ' conversion to non-scalar type requested'], 3603: ['    int ID = ;', ' expected expression before  ;  token'], 3604: ['        else if', ' expected  (  before  else '], 3605: ['\t   ID [ ID ] = ID ;', '  ID  undeclared '], 3606: ['\t { int ID [ ID ] = ID + CONST ;', ' variable-sized object may not be initialized'], 3607: ['    ID = ID + CONST', ' expected  ;  before  }  token'], 3608: ['    ID = ID % ID', ' expected  ;  before  for '], 3609: ['    printf ( STRING , ( ID * ID - CONST ID * ID ) ) ;', ' invalid suffix "a" on integer constant'], 3610: ['    printf ( STRING , ID , ) ;', ' expected expression before  )  token'], 3611: ['} }          ', ' expected identifier or  (  before  }  token'], 3612: ['    static int ID = ID ;', ' initializer element is not constant'], 3613: ['  for ( ID = ID ; ID <= CONST ID ; ID ++ )                       ', ' invalid suffix "n" on integer constant'], 3614: ['    ID = CONST', ' expected  ;  before  for '], 3615: ['\twhile ( ID >= CONST && < CONST ) {', ' expected expression before  <  token'], 3616: ['        ID [ ID + ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 3617: ['    int * ID , ID , * ID , ;', ' expected identifier or  (  before  ;  token'], 3618: ['    if ( ID % CONST != CONST ) printf ( STRING ) ;                                 ', '  ID  undeclared '], 3619: ['\tscanf ( STRING & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 3620: ['            ID [ ID ] = int ( ID [ ID ] ) ;', ' expected expression before  int '], 3621: ['}', ' expected  ; , identifier or  (  before  int '], 3622: ['          if ( ID [ ID ] == ID || ID [ ID ] == ID )', '  ID  undeclared '], 3623: ['  ID = CONST * ID', ' expected  ;  before  printf '], 3624: ['    for ( ID = ID ; ID < ID ; ID = ID + CONST )', ' expected expression before  }  token'], 3625: ['    printf ( STRING )', ' expected  ;  before  return '], 3626: ['            printf ( STRING , ID -> ID ) ;', '  ID  undeclared '], 3627: ['    for ( ID = CONST ; ID < ID ; ID = ++ ) {', ' expected expression before  )  token'], 3628: ['    float ID = CONST * ID * ID * ID * ;', ' expected expression before  ;  token'], 3629: ['     for ( ID = CONST ; ID < CONST ; ID ++ ) {', ' assignment to expression with array type'], 3630: ['    char ID [ ] ;', ' array size missing in  ID '], 3631: ['    for ( ID = ID ; ID ++ )', ' expected  ;  before  )  token'], 3632: ['printf ( STRING , ID )', ' expected  ;  before  return '], 3633: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 3634: ['\t            ID ;', '  ID  undeclared '], 3635: ['        ID = [ ID ] ;', ' expected expression before  [  token'], 3636: ['    ID = ID ( ID , ID , ID )', ' expected  ;  before  if '], 3637: ['           ID = ID - ID', ' expected  ;  before  }  token'], 3638: ['if ( ID ( ( ( ID - ID ) * ( ID - ID ) ) + ( ( ID - ID ) * ( ID - ID ) ) ) = < ID ) {', ' expected expression before  <  token'], 3639: ['void ID ( int ID [ ] [ CONST ] , int ID , int ID , int ID [ ] [ CONST ] , ) {', ' expected declaration specifiers or  ...  before  )  token'], 3640: ['\t    int ID , ID ;', ' redeclaration of  ID  with no linkage'], 3641: ['int ID -> ID ( int ID [ ] ) ;', " expected  = , ',',  ; ,  asm  or  __attribute__  before  ->  token"], 3642: ['    int ID = strlen ( ) ;', ' too few arguments to function  strlen '], 3643: ['\t            printf ( STRING )', ' expected  ;  before  }  token'], 3644: ['    printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 3645: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 3646: ['    }', ' expected  ; , identifier or  (  before  int '], 3647: ['\tfor ( int ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 3648: ['}', ' expected  ; , identifier or  (  before  int '], 3649: ['    int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 3650: ['}      return ID ( ID , ID , ID + CONST )', ' expected  ;  before  }  token'], 3651: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 3652: ['ID = ( - CONST ) * ID', ' expected  ;  before  printf '], 3653: ['\t        ID ID = ID ( ID ) ;', ' too few arguments to function  ID '], 3654: ['    for ( ID = CONST ; ID <= ID [ ID - CONST ] ; ID ++ )', '  ID  undeclared '], 3655: ['    int ID [ ] ;', ' array size missing in  ID '], 3656: ['\tfor ( ID = ID && ID = CONST ; ID > CONST && ID < ID ; ID -- && ID ++ ) {', ' lvalue required as left operand of assignment'], 3657: ['\t  { ID [ ID ] = ID + ID * ( ( ID - ID ) / ID ) } ;', ' expected  ;  before  }  token'], 3658: ['\tscanf ( STRING , & ID [ ID - CONST ] )', ' expected  ;  before  scanf '], 3659: ['            ID [ ID ] = ID [ ID ] ; ID ++ ; ID ++ :', ' expected  ;  before  :  token'], 3660: ['    else ( ID = ( ID * ID ) ) ;', '  else  without a previous  if '], 3661: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 3662: ['\t    ID [ ID ] . ID = ID ( ID , ID ) ; }', '  struct rect  has no member named  ID ; did you mean  ID ?'], 3663: ['\t        printf ( STRING )', ' expected  ;  before  ID '], 3664: ['int main ( ) { float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 3665: ['\tfloat ID = ID [ CONST + ( ID * ID / CONST ) ] ;', ' subscripted value is neither array nor pointer nor vector'], 3666: ['\t           ID = ID - ;', ' expected expression before  ;  token'], 3667: ['            ID ++', ' expected  ;  before  }  token'], 3668: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3669: ['        printf ( STRING , ID [ ID ] ) ;                     ', '  ID  undeclared '], 3670: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 3671: ['\tscanf ( STRING , & ID , % ID , & ID ) ;', ' expected expression before  %  token'], 3672: ['\treturn CONST', ' expected  ;  before  }  token'], 3673: ['\t    ID == CONST * ID', ' expected  ;  before  ID '], 3674: ['    printf ( STRING )', ' expected  ;  before  return '], 3675: ['\t            int ID [ ID ] = ID ;', ' variable-sized object may not be initialized'], 3676: ['    ID = ID ;', " incompatible types when assigning to type  struct string *  from type 'struct string'"], 3677: ['        for ( ID = CONST , ID >= CONST ; ID = ID + CONST )', ' expected  ;  before  )  token'], 3678: ['\t        printf', ' expected  ;  before  }  token'], 3679: ['    float ID = ID * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 3680: ['    free ( ID -> ID )', ' expected  ;  before  ID '], 3681: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 3682: [' } else ( ID > CHARST && ID < CHARST ) {', ' expected  ;  before  {  token'], 3683: ['\t    for ( ID = ; ID <= ID ; ID ++ )', ' expected expression before  ;  token'], 3684: ['\t    if ( CONST <= ID [ ID ] <= CONST && ID [ CONST ] != CONST )', '  ID  undeclared '], 3685: ['    else if ( ( ID != ID ) && ( ID == ID - ID + CONST ) )', ' expected expression before  }  token'], 3686: ['            scanf ( STRING , & ( ID [ ID ] . ID ) , & ( ID [ ID ] . ID ) ,                            & ( ID [ ID ] . ID ) )', ' expected  ;  before  }  token'], 3687: ['}', ' expected declaration or statement at end of input'], 3688: ['\tfor ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 3689: ['ID * ID', ' expected  ;  before  ID '], 3690: ['\t{   scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 3691: ['    ID ( ID , ID , ID , ID ) ;', ' too few arguments to function  ID '], 3692: ['    printf ( STRING , ID * ID - CONST ID * ID ) ;', ' invalid suffix "a" on integer constant'], 3693: ['}', ' expected  ; , identifier or  (  before  int '], 3694: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 3695: ['    \twhile ( ID [ ID ] == ID [ ID ] && ID = CONST && ID < ID && ID < ID )', ' lvalue required as left operand of assignment'], 3696: ['        printf ( STRING )', ' expected  ;  before  printf '], 3697: ['    printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 3698: ['\t if ( ID * ID = ID * ID )  {', ' lvalue required as left operand of assignment'], 3699: ['    for ( ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 3700: ['    ID = ID [ CONST ] ;', '  ID  undeclared '], 3701: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 3702: ['    ID', ' expected  ;  before  return '], 3703: ['\tfor ( ID = CONST ; ID < ID - CONST , ID ++ ) {', ' expected  ;  before  )  token'], 3704: ['\tfloat ID = ( CONST / CONST ) * ID * ID ;                                             ', '  ID  undeclared '], 3705: ['}', ' expected declaration or statement at end of input'], 3706: ['\tscanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 3707: ['    char ID [ CONST ] = { ID } ;', '  ID  undeclared '], 3708: ['    double float ID , ID ;', ' two or more data types in declaration specifiers'], 3709: ['\t    } CHARST = CHARST + CONST ;', ' lvalue required as left operand of assignment'], 3710: ['    ID = ( int * ) malloc ( * sizeof ( int ) ) ;', ' invalid type argument of unary  *  '], 3711: ['     printf ( STRING , ID )', ' expected  ;  before  return '], 3712: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3713: ['    else ( ID < ( ID * ID ) )', ' expected  ;  before  printf '], 3714: ['\tprintf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 3715: [' if ( ID\x01 ( ID , ID ) == CONST )', ' stray  \\1  in program'], 3716: ['            if ( ID % CONST == CONST ) && ( ID % CONST != CONST ) ', ' expected identifier before  (  token'], 3717: ['ID = ID + ID [ ID ] [ CONST ] ;', '  ID  undeclared '], 3718: ['\t    ID = - CONST', ' expected  ;  before  }  token'], 3719: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 3720: ['        printf ( STRING )', ' expected  ;  before  }  token'], 3721: ['\t    if ( ( ID >= CONST ) CHART ( ID <= CONST ) CHART ( ID >= CONST ) CHART ( ID <= CONST ) )', ' expected  )  before  \\x2626 '], 3722: ['            if ( ( ID % CONST == CONST ) && ( ( ID > ) && ( ID < ID ) ) )', ' expected expression before  )  token'], 3723: ['        break ;', ' break statement not within loop or switch'], 3724: ['\t    for ( ID >= ID ; ID == ( CHARST ) )', ' expected  ;  before  )  token'], 3725: ['} }', ' expected declaration or statement at end of input'], 3726: ['\t    else', ' expected expression before  }  token'], 3727: ['        ID [ ID ] [ CONST ] = ID ( ID [ ] , ID , ID ) ;', ' expected expression before  ]  token'], 3728: ['    int ID = ID - ID - CONST ;', '  ID  undeclared '], 3729: ['printf ( STRING )', ' expected  ;  before  printf '], 3730: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 3731: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3732: [' printf ( STRING , CONST ID ) ;', ' fixed-point types not supported for this target'], 3733: ['ID = ( char * ) malloc ( ID * sizeof ( char ) ) ;', '  ID  undeclared '], 3734: ['    printf ( STRING , ID )', ' expected  ;  before  printf '], 3735: ['                    ID = ID ( ID , ID , ID , ID ) ;', ' too few arguments to function  ID '], 3736: ['            ID ++', ' expected  ;  before  printf '], 3737: ['        int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 3738: ['        {   ID = CONST', ' expected  ;  before  for '], 3739: ['    int ID , ID , ID [ ID ] = { CONST } , ID = CONST ;', ' variable-sized object may not be initialized'], 3740: ['    return ID ;', '  ID  undeclared '], 3741: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 3742: ['        ID [ ID ] = ID ( ID [ ID ] , ID [ ID ] , ID [ ID ] , ID [ ID ] ) ;', " incompatible types when assigning to type  float *  from type 'float'"], 3743: ['    if ( ID == CONST ) { return CONST }', ' expected  ;  before  }  token'], 3744: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3745: ['            if ( ID ( ID - ID ) )', '  ID  undeclared '], 3746: ['        ID = putchar ( ) ;', ' too few arguments to function  putchar '], 3747: ['\tputchar ( ) ;', ' too few arguments to function  putchar '], 3748: ['\t    ID ++', ' expected  ;  before  }  token'], 3749: ['    } printf ( STRING , ID ) ;', '  ID  undeclared '], 3750: ['    ID = CONST * ID * ID', ' expected  ;  before  printf '], 3751: ['        printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 3752: ['\tprintf ( STRING )', ' expected  ;  before  return '], 3753: ['    if ( ID % ID = CONST ) { return ID ; }', ' lvalue required as left operand of assignment'], 3754: ['\tID ( ID , ID , ID )', ' expected  ;  before  return '], 3755: ['    else { printf ( STRING )', ' expected  ;  before  }  token'], 3756: ['    printf ( STRING , * ID * ID ) ;', ' invalid operands to binary * '], 3757: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3758: ['\t   printf ( STRING , ID [ ID - ID ] ) ;', '  ID  undeclared '], 3759: ['scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 3760: ['}', ' expected declaration or statement at end of input'], 3761: ['    scanf ( STRING . & ID ) ;', ' expected identifier before  &  token'], 3762: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3763: ['      for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 3764: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 3765: ['\t  printf ( STRING , ID ) ;', '  ID  undeclared '], 3766: ['        ID = ID * CONST', ' expected  ;  before  ID '], 3767: ['    int * ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 3768: ['    ID = int ( ID [ ID ] ) * ID ; printf ( STRING , ID ) ;', ' expected expression before  int '], 3769: ['    scanf ( STRING , * ( ID + ID ) , STRING , * ( ID + ID ) ) ;', ' invalid type argument of unary  *  '], 3770: ['\tID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 3771: ['    scanf ( STRING , )', ' expected expression before  )  token'], 3772: ['            if ( ID == ( ID + CONST ) / CONST || ID ==  )', ' expected expression before  )  token'], 3773: ['}', ' expected declaration or statement at end of input'], 3774: ['        ID = ID * ID * ID / ( ID * ( ID + CONST ) )', ' expected  ;  before  ID '], 3775: ['\t    if ( ID [ ID ] == CHARST || ID [ ID ] = CONST ) {', ' lvalue required as left operand of assignment'], 3776: ['\t    else ( ID <= CONST )', ' expected  ;  before  ID '], 3777: ['    int ID ', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 3778: ['printf ( STRING )\t', ' expected  ;  before  return '], 3779: ['\t} printf ( STRING , ID ) ; printf ( STRING )', ' expected  ;  before  if '], 3780: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3781: ['\t++ ID += ID ++ + ++ ID ;', ' lvalue required as left operand of assignment'], 3782: ['    int ID , ID = strlen ( ID ) ;', ' redeclaration of  ID  with no linkage'], 3783: ['\tID [ ID ] = CHART', ' expected  ;  before  return '], 3784: ['        else', '  else  without a previous  if '], 3785: ['     printf ( STRING )', ' expected  ;  before  }  token'], 3786: ['    if ( ( ID == ( ID * ID - ID * ID ) / ( ID - ID ) + ( ID * ID - ID * ID ) / ( ID - ID ) ) && ( ID ! ID ) ) {                                                           ', ' expected  )  before  !  token'], 3787: ['            ( * ( ID + ID ) + ID ) = ( * ( ID + ID ) + ID ) ;', ' lvalue required as left operand of assignment'], 3788: ['\t        else if ( ID [ ID ] != = ID [ ID ] ) {', ' expected expression before  =  token'], 3789: ['    if ( ( ID * ID ) = ( ID * ID ) ) {', ' lvalue required as left operand of assignment'], 3790: ['    printf ( STRING , ID - CONST )', ' expected  ;  before  ID '], 3791: ['    struct ID * ID , * ID , ;', ' expected identifier or  (  before  ;  token'], 3792: ['  { if ( ID ( ID ) = ID ) { return CONST ; }', ' lvalue required as left operand of assignment'], 3793: ['    int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 3794: ['}', ' expected declaration or statement at end of input'], 3795: ['    if ( ( ID / ID ) = ( ID / ID ) ) ;', ' lvalue required as left operand of assignment'], 3796: ['ID = ( char * ) malloc ( ID * ID ) ;', '  ID  undeclared '], 3797: ['    for ( ID = CONST ; ID [ ID ] !=\\ ID ; ID + ID + CONST )', ' stray  \\  in program'], 3798: ['    printf', ' expected  ;  before  ID '], 3799: ['int void ID ( char ID [ ] , char ID ) {', ' two or more data types in declaration specifiers'], 3800: ['\telse if ( ( CHARST <= ID ) && ID <= CHARST )', '  else  without a previous  if '], 3801: ['\t    printf ( STRING , ( CONST ID [ ID ] - CHARST + CONST ) % CONST ) ;', ' invalid suffix "a" on integer constant'], 3802: ['    char ID = CHARST', ' expected  ,  or  ;  before  printf '], 3803: ['           printf ( STRING , ID )', ' expected  ;  before  }  token'], 3804: ['\tfor ( ID = CONST , ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 3805: ['    if ( ID [ ID ] == ID [ ID ] && ID ! ( == ) ID )', ' expected  )  before  !  token'], 3806: ['            ID ( ID ) ;                    ', '  ID  undeclared '], 3807: ['\tID = ( ( CONST / CONST ) * ( ID - CONST ) + CONST ) ;', '  ID  undeclared '], 3808: ['    printf ( STRING . ID -> ID ) ;', ' request for member  ID  in something not a structure or union'], 3809: ['        if ( ID == ID )', '  ID  undeclared '], 3810: ['    else if ( CHARST >= CHARST && CHARST <= CHARST )', '  else  without a previous  if '], 3811: ['    ID = ( * ( ID + CONST ) ) * ( * ( ID + CONST ) ) ;', ' invalid type argument of unary  *  '], 3812: ['\telse if ( ID != ID != ID )', '  else  without a previous  if '], 3813: ['    scanf ( STRING , & ID & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 3814: ['\tID = ID - CONST', ' expected  ;  before  }  token'], 3815: ['\t       ID [ ID ] = ID [ ID - CONST + ID ( ID - ID ) ]', ' expected  ;  before  }  token'], 3816: ['          int ID , ID , ID ;  ', '  ID  redeclared as different kind of symbol'], 3817: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 3818: ['\t   if ( ID [ ID ] == ID )', '  ID  undeclared '], 3819: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3820: ['        printf ( STRING , * ( ID + ID ) ) ;', '  ID  undeclared '], 3821: ['\tscanf ( STRING . & ID ) ;', ' expected identifier before  &  token'], 3822: ['   for ( ID = CONST ; ID < ID ; ID ++ ) { getchar ( ID [ ID - CONST ] ) ; }', ' too many arguments to function  getchar '], 3823: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 3824: ['        ID = ID', ' expected  ;  before  return '], 3825: ['    printf ( STRING , ID . ID . ID )', ' expected  ;  before  return '], 3826: ['        while ( ID [ ID ] = > ID [ ID ] && ID != ID ) ID -- ;', ' expected expression before  >  token'], 3827: ['        scanf ( STRING , & ID [ ID ] = ID - CONST ) ;', ' lvalue required as left operand of assignment'], 3828: ['\tfor ( int ID = ; ID < ID + CONST ; ID ++ )', ' expected expression before  ;  token'], 3829: ['\t        scanf ( STRING , & ( ID + CONST * ID + CONST * ID ) ) ;', ' lvalue required as unary  &  operand'], 3830: [' printf ( STRING , ID )', ' expected  ;  before  return '], 3831: ['        printf ( ID ( ID ) ) ;', '  ID  undeclared '], 3832: ['\tprintf ( STRING )', ' expected  ;  before  return '], 3833: ['    printf ( STRING , ID , ID , ) ;', ' expected expression before  )  token'], 3834: ['    printf ( CHARNST ) ;', ' empty character constant'], 3835: ['\tchar ID , ID [ CONST ] ;', ' redeclaration of  ID  with no linkage'], 3836: ['\t            ID [ ID + ID ] = ID [ ] ;             ', ' expected expression before  ]  token'], 3837: ['\t    if ( ID [ ID ] == CHARNST ) break ;', ' empty character constant'], 3838: ['            ID ++', ' expected  ;  before  }  token'], 3839: ['        ID = ID - ID }', ' expected  ;  before  }  token'], 3840: ['\tprintf ( STRING , ( CONST / CONST ) * CONST * CONST ^ CONST ) ;', ' invalid operands to binary ^ '], 3841: ['                ID = ID [ ID ] ; ]', ' expected statement before  ]  token'], 3842: ['\tfor ( ID = CONST ; ID [ ID ] != CHART ) {', ' expected  ;  before  )  token'], 3843: ['\tscanf ( STRING , & ID . & ID , & ID ) ;', ' expected identifier before  &  token'], 3844: ['\t    if ( ID + ID = ID )', ' lvalue required as left operand of assignment'], 3845: ['    char ID [ CONST ] ;', ' conflicting types for  ID '], 3846: ['    for ( ID >= ID ; ID ++ ) {', ' expected  ;  before  )  token'], 3847: ['}', ' expected declaration or statement at end of input'], 3848: ['}', ' expected  ; , identifier or  (  before  int '], 3849: ['        ID [ ID ] += char ( ID ) ;    ', ' expected expression before  CHAR '], 3850: ['    printf ( STRING )', ' expected  ;  before  }  token'], 3851: ['\twhile ( ID [ ID ] != ID )', '  ID  undeclared '], 3852: ['else { printf ( STRING ) ; }', '  else  without a previous  if '], 3853: ['        if ( ID [ ID ] == ID ) { printf ( STRING , ID ) ; ID = CHART }', ' expected  ;  before  }  token'], 3854: ['\t} break ;', ' break statement not within loop or switch'], 3855: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 3856: ['            for ( ID = ID ; ID <= ID + ; ID ++ )', ' expected expression before  ;  token'], 3857: ['\t     ID [ ID ] = CHART', ' expected  ;  before  }  token'], 3858: ['    { printf ( STRING ) }', ' expected  ;  before  }  token'], 3859: ['\tprintf ( STRING , ( ( ID * ID ) - ( ID * ID ) ) * ID / CONST )', ' expected  ;  before  return '], 3860: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 3861: ['\tprintf ( STRING , ( ID % CONST ) - CONST )', ' expected  ;  before  return '], 3862: ['    if ( ( pow ( ID . ID . ID - ID . ID . ID , CONST ) ) + pow ( ID . ID . ID - ID . ID . ID , CONST ) ) <= pow ( ( ID . ID . ID + ID . ID . ID ) , CONST ) {', ' expected expression before  <=  token'], 3863: ['    int ID [ ID ] [ ID ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 3864: ['    int ID , ID , ID , ID = CONST , ID , ID = ID [ CONST ] [ ID ] , ID ;', '  ID  undeclared '], 3865: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3866: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 3867: ['     printf ( STRING ) }', ' expected  ;  before  }  token'], 3868: ['\tID = ID ( ID [ CONST ] ) ;', '  ID  undeclared '], 3869: ['    int ID = getchar ( ) ; putchar ( ) ;', ' too few arguments to function  putchar '], 3870: ['    printf ( STRING ID ID . STRING ) ;', ' expected  )  before  ID '], 3871: ['\twhile ( ID [ ID ] != ID )', '  ID  undeclared '], 3872: ['        ( ID + ID ) = ( char * ) malloc ( ID * sizeof ( char ) ) ;', ' lvalue required as left operand of assignment'], 3873: ['   else if { ', ' expected  (  before  {  token'], 3874: ['    ID ( ID , ID , ID + CONST )', ' expected  ;  before  }  token'], 3875: ['\t    ID = ID', ' expected  ;  before  while '], 3876: ['           continue ;', ' continue statement not within a loop'], 3877: ['            ID [ ID ]', ' expected  ;  before  }  token'], 3878: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3879: ['    while ( ( ( ID % CONST ) == CONST ) && ( ( ID % CONST ) != CONST ) ) ) {', ' expected statement before  )  token'], 3880: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 3881: ['    if ( ( ID == CONST ) || ( ID == CONST ) ) )', ' expected statement before  )  token'], 3882: ['                int ID = ID + ID ;', '  ID  undeclared '], 3883: ['    ID = ID * ID ;', '  ID  undeclared '], 3884: ['    int ID [ ] ;                     ', ' array size missing in  ID '], 3885: ['    ID ( ID + CONST ) = CHART ;', ' called object  ID  is not a function or function pointer'], 3886: ['        scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 3887: ['# ID', ' invalid preprocessing directive #includw; did you mean #include?'], 3888: ['\tprintf ( STRING , * ) ;', ' expected expression before  )  token'], 3889: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 3890: ['\t    printf ( STRING ID ) ;', ' expected  )  before  ID '], 3891: ['            ID = CHARST', ' expected  ;  before  }  token'], 3892: ['\t        ID = ID', ' expected  ;  before  ID '], 3893: ['\tprintf ( STRING , ) ;', ' expected expression before  )  token'], 3894: ['    ID [ ] = CHART ;', ' expected expression before  ]  token'], 3895: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 3896: ['    { ID [ ID ] = CHARST + ID', ' expected  ;  before  printf '], 3897: ['        for ( ID = CONST ; ID )', ' expected  ;  before  )  token'], 3898: ['    ID -> ID = ID', ' expected  ;  before  }  token'], 3899: ['      scanf ( STRING , & ( ID + ID ) ) ;     ', ' lvalue required as unary  &  operand'], 3900: ['\t     if ( ID [ ID ] != CHART )', '  ID  undeclared '], 3901: ['        int ID = CONST , ID , ;', ' expected identifier or  (  before  ;  token'], 3902: ['    printf ( STRING , ID [ CONST ] . ID ) ; ', '  ID  {aka  struct list_entry } has no member named  ID '], 3903: ['\tint ID = CONST ;', ' redeclaration of  ID  with no linkage'], 3904: ['    ID = ID + CHARST', ' expected  ;  before  return '], 3905: ['\t    if ( CHARST <= ID [ ID ] && ID [ ID ] <= CHARST ) || ( CHARST <= ID [ ID ] && ID [ ID ] <= CHARST )', ' expected expression before  ||  token'], 3906: ['\tint ID = ID - CONST ;', '  ID  undeclared '], 3907: ['}', ' expected declaration or statement at end of input'], 3908: ['   printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 3909: ['\t    while ( int ID [ ID ] != CHART )', ' expected expression before  int '], 3910: ['\telse ( ID == CONST )', ' expected  ;  before  {  token'], 3911: ['    scanf ( STRING , & ID . ID [ ID ] . ID , & ID . ID [ ID ] . ID , & ID . ID [ ID ] . ID ) ;', '  ID  undeclared '], 3912: ['                    ID = ID + ID [ ID ] [ ID - CONST - ID + ID ] ;', '  ID  undeclared '], 3913: ['    free ( ID ) ;', ' incompatible type for argument 1 of  free '], 3914: ['}', ' expected declaration or statement at end of input'], 3915: ['        if ( ID [ ID ] == CHARNST )', ' empty character constant'], 3916: ['\t            if ( ID ( ID ) ) == CONST ;', ' expected expression before  ==  token'], 3917: ['\tfor ( ID = CONST ; ID < ; ID ++ ) {', ' expected expression before  ;  token'], 3918: ['printf ( STRING )', ' expected  ;  before  return '], 3919: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 3920: ['            ID = ID [ ID ]', ' expected  ;  before  }  token'], 3921: ['\tint ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 3922: ['      printf ( STRING , ) ;', ' expected expression before  )  token'], 3923: ['\tID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 3924: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 3925: ['    {    ID = ID + CONST', ' expected  ;  before  printf '], 3926: ['    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 3927: ['                printf ( STRING )', ' expected  ;  before  break '], 3928: ['\t            printf ( STRING )', ' expected  ;  before  }  token'], 3929: ['    ID = ID * ( ID - ID )', ' expected  ;  before  ID '], 3930: ['                    printf ( STRING , ID )', ' expected  ;  before  }  token'], 3931: ['    printf ( STRING , strlen ( ID ) )\t', ' expected  ;  before  return '], 3932: ['    { printf ( STRING )', ' expected  ;  before  break '], 3933: ['    scanf ( STRING , & ID , ID ) ;', '  ID  undeclared '], 3934: ['    puts ( ID )', ' expected  ;  before  return '], 3935: ['printf ( ID ) ;', ' incompatible type for argument 1 of  printf '], 3936: ['}', ' expected declaration or statement at end of input'], 3937: ['    for ( ID = CONST ; ID <= ID - CONST ; ID ++ )', '  ID  undeclared '], 3938: ['        else ( ID [ ID ] == ID [ ID - CONST ] ) {', ' expected  ;  before  {  token'], 3939: ['        ID [ ] = STRING ;', ' expected expression before  ]  token'], 3940: ['        return ID ( ID , ID , ID )', ' expected  ;  before  }  token'], 3941: ['\t        if ( ( ID != CONST || ID != ID ) && ( ID != CONST || ID != = ID ) )', ' expected expression before  =  token'], 3942: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 3943: ['}', ' expected declaration or statement at end of input'], 3944: ['        int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 3945: ['    else ( ID > ID && ( ID > ID && ID > ID ) ) {', ' expected  ;  before  {  token'], 3946: ['        if ( ID ( ID [ ID ] , ID [ ID - CONST ] != ID ( ID [ ID ] , ID [ ID - CONST ] ) ) ) ) {', ' expected statement before  )  token'], 3947: ['}', ' expected declaration or statement at end of input'], 3948: ['}', ' expected declaration or statement at end of input'], 3949: ['                            printf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 3950: ['                    ID [ ID ] = ID [ ID ] + CONST ;', '  ID  undeclared '], 3951: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 3952: ['\tprintf ( STRING )', ' expected  ;  before  return '], 3953: ['            ID = ID ( ID [ ID ] , ID [ ID ] )', ' expected  ;  before  if '], 3954: ['    if ( CHARST <= ID [ ID ] <= CHARST && CHARST <= ID [ ] <= CHARST ) {', ' expected expression before  ]  token'], 3955: ['    if ( ID == ID && ID == ID ) return CONST ;', '  ID  undeclared '], 3956: ['                printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 3957: ['\t    ID = CONST', ' expected  ;  before  }  token'], 3958: ['    printf ( STRING )', ' expected  ;  before  ID '], 3959: ['    float ID = CONST', ' expected  ,  or  ;  before  float '], 3960: ['        default ; break ;', ' expected  :  before  ;  token'], 3961: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 3962: ['int ID ( char * ID , int ID , ID )', ' unknown type name  ID '], 3963: ['    while ( )', ' expected expression before  )  token'], 3964: ['\t ID ( ID ) ;', ' too few arguments to function  ID '], 3965: ['   for ( ID = ID ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 3966: ['     int * ID = ( int * ) calloc ( sizeof ( int ) * CONST ) ;', ' too few arguments to function  calloc '], 3967: ['    else printf ( STRING , ) ;', ' expected expression before  )  token'], 3968: ['    printf ( "                              ', ' missing terminating " character'], 3969: ['scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 3970: ['\t        printf ( STRING , ID [ ID - ID ] ) ;', '  ID  undeclared '], 3971: ['    ID -> ID ;', '  struct node  has no member named  ID '], 3972: ['}', ' expected declaration or statement at end of input'], 3973: ['   scanf ( STRING , & ID ) ;', '  ID  undeclared '], 3974: ['    ID = ( char * ) calloc ( sizeof ( char ) * CONST ) ;', ' too few arguments to function  calloc '], 3975: ['    return CONST', ' expected  ;  before  }  token'], 3976: ['\t} break ;', ' break statement not within loop or switch'], 3977: ['    char ID [ ] ;', ' array size missing in  ID '], 3978: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 3979: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 3980: ['    ID [ ID ] =\\ CONST ;', ' stray  \\  in program'], 3981: ['\t    for ( ID = CONST ; ID <= ID )', ' expected  ;  before  )  token'], 3982: ['      printf ( STRING , ID ) ;                                                                                 ) ;', ' expected statement before  )  token'], 3983: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 3984: ['    if', ' expected  (  before  return '], 3985: ['   ID ( ID , ID , ID )', ' expected  ;  before  break '], 3986: ['    for ( int ID = CONST ; ID < CONST , ID ++ ) {', ' expected  ;  before  )  token'], 3987: ['}', ' expected declaration or statement at end of input'], 3988: ['printf ( STRING )', ' expected  ;  before  return '], 3989: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 3990: ['    ID = ID * CONST * CONST', ' expected  ;  before  printf '], 3991: ['\t        ID ++', ' expected  ;  before  if '], 3992: ['\tif', ' expected  (  before  {  token'], 3993: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 3994: ['    ID = ID ;', '  ID  undeclared '], 3995: ['printf ( STRING )', ' expected  ;  before  return '], 3996: ['}', ' expected declaration or statement at end of input'], 3997: ['  }', ' expected declaration or statement at end of input'], 3998: ['        else if ( ID [ ID ] < ID [ ID + CONST ] && ID [ ID ] < ID [ ID - CONST ] ) {', '  else  without a previous  if '], 3999: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 4000: ['    else ( ID == CONST )', ' expected  ;  before  {  token'], 4001: ['  return ID * * * ID ( * ( ID + CONST ) + CONST , ID - CONST ) ;', ' invalid type argument of unary  *  '], 4002: ['    ID = ID ( int ID ) ;', ' expected expression before  int '], 4003: ['    int ID = strlen ( ID )', ' expected  ,  or  ;  before  printf '], 4004: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 4005: ['if ( ID == CONST || ID = CONST || ID = CONST )', ' lvalue required as left operand of assignment'], 4006: ['}', ' expected  ; , identifier or  (  before  int '], 4007: ['\tfor ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 4008: ['    printf ( STRING , ID , ID )', ' expected  ;  before  ID '], 4009: ['}', ' expected declaration or statement at end of input'], 4010: ['{ if ( ID [ ID ] * CONST - CHARST + CONST <= ID )', '  ID  undeclared '], 4011: ['                ID = ID [ ID + CONST ] ;', ' subscripted value is neither array nor pointer nor vector'], 4012: ['\tfor ( ID = ID / CONST + CONST ; ID >= CONST ID ++ )', ' expected  ;  before  ID '], 4013: ['}', ' expected declaration or statement at end of input'], 4014: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4015: ['int ID = - CONST', ' expected  ,  or  ;  before  int '], 4016: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 4017: ['            ID = ID', ' expected  ;  before  ID '], 4018: ['        ID = CONST }', ' expected  ;  before  }  token'], 4019: ['    int ID = sqrt ( int ID ) ;', ' expected expression before  int '], 4020: ['        ID = ID [ ID ]', ' expected  ;  before  ID '], 4021: ['    printf ( STRING , ID / ID ) ;', '  ID  undeclared '], 4022: ['\tchar ID [ CONST ]', ' expected  ;  before  CHAR '], 4023: ['       if ( ( ID % CONST ) != = CONST ) { printf ( STRING , ID % CONST ) ; }', ' expected expression before  =  token'], 4024: ['}', ' expected declaration or statement at end of input'], 4025: ['\t    if ( ID ++ CHART ) { break ; }', ' expected  )  before  \\xa '], 4026: ['    else', '  else  without a previous  if '], 4027: ['\tprintf ( STRING , ID , ID , ID , ) ;', ' expected expression before  )  token'], 4028: ['}', ' expected declaration or statement at end of input'], 4029: ['\tif', ' expected  (  before  {  token'], 4030: ['    else if ( ( ID * ID + ID * ID ) = ( ID * ID ) )', ' lvalue required as left operand of assignment'], 4031: ['        for ( ID = ID + CONST ; < ID ; ID ++ )', ' expected expression before  <  token'], 4032: ['    if < ( ID / ID ) = ( ID / ID ) > ;', ' expected  (  before  <  token'], 4033: ['    if ( ID == ID ) {', '  ID  undeclared '], 4034: ['    ID = ( int ID * ) malloc ( ID * sizeof ( int ) ) ;', ' expected  )  before  ID '], 4035: ['          ID = getchar ( ) ; ID ++ ; } ID [ ID ] = CHART ; printf ( STRING , ID )', ' expected  ;  before  ID '], 4036: ['}', ' expected declaration or statement at end of input'], 4037: ['\t    ID ++', ' expected  ;  before  }  token'], 4038: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 4039: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 4040: ['    ID ( )', ' expected  ;  before  ID '], 4041: ['\t     else', ' expected expression before  }  token'], 4042: ['    { ID = CONST', ' expected  ;  before  for '], 4043: ['        if ( ID [ ID ] <= CHARST && ID [ ID ] >= CHARST ) || ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) ID = CONST ;', ' expected expression before  ||  token'], 4044: ['        printf ( STRING , ID )', ' expected  ;  before  printf '], 4045: ['    ID = ID ( ID ) ;', ' void value not ignored as it ought to be'], 4046: ['\twhile ( ID [ ] != ID ) ; {', ' expected expression before  ]  token'], 4047: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 4048: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 4049: ['    while ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 4050: ['ID = CONST * ID - CONST', ' expected  ;  before  for '], 4051: ['   else ', '  else  without a previous  if '], 4052: ['\t\tprintf ( STRING , sizeof ( long float ) ) ;', ' both  long  and  float  in declaration specifiers'], 4053: ['ID = CONST', ' expected  ;  before  printf '], 4054: ['    int ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 4055: ['int ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 4056: ['    int ID [ ID ] = { } ;', ' variable-sized object may not be initialized'], 4057: ['        printf ( STRING )', ' expected  ;  before  return '], 4058: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 4059: ['         ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 4060: ['    ( ID ( ID , CONST , CONST ) == CONST ) ? printf ( STRING ) : printf ( STRING ) ;', ' too few arguments to function  ID '], 4061: ['scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 4062: ['        scanf ( STRING , ID ) ; }', '  ID  undeclared '], 4063: ['    ID = ID ( ID ) ;', '  ID  undeclared '], 4064: ['          printf ( STRING )', ' expected  ;  before  else '], 4065: ['}', ' expected declaration or statement at end of input'], 4066: ['\t ID ( ID [ ] [ CONST ] , ID , ID , ID [ ] [ CONST ] , ID , ID , ID [ ] [ CONST ] ) ;', ' expected expression before  ]  token'], 4067: ['}', ' expected declaration or statement at end of input'], 4068: ['    printf ( STRING , ID [ ] , ID ) ;', ' expected expression before  ]  token'], 4069: ['        if ( ID ( ID , ID ) == ID ) ID ( ID , ID ) ;', ' void value not ignored as it ought to be'], 4070: ['                                                                               for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ ) {', '  ID  undeclared '], 4071: ['\tfor ( int ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 4072: ['    while ( ID != ID ) {', '  ID  undeclared '], 4073: ['printf ( STRING , CHARST )', ' expected  ;  before  return '], 4074: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 4075: ['    ID = ;', ' expected expression before  ;  token'], 4076: ['    ID ( ID , ID , ID , ID + CONST ) ;', '  ID  undeclared '], 4077: ['    ID ( ID , ID , ID ) ;', '  ID  undeclared '], 4078: ['scanf ( STRING . & ID , & ID , & ID , & ID , & ID ) ;', ' expected identifier before  &  token'], 4079: ['   ID = ( ID , ID , ID , ID )', ' expected  ;  before  if '], 4080: ['                if ( ID [ ID ] == ID [ ID + ID ] )', '  ID  undeclared '], 4081: ['                 ID = CONST ;    `                                      ', ' stray  `  in program'], 4082: ['    ID = ( struct ID * ) calloc ( CONST * sizeof ( struct ID ) ) ;', ' too few arguments to function  calloc '], 4083: ['            ID ++', ' expected  ;  before  }  token'], 4084: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 4085: ['\t    if ( ( ID != CONST ) || ( ID != CONST\x01 ) )', ' stray  \\1  in program'], 4086: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 4087: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 4088: ['           ID [ ID ] = ID [ ID - CONST ]', ' expected  ;  before  }  token'], 4089: ['     ID = ID ( CONST )', ' expected  ;  before  printf '], 4090: ['        ID = ID ( ID [ ID ] , ID [ ID + CONST ] )', ' expected  ;  before  }  token'], 4091: ['     return CONST', ' expected  ;  before  }  token'], 4092: ['     ID ( ID , ID , ID )', ' expected  ;  before  }  token'], 4093: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before numeric constant'], 4094: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 4095: ['     scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 4096: ['\treturn CONST', ' expected  ;  before  }  token'], 4097: ['}', ' expected declaration or statement at end of input'], 4098: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 4099: ['\tID = ID ( ID , ID , ID , ID )', ' expected  ;  before  if '], 4100: ['    ( ID > ID ) { printf ( STRING ) ; }', ' expected  ;  before  {  token'], 4101: ['    ID = ( struct ID * ) ( malloc ( struct ID ) ) ;', ' expected expression before  struct '], 4102: ['\telse if ( ID == CONST || ID = CONST ) {', ' lvalue required as left operand of assignment'], 4103: ['     printf ( STRING , ID ( ID + CONST , ID ) ) ;', ' invalid use of void expression'], 4104: ['    for ( ID = CONST ; ID < ID + ID ; ID ++ ) {', '  ID  undeclared '], 4105: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 4106: ['    float ID = CONST * CONST ID * CONST ;', ' expected  ,  or  ;  before  ID '], 4107: ['         scanf ( STRING , & ID [ ID ] & ID [ ID + CONST ] & ID [ ID + CONST ] ) ;', ' invalid operands to binary & '], 4108: ['\t    if ( ID == CHARNST ) break ;', ' empty character constant'], 4109: ['    ID ( ID , ID , ID [ ] ) ;', ' expected expression before  ]  token'], 4110: ['\t    if ( ID [ ID ] == ID )', ' subscripted value is neither array nor pointer nor vector'], 4111: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 4112: ['    if ( ID = > ID )', ' expected expression before  >  token'], 4113: ['\t    if ( ID [ ID ] == CHART ) { ID = ID [ ID - CONST ] } ;', ' expected  ;  before  }  token'], 4114: ['    scanf ( STRING , % ID , & ID ) ; ', ' expected expression before  %  token'], 4115: ['\tID = ID ;', '  ID  undeclared '], 4116: ['    printf ( STRING )', ' expected  ;  before  return '], 4117: ['\t    scanf ( STRING , ID )', ' expected  ;  before  ID '], 4118: ['    if ( ( ID * ID + ID * ID == * ID ) || ( ID * ID + ID * ID == ID * ID ) || ( ID * ID + ID * ID == ID * ID ) ) {', ' invalid type argument of unary  *  '], 4119: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 4120: ['\tID ( ID , ID ) ;', ' too few arguments to function  ID '], 4121: ['\tchar ID [ CONST ] ; int ID , ID , ID = CONST , ID ;', ' redeclaration of  ID  with no linkage'], 4122: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 4123: ['    ID ( ID , ID , ID , CONST ) ;', '  ID  undeclared '], 4124: ['scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 4125: ['        printf ( STRING , ( ID = CONST ) ? STRING : STRING ) ;', ' lvalue required as left operand of assignment'], 4126: ['            if ( ID [ ID ] = > ID [ ID + CONST ] )', ' expected expression before  >  token'], 4127: ['\t    while ( ID [ ID ] = > ID [ ID ] ) { ID -- ; if ( ID >= ID ) break ; }', ' expected expression before  >  token'], 4128: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 4129: ['}', ' expected declaration or statement at end of input'], 4130: ['        ID ++', ' expected  ;  before  }  token'], 4131: ['}', ' expected  ; , identifier or  (  before  int '], 4132: ['  float  ID = sqrt ( CONST ) / CONST * ID * ID ;', ' redeclaration of  ID  with no linkage'], 4133: ['        if ( ID % ID = CONST )', ' lvalue required as left operand of assignment'], 4134: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 4135: ['              if ( ( ID - ID ) == CONST ) )', ' expected statement before  )  token'], 4136: ['\tprintf ( STRING )', ' expected  ;  before  return '], 4137: ['                if ( ( ID - ID ) = ID ) {', ' lvalue required as left operand of assignment'], 4138: ['    ID ( ID == CONST ) { printf ( STRING ) ; }', ' expected  ;  before  {  token'], 4139: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 4140: ['    free ( ID )', ' expected  ;  before  return '], 4141: ['    ID = getchar ( )', ' expected  ;  before  gets '], 4142: ['    } printf ( STRING , ID [ ID ] . ID ) ;', '  ID  undeclared '], 4143: ['# include < stdio.h', ' missing terminating > character'], 4144: ['    ( ( ( ID - ID ) * ( ID - ID ) ) + ( ( ID - ID ) * ( ID - ID ) ) - ( ID * ID ) ) = ID ;', ' lvalue required as left operand of assignment'], 4145: ['        printf ( STRING ) :', ' expected  ;  before  :  token'], 4146: ['    else { printf ( STRING ) } ;', ' expected  ;  before  }  token'], 4147: ['                  ID ', ' expected  ;  before  }  token'], 4148: ['\t    printf ( STRING , & ID -> ID ) ;', ' invalid type argument of  ->  '], 4149: ['       ID [ ID ] = ID [ ID ] - CHARST ; if ( ID [ ID ] < CONST ) ID [ ID ] = char ( ID [ ID ] + CONST ) ;', ' expected expression before  CHAR '], 4150: ['printf ( STRING , ID )', ' expected  ;  before  printf '], 4151: ['                 { printf ( STRING ) : }', ' expected  ;  before  :  token'], 4152: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 4153: ['    char = ( char * ) malloc ( ID * ID * sizeof ( char ) ) ;', ' expected identifier or  (  before  =  token'], 4154: ['    { ID = ID + ID } ;', ' expected  ;  before  }  token'], 4155: ['        int ID = CONST', ' expected  ,  or  ;  before  while '], 4156: ['{ printf ( STRING ) , }', ' expected expression before  }  token'], 4157: ['\t        continue', ' expected  ;  before  }  token'], 4158: ['printf ( STRING )', ' expected  ;  before  if '], 4159: ['            ID [ ( ( ID + CONST ) - ID ) ] = ID [ ( ( ID + CONST ) - ID ) ] ID [ ID ] [ ID ] ;', ' expected  ;  before  ID '], 4160: [' scanf ( STRING , & ID )', ' expected  ;  before  return '], 4161: ['\t        if ( ID [ ID ] >= CONST && ID <= CONST && ID [ ID + CONST ] >= CONST && ID [ ID + CONST ] <= CONST )', '  ID  undeclared '], 4162: ['    int ID , ID , ID , ID , ID [ CONST ] [ CONST ] ;', '  ID  redeclared as different kind of symbol'], 4163: ['if ( ID % CONST == CONST && ID % CONST != = CONST )', ' expected expression before  =  token'], 4164: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 4165: ['\tID % CONST == CONST ? ID = ID / CONST : ID = ID / CONST + CONST ;', ' lvalue required as left operand of assignment'], 4166: ['    if ( ID == CONST ID ) {', ' invalid suffix "n" on integer constant'], 4167: ['        ID = ID + ID [ ID ] * ID ( CONST , ID - ID + CONST ) ;', '  ID  undeclared '], 4168: ['    printf ( STRING , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 4169: ['    int ID = ID ( int ID ) ;', ' expected expression before  int '], 4170: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 4171: ['    return ID ;', ' incompatible types when returning type  struct set  but  struct set *  was expected'], 4172: ['{   int ID , ID , ID = CONST , ID = CONST , ID [ CONST ] , ID , ID ;', '  ID  redeclared as different kind of symbol'], 4173: ['        ID ( ID , ID )', ' expected  ;  before  }  token'], 4174: ['      printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 4175: ['    ID [ ID - CONST ] = ID', ' expected  ;  before  ID '], 4176: ['        CHAR CHAR CONST ;', ' lvalue required as left operand of assignment'], 4177: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 4178: ['if ( ID [ ID ] == CHARNST )', ' empty character constant'], 4179: ['        ID = ID -> ID', ' expected  ;  before  if '], 4180: ['        ID ( ID , ID , ID , ID ) ;', '  ID  undeclared '], 4181: ['float ID = CONST', ' expected  ,  or  ;  before  printf '], 4182: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 4183: ['\t    if ( ID [ ID ] == CHART ) {', '  ID  undeclared '], 4184: ['            ID , ID , ID ) ;', '  ID  undeclared '], 4185: ['# ID < ID . ID >', ' invalid preprocessing directive #incluse; did you mean #include?'], 4186: ['                printf ( STRING )', ' expected  ;  before  else '], 4187: ['       { ID ++ ; ID = CONST ; } printf ( STRING , ID [ CONST ] )', ' expected  ;  before  }  token'], 4188: [' scanf ( STRING , % ID , % ID , % ID ) ;', ' expected expression before  %  token'], 4189: ['       ID [ ID ] = char ( ID [ ID ] + ( CONST ) ) ;', ' expected expression before  CHAR '], 4190: ['}', ' expected declaration or statement at end of input'], 4191: ['\t        ID [ ID ] = ID [ ID + CONST ] ;', '  ID  undeclared '], 4192: ['        for ( ID = CONST ; ID < ID ; ID ++ ) { ID [ ID ] [ ID = CONST ]', ' expected  ;  before  if '], 4193: ['}', ' expected declaration or statement at end of input'], 4194: ['\t                if ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST || )', ' expected expression before  )  token'], 4195: ['    ID [ ID ] = int ( ( CONST * ID ) - CONST ) ;', ' expected expression before  int '], 4196: ['            ID ++', ' expected  ;  before  }  token'], 4197: ['  if ( ID == + )', ' expected expression before  )  token'], 4198: ['}', ' expected declaration or statement at end of input'], 4199: ['    int ID = ID - ID', ' expected  ,  or  ;  before  printf '], 4200: ['    scanf ( STRING , int ID ) ;', ' expected expression before  int '], 4201: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 4202: ['    if ( ID % CONST == CONST ) && ( ID % CONST == CONST ) && ( ID % CONST == CONST )                          ', ' expected identifier before  (  token'], 4203: ['    ID = ID ;', ' lvalue required as left operand of assignment'], 4204: ['    if ID < CONST , ID = - ( ID ) ;', ' expected  (  before  ID '], 4205: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 4206: ['            ID [ ID ] == ID [ ID ]', ' expected  ;  before  ID '], 4207: ['\t    ID % CONST = ID ;', ' lvalue required as left operand of assignment'], 4208: ['    printf ( STRING )', ' expected  ;  before  }  token'], 4209: ['        ID = ID * CONST + ID = ID ;', ' lvalue required as left operand of assignment'], 4210: ['\tif ( ID = )', ' expected expression before  )  token'], 4211: ['    else', '  else  without a previous  if '], 4212: ['scanf ( STRING , ID )', ' expected  ;  before  }  token'], 4213: ['\tprintf ( STRING , ID )', ' called object is not a function or function pointer'], 4214: ['    if ( ( ( ID + ID ) < ID ) || ( ( ID + ID ) < ID ) || ( ( ID + ID ) < ID ) )', '  ID  undeclared '], 4215: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 4216: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4217: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 4218: ['    scanf ( STRING , & ID , & ID , & ID ) ;', '  ID  undeclared '], 4219: ['    printf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  return '], 4220: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 4221: ['    ID ( ID , ID ) ;', '  ID  undeclared '], 4222: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 4223: ['       scanf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 4224: ['                ID [ ID ] = ID [ ID - CONST ]', ' expected  ;  before  }  token'], 4225: ['printf ( STRING , ID , ID )    ', ' expected  ;  before  if '], 4226: ['    return ID ( ID - CONST , ID , char ID ) ;', ' expected expression before  CHAR '], 4227: ['printf ( ID ( ID [ CONST ] ) STRING , ID ( ID [ CONST ] ) ) ;', ' expected  )  before string constant'], 4228: ['\t    printf ( STRING , ID [ ID ] )    ', ' expected  ;  before  }  token'], 4229: ['}', ' expected declaration or statement at end of input'], 4230: ['        if ( ( ID % CONST != CONST ) && ( ID % CONST ! CONST ) && ( ID % CONST != CONST ) && ( ID % CONST != CONST ) )', ' expected  )  before  !  token'], 4231: ['\tprintf ( STRING , ( CONST ) % ( pow ( CONST , CONST ) ) ) ;', ' invalid operands to binary % '], 4232: ['\tID ID = ID ( ID ) ;', ' unknown type name  ID ; did you mean  int ?'], 4233: ['\t        ID ID = CONST ;', ' unknown type name  ID '], 4234: ['        if ( ( ID == ( CHARNST ) ) && ( ID != CONST ) ) {', ' empty character constant'], 4235: ['        { ID [ ID ] [ ID ] = CONST }', ' expected  ;  before  }  token'], 4236: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4237: ['    ID ( ID , CONST , ID - CONST )', ' expected  ;  before  return '], 4238: ['    if ( ( ID < ID ) && ) {', ' expected expression before  )  token'], 4239: ['        ID ++', ' expected  ;  before  }  token'], 4240: ['\tprintf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 4241: ['    if ( ( ( ID - ID ) * ( ID - ID ) = ( ID - ID ) * ( ID - ID ) ) && ( ID != ID ) ) {', ' lvalue required as left operand of assignment'], 4242: ['ID = ID + ID + ID ;                                   ', '  ID  undeclared '], 4243: ['if ( ID ( ( ( ID - ID ) * ( ID - ID ) ) + ( ( ID - ID ) * ( ID - ID ) ) ) = < ID ) {', ' expected expression before  <  token'], 4244: ['    ID = ID * ( ID * CONST + ID ) ;', '  ID  undeclared '], 4245: ['\tID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 4246: ['            if ( ID [ ID ] == char )', ' expected expression before  CHAR '], 4247: ['\tfor ( ID = CONST ; ID !=\\ CONST ; ID ++ )', ' stray  \\  in program'], 4248: ['\tprintf ( STRING )', ' expected  ;  before  return '], 4249: ['        case CONST : printf ( STRING ) ; break ', ' expected  ;  before  }  token'], 4250: ['int ID = CONST', ' expected  ,  or  ;  before  printf '], 4251: ['}', ' expected declaration or statement at end of input'], 4252: ['printf ( STRING , ID ( ID ) )', ' expected  ;  before  ID '], 4253: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 4254: ['    ID = ID * ( CONST + ( ID ) / CONST ) ;', '  ID  undeclared '], 4255: ['        ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 4256: ['        { printf ( STRING , ID == ( ID * ID * ) ( ID - ID ) / ( ID * ID - ID * ID ) ,', ' expected expression before  )  token'], 4257: ['    if ( ID == ) { printf ( STRING , ID ) ; ID = - CONST ; }', ' expected expression before  )  token'], 4258: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 4259: ['\tID = ID', ' expected  ;  before  for '], 4260: ['    ID ( ID [ ] , ID , ID ) ;', ' expected expression before  ]  token'], 4261: ['    if ( ID % CONST == CONST && ID != CONST )', '  ID  undeclared '], 4262: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 4263: ['\tprintf ( STRING , CONST / CONST * ID ( ID * ID - ID * ID ) ) ;', ' called object  ID  is not a function or function pointer'], 4264: ['    printf ( ID = STRING ) ;', '  ID  undeclared '], 4265: ['\t   printf ( STRING , ID )', ' expected  ;  before  if '], 4266: ['\tprintf ( STRING )', ' expected  ;  before  printf '], 4267: ['    else  ( ID + ID <= ID || ID + ID <= ID || ID + ID <= ID ) {', ' expected  ;  before  {  token'], 4268: ['\tint ID ;', ' redeclaration of  ID  with no linkage'], 4269: ['    ID ( ID , ID , ID + CONST ) ;', ' too few arguments to function  ID '], 4270: ['        printf ( STRING , putchar ( ) ) ;', ' too few arguments to function  putchar '], 4271: ['       if ( ID ( ID , ID , ID ) == CONST )', '  ID  undeclared '], 4272: ['               ID = ID ( ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 4273: ['    ID = ID + ID [ ID - CONST ]', ' expected  ;  before  return '], 4274: ['            printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 4275: ['char ID [ ] = { CHARCHARHARRARCHARAR           ', ' expected  ,  or  ;  before  int '], 4276: ['              ID = ID [ ID ]', ' expected  ;  before  }  token'], 4277: ['    printf ( STRING )', ' expected  ;  before  ID '], 4278: ['    if', ' expected  (  before  printf '], 4279: ['              for ( ID = CONST ; ID [ ID ] != CHART ; ++ ID , ++ ID )', '  ID  undeclared '], 4280: ['    } printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 4281: ['       printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 4282: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 4283: ['                 if ( ID [ ID ] [ ID ] == CONST && ID [ ID ] [ ID ] == - ID [ ID ] [ ID ] ) {', ' wrong type argument to unary minus'], 4284: ['    printf ( STRING ,            , ID , ID , ID , ID ) ;', ' expected expression before  ,  token'], 4285: ['    return ID ;', '  ID  undeclared '], 4286: ['        if ( ID ( ID ) ) { printf ( STRING , ID ) ; break }', ' expected  ;  before  }  token'], 4287: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 4288: ['        scanf ( STRING , & ID . ID , & ID . ID , & ID   . ID ) ;', ' expected expression before  ID '], 4289: ['    if ( ( ID == ID - CONST && ID == ID - CONST ) || ID == ID || ID == ID || ID < CONST || ID < CONST || ID [ ID ] [ ID ] = CONST )', ' lvalue required as left operand of assignment'], 4290: ['            printf ( STRING , * ( ID + ID ) ) ;', ' invalid type argument of unary  *  '], 4291: ['            printf', ' expected  ;  before  }  token'], 4292: ['            ID ++', ' expected  ;  before  }  token'], 4293: ['    printf ( STRING )', ' expected  ;  before  ID '], 4294: ['    if ( ID [ ID ] > CONST )', ' expected expression before  int '], 4295: ['printf ( STRING . , ID , ID , ID , ID , ID ) ;', ' expected identifier before  ,  token'], 4296: ['   } ', ' expected identifier or  (  before  }  token'], 4297: ['printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 4298: ['\tID ( ID , & [ ID ] ) ;', ' expected expression before  [  token'], 4299: ['}', ' expected declaration or statement at end of input'], 4300: ['        scanf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 4301: ['            ID ++', ' expected  ;  before  }  token'], 4302: ['        for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 4303: ['    scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 4304: ['       printf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 4305: ['    switch ( ID ) {', '  ID  undeclared '], 4306: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 4307: ['        if ( ID * ID = ID * ID + ID * ID )', ' lvalue required as left operand of assignment'], 4308: ['    for ( int ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 4309: ['    ID = float ( CONST / CONST * ID * ID ) ;', ' expected expression before  float '], 4310: ['        for ( int ID = CONST ; ID <= ID / CONST + CONST ) {', ' expected  ;  before  )  token'], 4311: ['# include', ' #include expects "FILENAME" or <FILENAME>'], 4312: ['    char ID [ CONST ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 4313: ['    printf ( STRING )', ' expected  ;  before  return '], 4314: ['    * ( ID + ID ) = * ( ID + ID ) ++ ;', ' lvalue required as increment operand'], 4315: ['    ID = ID + CONST', ' expected  ;  before  }  token'], 4316: ['            for ( int ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 4317: ['     printf ( STRING , ID [ ID - CONST ] ) ;                                      ', '  ID  undeclared '], 4318: ['      ID [ ID ] = ID [ ID ] + ID [ ID % ID ( ID ) ] - CHARST + CONST - ID % CONST ;', '  ID  undeclared '], 4319: ['            int ID [ ID ] = ID [ ID ] * ID [ ID ] ;', ' variable-sized object may not be initialized'], 4320: ['int ID ( ID [ CONST ] , int ID )', ' unknown type name  ID '], 4321: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 4322: ['    printf ( STRING , ID ( ID [ ] ) ) ;', ' expected expression before  ]  token'], 4323: ['   else if ( ID == CONST )', '  else  without a previous  if '], 4324: ['            scanf ( STRING , & ( * ( ID + ID ) + ID ) ) ;', ' lvalue required as unary  &  operand'], 4325: ['        ID [ ID ] = ID [ ID ] + ( ID [ ID ] - CHARST ) + CONST ;', '  ID  undeclared '], 4326: ['printf ( STRING )', ' expected  ;  before  }  token'], 4327: ['}', ' expected declaration or statement at end of input'], 4328: ['\tprintf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 4329: ['}', ' expected declaration or statement at end of input'], 4330: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 4331: ['         if ( ( ID * ID + ID * ID ) = ID * ID ) {', ' lvalue required as left operand of assignment'], 4332: ['    char ID [ CONST ] , ID [ CONST ] ;', '  ID  redeclared as different kind of symbol'], 4333: ['                    ID [ ID ] = ID [ ID ] [ ID ] ;', '  ID  undeclared '], 4334: ['    float ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 4335: ['     printf ( STRING )', ' expected  ;  before  }  token'], 4336: ['\tfloat ID = CONST , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 4337: ['          scanf ( STRING , & ID [ ID ] [ ID ] ) ; ', '  ID  undeclared '], 4338: ['        if ( ID [ ID ] == ID [ ID ] )', ' expected expression before  else '], 4339: ['      if ( ID [ ID ] == ID [ CONST ] ) {', '  ID  undeclared '], 4340: ['        return ID ( ID , ID , ID + CONST , ID , ID ) ;', ' too few arguments to function  ID '], 4341: ['   ID ( ID , ID [ ] , ID [ CONST ] ) ;', ' expected expression before  ]  token'], 4342: ['    ID = - ID', ' expected  ;  before  printf '], 4343: ['    else if {', ' expected  (  before  {  token'], 4344: ['        ID = ID * ID [ ID ]', ' expected  ;  before  if '], 4345: ['\tscanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 4346: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 4347: ['    ID = ( char * ) malloc ( sizeof ( char ) * ( ID + CONST ) ) ;', '  ID  undeclared '], 4348: ['      scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 4349: ['        ID = CHARST', ' expected  ;  before  return '], 4350: ['                ID = ID ( ID , ID , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 4351: ['    printf ( STRING , ID . ID [ CONST ] , ID . ID [ CONST ] , ID . ID [ CONST ] , ID . ID [ CONST ] ) ;', '  ID  undeclared '], 4352: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 4353: ['    char ID = CHART', ' expected  ,  or  ;  before  printf '], 4354: ['\tchar ID [ CONST ] = { ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID / ; } ;', ' expected expression before  ;  token'], 4355: ['    if ( ID / CONST == ID )', '  ID  undeclared '], 4356: ['         printf ( STRING , ID )', ' expected  ;  before  return '], 4357: ['\t} while ( ID [ ID ] != / CONST ) ;', ' expected expression before  ID  token'], 4358: ['    while ( ID != = - CONST ) {', ' expected expression before  =  token'], 4359: ['    else ID ++ && ID = ID - CONST ;', ' lvalue required as left operand of assignment'], 4360: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4361: ['printf ( STRING )', ' expected  ;  before  return '], 4362: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 4363: ['        ID * ID = ID ( ID [ ID ] * ID ) ;', ' lvalue required as left operand of assignment'], 4364: ['    if ( ID * ID == ID * ID + ID * ID ) || ( ID * ID == ID * ID + ID * ID ) || ( ID * ID == ID * ID + ID * ID )', ' expected expression before  ||  token'], 4365: ['\tfor ( ID = CONST ; ID <= CONST , ID ++ ) {', ' expected  ;  before  )  token'], 4366: ['}', ' expected declaration or statement at end of input'], 4367: ['     ( ID + ID ) = CONST ;    ', ' lvalue required as left operand of assignment'], 4368: ['    if ( ID == ID - CONST )', '  ID  undeclared '], 4369: ['    if ( ID % CONST = CONST ) {', ' lvalue required as left operand of assignment'], 4370: ['    printf ( STRING )', ' expected  ;  before  return '], 4371: ['        else if ( ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID ) {', ' lvalue required as left operand of assignment'], 4372: ['        ID [ ID ] = CHAR   }', ' expected  ;  before  }  token'], 4373: ['            if ( ID = ID + CONST && ID = ID + CONST && ID != ID )', ' lvalue required as left operand of assignment'], 4374: ['printf ( STRING , CONST * ( ID ^ CONST ) - CONST * ID ) ;', ' invalid operands to binary ^ '], 4375: ['    for ( ID = CONST ; ID < ( ID / CONST ) ; ID ++ ) {', '  ID  undeclared '], 4376: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 4377: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 4378: ['     ID = ID + ID }', ' expected  ;  before  }  token'], 4379: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 4380: ['printf ( STRING , CONST * ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 4381: ['\t  scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 4382: ['\tif ( ID == ( ID + ) )', ' expected expression before  )  token'], 4383: ['ID ( ID , CONST , ID )', ' expected  ;  before  return '], 4384: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 4385: ['\t    } * /', ' expected expression before  ID  token'], 4386: ['\t    break ;', ' break statement not within loop or switch'], 4387: ['   else if ( ID > CONST )', '  else  without a previous  if '], 4388: ['    printf ( STRING )', ' expected  ;  before  return '], 4389: ['    printf ( STRING ) ', ' expected  ;  before  return '], 4390: ['                    ( ID + ID ) = ( ID + ID + CONST ) ;', ' lvalue required as left operand of assignment'], 4391: ['    if ( ID [ CONST ] != CHARST && ID [ ID ] = CHARST )', ' lvalue required as left operand of assignment'], 4392: ['       for ( ID = CONST ; ID < ( ID . ID ) , ID ++ )', ' expected  ;  before  )  token'], 4393: ['  { if ( ID [ ID ] != CHARNST )', ' empty character constant'], 4394: ['ID [ ID ] = CHART', ' expected  ;  before  return '], 4395: ['        if ( ID % ID == CONST )', '  ID  undeclared '], 4396: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 4397: ['    { printf ( STRING )', ' expected  ;  before  }  token'], 4398: ['\tID [ ID ] = getchar ( ) ;', '  ID  undeclared '], 4399: ['         ID = ID [ ID ] * ID [ ID ] ;', '  ID  undeclared '], 4400: ['\t    \tID = ID ++', ' expected  ;  before  printf '], 4401: ['            ( * ( ID + ( ID - ID ) ) + ( ID - ID ) ) = * ( * ( ID + ID ) + ID ) ;', ' lvalue required as left operand of assignment'], 4402: ['\t  ID = CONST', ' expected  ;  before  if '], 4403: ['    if ( ID ( ID ) == CHARST )', ' called object  ID  is not a function or function pointer'], 4404: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 4405: ['    printf ( STRING ID * ID ) ;', ' expected  )  before  ID '], 4406: ['\tprintf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 4407: ['            ID = getchar ( ) ;', ' assignment to expression with array type'], 4408: ['  ID ( ID , ID - CONST , ID - ID )', ' expected  ;  before  }  token'], 4409: ['    printf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 4410: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 4411: ['    if ( ID ( ID ) == CONST ) { printf ( STRING , ID ) , break ;', ' expected expression before  break '], 4412: ['        if ( ( ID / CONST ) == CONST || ID = CONST ) {', ' lvalue required as left operand of assignment'], 4413: ['    for ( ID = CONST ; ID [ ID ] != CHARST ; ID ++ , ) {', ' expected expression before  )  token'], 4414: ['        break ;', ' break statement not within loop or switch'], 4415: ['    if ( ID < CONST || ID > ID ) break ;', ' break statement not within loop or switch'], 4416: ['    ID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on integer constant'], 4417: ['    printf ( STRING , ID [ CONST ] , ID )', ' expected  ;  before  return '], 4418: ['\t        while ( ID < ID ) {', '  ID  undeclared '], 4419: ['        ID = ( ( CONST / CONST ) * ID ( ( ID * ID ) - ( ID * ID ) ) ) ;', ' called object  ID  is not a function or function pointer'], 4420: ['        ID /= CONST ;', '  ID  undeclared '], 4421: ['\telse', '  else  without a previous  if '], 4422: ['    printf ( STRING , ID , ID )', ' expected  ;  before  }  token'], 4423: ['    ID * ID ;', ' unknown type name  ID '], 4424: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 4425: ['         if ( ( ID [ ID ] . ID > ID [ ID ] . ID ) && ( ID [ ID ] . ID < ID [ ID ] . ID ) ) ID ( & ( ID [ ID ] . ID ) , & ( ID [ ID ] . ID ) ) ', ' expected  ;  before  }  token'], 4426: ['\t                      ID = ID + CONST', ' expected  ;  before  }  token'], 4427: ['\tint ID = CONST                                     ', ' expected  ,  or  ;  before  scanf '], 4428: ['     int ID = CONST ;', ' redefinition of  ID '], 4429: ['     printf ( STRING ID ) ;', ' expected  )  before  ID '], 4430: ['  printf ( STRING , ID ( CONST ) ) ,', ' expected expression before  return '], 4431: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 4432: ['printf ( STRING ID STRING ) ;\t', ' expected  )  before  ID '], 4433: ['\t        { printf ( STRING , ) ; return CONST ; }', ' expected expression before  )  token'], 4434: ['        printf ( STRING , ID [ ID * ID / ID ] , ID [ ID - ID / ID ] , ID [ ID - ID ] ) ;', ' invalid operands to binary / '], 4435: ['     ID = ID + ID [ ID ] ; ', '  ID  undeclared '], 4436: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 4437: ['    else', '  else  without a previous  if '], 4438: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 4439: ['     float ID = ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) ^ CONST / CONST ;', ' invalid operands to binary ^ '], 4440: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4441: ['}', ' expected declaration or statement at end of input'], 4442: ['char ID ( ID [ ] ) {', " unknown type name  ID ; did you mean 'char'?"], 4443: ['\tfor ( ID = ID / CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 4444: ['\tchar ID [ CONST ] = { CHARCHARHARRARCHARAR;', ' expected identifier before  \\x73646179 '], 4445: ['    for ( int ID = CONST ; ID < CONST ID ; ID ++ ) {', ' invalid suffix "n" on integer constant'], 4446: ['    int ID = ( int ) ID', ' expected  ,  or  ;  before  printf '], 4447: ['    for ( ID = CONST ; ID <= ( ID ( char ID [ ] ) ) ; ID ++ ) {', ' expected expression before  CHAR '], 4448: ['    printf ( STRING )', ' expected  ;  before  return '], 4449: ['    char ID = ID [ CONST ] ;', '  ID  undeclared '], 4450: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 4451: ['        ID [ ID ] = CHARST + ID % CONST - CHARST - CHAR+ CONST', ' expected  ;  before  }  token'], 4452: ['    for ( ID = CONST , ID < CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 4453: ['             ID = ID + ID - ID', ' expected  ;  before  for '], 4454: ['printf ( STRING , ID STRING , ID STRING , ID STRING , ID STRING , ID ) ;', ' expected  )  before string constant'], 4455: ['    if', ' expected  (  before  {  token'], 4456: [' scanf ( STRING , & ID , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 4457: ['printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 4458: ['\t    printf ( STRING , ID , ID , ID , ID , int abs ( ID ) ) ;', ' expected expression before  int '], 4459: ['     { free ( ID [ ID ] ) }', ' expected  ;  before  }  token'], 4460: ['}', ' expected declaration or statement at end of input'], 4461: ['    ID = ( ID % CONST == CONST && ID % CONST != CONST ) + ( ID % CONST == CONST && ID % CONST != CONST ) + ( ID % CONST == CONST && ID % CONST != CONST ) + ( ID % CONST == CONST && ID % CONST != CONST ) + ( ID % CONST == CONST && ID % CONST != CONST )', ' expected  ;  before  printf '], 4462: ['* /', ' expected identifier or  (  before  ID  token'], 4463: ['void ID ( int ID [ ] [ ] ) { }', ' array type has incomplete element type  int[] '], 4464: ['    free ( ID )', ' expected  ;  before  return '], 4465: ['      return ID ( ID + CONST , ID )', ' expected  ;  before  }  token'], 4466: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 4467: ['           { ID [ ID ] [ ID ] = ID [ ID ] [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 4468: ['\tint ID [ ID + ID ] ;', ' redeclaration of  ID  with no linkage'], 4469: ['             if ( ID = CONST || ID = ID - CONST || ID = CONST || ID = ID - CONST ) {', ' lvalue required as left operand of assignment'], 4470: ['\t        printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 4471: ['        scanf ( STRING , & ( ID [ ID ] . ID . ID ) ) ;', '  ID  {aka  struct birth_data } has no member named  ID '], 4472: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 4473: ['if ID < CONST printf ( STRING ) ;', ' expected  (  before  ID '], 4474: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 4475: ['    ID ( ID [ ] , CONST ) ;', ' expected expression before  ]  token'], 4476: ['   printf ( STRING )', ' expected  ;  before  }  token'], 4477: ['    ID [ ID ] = ID', ' expected  ;  before  scanf '], 4478: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 4479: ['    { ID = ID + CONST }', ' expected  ;  before  }  token'], 4480: ['    scanf ( STRING , & ID ) ; printf ( STRING , ID )', ' expected  ;  before  scanf '], 4481: ['    ID = ID ( ID ) ;', ' too few arguments to function  ID '], 4482: ['    if ( ID + ID = CONST )', ' lvalue required as left operand of assignment'], 4483: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before numeric constant'], 4484: ['            for ( int ID = ID + CONST ; ID < CONST ) {', ' expected  ;  before  )  token'], 4485: ['\t        for ( ID = CONST ; ID = ID - CONST , ID ++ )', ' expected  ;  before  )  token'], 4486: ['\t        printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 4487: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 4488: ['    if ( ID >= ( ID / CONST ) ) { break ; }', ' break statement not within loop or switch'], 4489: ['\t        ID = ID + CONST + ( ID % CONST )', ' expected  ;  before  }  token'], 4490: ['    ID = ID ( CONST , CONST ) ;', '  ID  undeclared '], 4491: ['    printf ( STRING CHARST ) ;', ' expected  )  before  ! '], 4492: ['    scanf ( STRING & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 4493: ['    float ID , ;', ' expected identifier or  (  before  ;  token'], 4494: ['    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 4495: ['\tfloat ID = ID ( CONST + ( ID * ID ) / CONST ) ;', ' called object  ID  is not a function or function pointer'], 4496: ['\t    scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 4497: ['          printf ( STRING , CONST + ID , CONST + ID , ) ;  ', ' expected expression before  )  token'], 4498: [' printf ( STRING , ID )', ' expected  ;  before  return '], 4499: ['    ID ( ID , ID + CONST , ID [ ] , ID + CONST ) ;', ' expected expression before  ]  token'], 4500: ['    if ( ID ID = CONST )', ' expected  )  before  ID '], 4501: ['     else if ', ' expected  (  before  printf '], 4502: ['for ( ID = CONST ; ID > CONST ; ID = ID / CONST )', '  ID  undeclared '], 4503: ['\t ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 4504: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 4505: ['printf ( STRING , ID = ID * ID * ID ) ;', '  ID  undeclared '], 4506: ['        ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 4507: ['    while ( ID != ID ) printf ( STRING , ID [ ID ++ ] ) ;', '  ID  undeclared '], 4508: ['    ID = ( int * ) malloc ( ( CONST * ID ) * sizeof ( int ) ) ;', '  ID  undeclared '], 4509: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 4510: ['    ID = ( ID * ID * ( ID - ID ) ) / ( ID * ID - ID * ID )', ' expected  ;  before  ID '], 4511: ['      printf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 4512: ['\t   if ( ID == ID [ CONST ] )', '  ID  undeclared '], 4513: ['            printf ( STRING . ID [ ID ] ) ;', ' request for member  ID  in something not a structure or union'], 4514: ['    ID . ID = ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 4515: ['    else ( ID * ID != ID * ID ) { ', ' expected  ;  before  {  token'], 4516: ['    ID = [ ( ID * CONST ) + ( ID ) ] ;', ' expected expression before  [  token'], 4517: ['        printf ( STRING , ID , ID . ID ) ;', ' request for member  ID  in something not a structure or union'], 4518: ['    return ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 4519: ['\tint ID = CONST ;', ' redeclaration of  ID  with no linkage'], 4520: ['    {  printf ( STRING , ID + ID )', ' expected  ;  before  printf '], 4521: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 4522: ['         scanf ( STRING , ID , ID )', ' expected  ;  before  ID '], 4523: ['        int ID = ID ( ID ) ;', ' too few arguments to function  ID '], 4524: ['    else { printf ( STRING ) } ;', ' expected  ;  before  }  token'], 4525: ['int ID ( int ID , int ID , int ID [ ] , int ID , ) {', ' expected declaration specifiers or  ...  before  )  token'], 4526: ['    ID ( ID , ID ) ;', '  ID  undeclared '], 4527: [' for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 4528: ['           ID [ ID ] = ID', ' expected  ;  before  ID '], 4529: ['         printf ( STRING )', ' expected  ;  before  }  token'], 4530: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 4531: ['    int ID = ID - CONST ;', ' redeclaration of  ID  with no linkage'], 4532: ['    for ( int ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 4533: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 4534: ['}', ' expected declaration or statement at end of input'], 4535: ['{ if ( ID == ID ) {', '  ID  undeclared '], 4536: ['\tdouble ID = ID * ID * ID * ID * CONST ) ; ', ' expected  ,  or  ;  before  )  token'], 4537: ['     printf ( STRING ID ) ;', ' expected  )  before  ID '], 4538: ['            ID ( ID , ID , ID + CONST , ID ) ;', ' too few arguments to function  ID '], 4539: ['int ID ( ID [ ] , int ID ) {', ' unknown type name  ID '], 4540: ['\tfor ( ID = CONST ; ID < ID ; ID ++ CONST ) {', ' expected  )  before numeric constant'], 4541: ['\t    putchar ( ) ;', ' too few arguments to function  putchar '], 4542: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 4543: ['\twhile ( ID != ID && ID <= CONST )', '  ID  undeclared '], 4544: ['          ID = ( CONST / CONST ) * ID * ( ID * ID - ID * ID )', ' expected  ;  before  printf '], 4545: ['                printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 4546: ['    ID [ ID ] = ID ;', '  ID  undeclared '], 4547: ['    if ( ID . ID < ID . ID || ID . ID < ID . ID ) {', '  struct indices  has no member named  ID ; did you mean  ID ?'], 4548: ['\tfor ( ; ID <= ( - CONST ) ) {', ' expected  ;  before  )  token'], 4549: ['    ID ( ID , ID - CONST ) ;', '  ID  undeclared '], 4550: ['\twhile ( ( ID != ID ) && ID != CHART ) )', ' expected statement before  )  token'], 4551: ['    int ID = ( ID % CONST + ( ID / CONST ) % CONST + ( ID / CONST ) % CONST + ID + ( ID ) % CONST + ( ID / CONST ) % CONST + ( ID / CONST ) % CONST + ( ID / CONST ) % CONST + ( ID / CONST ) % CONST ) % CONST ) ;', ' expected  ,  or  ;  before  )  token'], 4552: ['        ID = ID + CONST', ' expected  ;  before  ID '], 4553: ['\tif ( ID / ID = ID / ID )', ' lvalue required as left operand of assignment'], 4554: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 4555: ['int ID ( int ID [ CONST ] [ CONST ] , ID ) {', ' unknown type name  ID '], 4556: ['ID = ID', ' expected  ;  before  ID '], 4557: ['        printf ( STRING , ( ID -> ID ) ( ID -> ID ) ) ;', ' called object is not a function or function pointer'], 4558: ['        ID [ ID ] = CONST ;', '  ID  undeclared '], 4559: ['            printf ( "\\ {\\ {\\ }\\ } "  )', ' expected  ;  before  }  token'], 4560: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 4561: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 4562: ['\tfor ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 4563: ['    int ID [ ID ] [ ID ] , ;', ' expected identifier or  (  before  ;  token'], 4564: ['             ID [ ID ] = ID [ ID ] - CONST', ' expected  ;  before  }  token'], 4565: ['\tID ( ID , CHARST , CHARST , CHARST )', ' expected  ;  before  return '], 4566: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 4567: ['                printf ( STRING )', ' expected  ;  before  }  token'], 4568: ['printf ( STRING )', ' expected  ;  before  return '], 4569: ['\t    ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 4570: ['                ID = CONST', ' expected  ;  before  printf '], 4571: ['    } else {', '  else  without a previous  if '], 4572: ['     if ( ( ID * ID + ID * ID ) > ID * ID ) || ( ( ID * ID + ID * ID ) > ID * ID ) || ( ( ID * ID + ID * ID ) > ID * ID ) {             ', ' expected expression before  ||  token'], 4573: ['\t        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 4574: ['   printf ( STRING , ( ( * ID [ CONST ] ) . ID ) ) ;', ' request for member  ID  in something not a structure or union'], 4575: ['    int ID = ( ID + ID ) % CONST', ' expected  ,  or  ;  before  return '], 4576: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 4577: ['\tprintf ( STRING , CONST % pow ( CONST , CONST ) ) ;', ' invalid operands to binary % '], 4578: ['\t     ID ( ID [ CONST ] ) ;', ' too few arguments to function  ID '], 4579: ['\twhile ( ID )', '  ID  undeclared '], 4580: ['\twhile ( ( ID < CONST ) && ID )', '  ID  undeclared '], 4581: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 4582: ['    ID ( ID [ CONST ] [ CONST ] ) ;', ' too few arguments to function  ID '], 4583: ['            break ;', ' break statement not within loop or switch'], 4584: ['}', ' expected declaration or statement at end of input'], 4585: ['                ID = ID ( ID , ID , ID , ID )', ' expected  ;  before  if '], 4586: ['\t for ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 4587: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 4588: ['}', ' expected declaration or statement at end of input'], 4589: ['        ID = ID ( ID [ ID ] [ CONST ] , ID [ ID ] [ CONST ] )', ' expected  ;  before  {  token'], 4590: ['}', ' expected declaration or statement at end of input'], 4591: ['    ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 4592: ['printf ( STRING , ID )', ' expected  ;  before  return '], 4593: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4594: ['\tchar ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 4595: ['\tchar ID = getchar ( ) ;', ' redeclaration of  ID  with no linkage'], 4596: ['\t      if ( ID ( ID [ ID ] , ID [ ID ] ) = CONST ) {', ' lvalue required as left operand of assignment'], 4597: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 4598: ['     while ( ID [ ID ] = > ID [ ID + CONST ] , ID < ID - CONST ) {', ' expected expression before  >  token'], 4599: ['if ( ID ( ID - ( ( ID % CONST ) * CONST ) ) == CONST )', ' expected expression before  else '], 4600: ['    if ( ID * ID = ID * ID + ID * ID ) {', ' lvalue required as left operand of assignment'], 4601: ['\t    ID = ID - pow ( CONST , ( ID - ID ) ) * ;', ' expected expression before  ;  token'], 4602: ['\tprintf ( STRING , ( ID , ) ) ;', ' expected expression before  )  token'], 4603: ['\t        scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 4604: ['                    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 4605: ['\tif ( ID == CONST && ID != CHARNST ) {', ' empty character constant'], 4606: ['    printf ( STRING , ID , ID , ID , ID , , ID ) ;', ' expected expression before  ,  token'], 4607: ['\tfor ( ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 4608: ['float = CONST ;', ' expected identifier or  (  before  =  token'], 4609: ['\t    printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 4610: ['}', ' expected declaration or statement at end of input'], 4611: ['         if ( ID [ ID ] == CHART )', '  ID  undeclared '], 4612: ['        ID [ ID ] = ID [ ID ] - CHARST + CONST ;', '  ID  undeclared '], 4613: ['         if ( ID [ ID + ID ] < ID ( ID + ID + CONST ) ) {', ' called object  ID  is not a function or function pointer'], 4614: ['    ( ID <= CHARST || ID >= CHARST ) printf ( STRING ) ;', ' expected  ;  before  printf '], 4615: ['# include', ' #include expects "FILENAME" or <FILENAME>'], 4616: ['        else if ( ID [ CONST * ID + CONST ] > != CONST || ID [ CONST * ID + CONST ] ! <= CONST || ID [ CONST * ID + CONST ] ! >= CONST || ID [ CONST * ID + CONST ] ! <= CONST || ID [ CONST * ID + CONST ] != ID [ CONST * ID + CONST ] + CONST )', ' expected expression before  !=  token'], 4617: ['printf ( STRING , sqrt ( CONST * ID / CONST ) ) ;', '  ID  undeclared '], 4618: ['         ID ++', ' expected  ;  before  }  token'], 4619: ['\tprintf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 4620: ['    for ( ID = CONST ; ID [ ID ] != CHART , ID ++ )', ' expected  ;  before  )  token'], 4621: ['        ID ++', ' expected  ;  before  }  token'], 4622: ['          printf ( STRING , ID -> ID + ID ) ;', ' invalid type argument of  ->  '], 4623: ['\tfor ( ( CHARST < ID [ ID ] < CHARST ) && ( CHARST < ID [ ID ] < CHARST ) ; ) {', ' expected expression before  )  token'], 4624: ['    printf ( STRING , STRING , STRING , STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 4625: ['             printf ( STRING )', ' expected  ;  before  }  token'], 4626: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 4627: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 4628: ['for ( ID = CONST ; ID < CONST ID ; ID ++ )', ' invalid suffix "n" on integer constant'], 4629: ['\tint ID , ID , ID , ID , ID = ID ;', '  ID  undeclared '], 4630: ['    else if {', ' expected  (  before  {  token'], 4631: ['    printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 4632: ['            ID ( ID - CONST , ID , ID , ID + CONST ) ;', '  ID  undeclared '], 4633: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 4634: ['if ( ID , ID ) , {', ' expected expression before  ,  token'], 4635: ['    ID ( ID + CONST , CONST )', ' expected  ;  before  return '], 4636: ['    printf ( STRING , ID , ID , ID , ID ID ) ;                 ', ' expected  )  before  ID '], 4637: ['\tID = ID / CONST', ' expected  ;  before  return '], 4638: ['\t    } if ID [ ID ] == CHART ; break ;', ' expected  (  before  ID '], 4639: ['                ID = ID', ' expected  ;  before  continue '], 4640: ['\t    if ( ID [ ID ] == ID ) {', '  ID  undeclared '], 4641: ['\t        if ( ID [ ID ] == CHARST || ID [ ID ] = CHART )', ' lvalue required as left operand of assignment'], 4642: ['    ID = * sqrt ( CONST ) ;', ' invalid type argument of unary  *  '], 4643: ['printf ( STRING , CONST ID - ID ) ;', ' invalid suffix "n" on integer constant'], 4644: ['                        printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 4645: ['        putchar ( ID ) ;', '  ID  undeclared '], 4646: ['        continue ;', ' continue statement not within a loop'], 4647: ['\t   if ( ID [ ID ] == ID && ID = CONST )', ' lvalue required as left operand of assignment'], 4648: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 4649: ['    if ( ID < ID )', '  ID  undeclared '], 4650: ['   printf ( STRING , ID ) ;', '  ID  undeclared '], 4651: ['\t        }', ' expected declaration or statement at end of input'], 4652: ['    while ( ! ( ID / ( CONST * ID ) ) == CONST ) )', ' expected statement before  )  token'], 4653: ['    int ID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 4654: ['\tchar ID [ CONST ] = { CHARST , CHARST }', ' expected  ,  or  ;  before  return '], 4655: ['    for ( ID = ID ; ID <= CONST ID ; ID ++ )', ' invalid suffix "N" on integer constant'], 4656: ['    CHARST = CHARST + CHARST - CHARST ;', ' lvalue required as left operand of assignment'], 4657: ['}', ' expected identifier or  (  before  }  token'], 4658: ['\tfor ( ID = ID ; ID > CONST ) {', ' expected  ;  before  )  token'], 4659: ['\t    printf ( STRING ID ( ID ) ) ;', ' expected  )  before  ID '], 4660: ['    ID ( ID , ID ) ;', ' too few arguments to function  ID '], 4661: ['                                   { else ', '  else  without a previous  if '], 4662: ['\tint ID , ID , ;', ' expected identifier or  (  before  ;  token'], 4663: ['       if ( ID [ ID ] = ID ) { printf ( STRING , ID ) ; }', '  ID  undeclared '], 4664: ['        printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 4665: ['int ID = ID ( ID , CONST , ID , CONST ) ;', '  ID  undeclared '], 4666: ['        for ( ID = CONST ; ID < CONST , ID ++ ) {', ' expected  ;  before  )  token'], 4667: ['    ID = ( int * ) ID ( sizeof ( int ) * ( ID . ID ) )', ' expected  ;  before  for '], 4668: ['    ID = ID ( & ID )', ' expected  ;  before  return '], 4669: ['    ID = ID ( ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 4670: ['\tint ID = ID', ' expected  ,  or  ;  before  printf '], 4671: ['        if ( ( ID ( ID ) ) && ( ID ( ID + CONST ) ) == CONST ) {                                                              )', ' expected statement before  )  token'], 4672: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 4673: ['  scanf ( STRING )', ' expected  ;  before  ID '], 4674: ['        {   int ID = ID ( ID [ ID ] [ ID ] , ID [ ID ] [ ID ] , ID [ ] [ ID ] ) ;                    ', ' expected expression before  ]  token'], 4675: ['        if ( ID [ ID ] != )', ' expected expression before  )  token'], 4676: ['        ID [ ID ] = ID [ ID - CONST ]', ' expected  ;  before  }  token'], 4677: ['    if ( ID % CONST = CONST )', ' lvalue required as left operand of assignment'], 4678: ['\tprintf ( STRING , ID [ ID ] ) ; }', '  ID  undeclared '], 4679: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 4680: ['        for ( ID = ID , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 4681: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 4682: ['\telse if ( ID ( ID ) != = CONST )', ' expected expression before  =  token'], 4683: ['\tprintf ( STRING , CONST )', ' expected  ;  before  return '], 4684: ['    printf ( STRING )              ID , ID , ID , ID , ID ;                                       ', ' expected  ;  before  ID '], 4685: ['    printf ( STRING , ID ( ID ) )', ' expected  ;  before  return '], 4686: ['        ID = CHARST ;', ' assignment to expression with array type'], 4687: ['   printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 4688: ['    ID ++', ' expected  ;  before  }  token'], 4689: [' printf ( STRING , ID )', ' expected  ;  before  return '], 4690: ['int ID ( int ID [ ] , int ID , int ID = CONST , int ID ) {', " expected  ; , ',' or  )  before  =  token"], 4691: ['    ID = ID ( ID )', ' expected  ;  before  for '], 4692: ['if ( ID == ID || ID + ID [ ID == ID ) {', ' expected  ]  before  )  token'], 4693: ['            ID', ' expected  ;  before  }  token'], 4694: ['        ID [ ID ] = CHARST', ' expected  ;  before  ID '], 4695: ['        for ( ID = ID ; ID < ID + ID ; ID ++ )', '  ID  undeclared '], 4696: ['    for ( ID = CONST ; ID = < ID + CONST - ID ; ID ++ )', ' expected expression before  <  token'], 4697: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4698: ['\tfor ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 4699: ['\t    printf ( STRING , ) ; }', ' expected expression before  )  token'], 4700: ['     ID = ID + ID ( ID - CHARST + CONST , ID - ID - CONST ) ;   ', '  ID  undeclared '], 4701: ['}', ' expected declaration or statement at end of input'], 4702: ['    ID ( ID , CONST , ID - CONST )', ' expected  ;  before  for '], 4703: ['\tint ID , ID = CONST , ID , ID , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 4704: ['    float ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 4705: ['                    ID = ID + CONST', ' expected  ;  before  }  token'], 4706: ['    printf ( STRING STRING ID STRING ) ;', ' expected  )  before  ID '], 4707: ['printf ( STRING ) ,', ' expected expression before  return '], 4708: ['\t    ID [ ID ] = ID [ ID / CONST ] ID [ ID / CONST ] ;', ' expected  ;  before  ID '], 4709: ['    else else printf ( STRING ) ;', ' expected expression before  else '], 4710: ['    if ( ID > CONST )', '  ID  undeclared '], 4711: ['        ID ++', ' expected  ;  before  }  token'], 4712: ['    for ( ID = CONST ; ID < CONST * ID ; ++ ) {', ' expected expression before  )  token'], 4713: ['    printf ( STRING , ID - ( ID - CONST ) ) ;', '  ID  undeclared '], 4714: ['        printf ( STRING , ID [ ID ] . ID / ID ) ;', '  ID  undeclared '], 4715: ['scanf ( STRING , & ID , & ID , & ID , % ID , & ID ) ;', ' expected expression before  %  token'], 4716: ['    int ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 4717: ['\tID = ID - CONST', ' expected  ;  before  return '], 4718: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 4719: ['        else if ID = CONST ;', ' expected  (  before  ID '], 4720: ['    for ( ID = CONST , ID = CONST ; * ID [ ID ] != ID ; ID ++ , ID ++ ) {', ' invalid type argument of unary  *  '], 4721: ['    int ID = ID ( ID , ID , CONST , CONST ) ;', ' too many arguments to function  ID '], 4722: ['    printf ( STRING , ID ( ID , ID , ID [ ] [ ID ] ) ) ;', ' expected expression before  ]  token'], 4723: ['    ID ( struct ID * ID ) ;', ' expected expression before  struct '], 4724: ['      for ( ID = ; ID < ID ; ++ ID )', ' expected expression before  ;  token'], 4725: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 4726: ['int ID = ID ( ID , ID ) ) ;', ' expected  ,  or  ;  before  )  token'], 4727: ['      printf ( STRING ID ) ;', ' expected  )  before  ID '], 4728: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 4729: ['    \tfor ( ID = CONST ; ID <= ID - ID ; ID ++ ) {                      ', '  ID  undeclared '], 4730: ['}', ' expected  ; , identifier or  (  before  ID '], 4731: ['\tint ID , ID , ID , ;                                  ', ' expected identifier or  (  before  ;  token'], 4732: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 4733: ["\tint ID , ID ; '", " missing terminating ' character"], 4734: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 4735: ['            ID [ ID ] = ID + CONST', ' expected  ;  before  ID '], 4736: ['\tID = float ( ID * ID ) / CONST ;', ' expected expression before  float '], 4737: ['\t    for ( ID = ID ; ID >= CONST ; -- ID ) {', '  ID  undeclared '], 4738: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 4739: ['    ID = ID . ID', ' expected  ;  before  while '], 4740: ['        printf ( STRING ( ID % CONST ) ) ;', ' called object is not a function or function pointer'], 4741: ['        ID = ID ;', '  ID  undeclared '], 4742: ['    ID ++ }', ' expected  ;  before  }  token'], 4743: ['\tprintf ( STRING )', ' expected  ;  before  return '], 4744: ['        printf ( STRING )', ' expected  ;  before  printf '], 4745: ['    ID = CONST ;', '  ID  undeclared '], 4746: ['float ID = ID = CONST * ID * ID ;', '  ID  undeclared '], 4747: ['printf ( STRING )', ' expected  ;  before  return '], 4748: ['\t            printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 4749: ['    printf ( STRING )', ' expected  ;  before  return '], 4750: ['                    ID = ID ( ID , ID , ID , ID )', ' expected  ;  before  if '], 4751: ['        else if ( ID >= CONST && ID = > ID )', ' expected expression before  >  token'], 4752: ['\tID = ID', ' expected  ;  before  while '], 4753: ['    ID += ID [ ID ] [ ID ] * ID ( - CONST , ID + ID ) * ID ( ID , ID - CONST ) ;', ' subscripted value is neither array nor pointer nor vector'], 4754: [' double ID = CONST * ID', ' expected  ,  or  ;  before  printf '], 4755: ['\tfor ( ID = CONST ; ID , < ID ; ID ++ )', ' expected expression before  <  token'], 4756: [' printf ( STRING , ID )', ' expected  ;  before  ID '], 4757: ['        scanf ( STRING , & ID , & ID )', ' expected  ;  before  ID '], 4758: ['    for ( ID = CONST ; ID < ( ID > ID ) ; ID ++ )', '  ID  undeclared '], 4759: ['printf ( STRING . ) ;', ' expected identifier before  )  token'], 4760: ['\tfloat ID = ID ( CONST + ( ( ID * ID ) / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 4761: ['\t      for ( int ID = ID ; ID = CONST ; ID -- ) { printf ( STRING , ) }', ' expected expression before  )  token'], 4762: ['    ID = ( ID ) ID ( ID * sizeof ( ID ) ) ;', ' conversion to non-scalar type requested'], 4763: ['\tif ( ID * ID ) == ( ID * ID )', ' expected expression before  ==  token'], 4764: ['\t            ID [ ID ] = CONST + ID ( ID ) ;', ' called object  ID  is not a function or function pointer'], 4765: ['        ID [ ID - CONST ] = ID [ ] ;', ' expected expression before  ]  token'], 4766: ['        return CONST', ' expected  ;  before  }  token'], 4767: ['             printf ( STRING )', ' expected  ;  before  break '], 4768: ['  while ( ID !=\\ ID )', ' stray  \\  in program'], 4769: ['           if ( ID [ ID + ID ] [ ID + ID == ID [ ID + ID ] [ ID + ID ] )                          ID = CONST ;', ' expected  ]  before  )  token'], 4770: ['scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 4771: ['            if ( ID == ID || ID + CONST = ID )', ' lvalue required as left operand of assignment'], 4772: ['    ID ( ID , ID )', ' expected  ;  before  return '], 4773: ['    for ( ID = CONST ; ID <= ; ID ++ )', ' expected expression before  ;  token'], 4774: ['    struct ID * ID = ID [ ID ] -> ID ;', ' invalid type argument of  ->  '], 4775: ['    ID = ID', ' expected  ;  before  ID '], 4776: ['    while ( ID [ ID ] != CHART && ID [ ID ] != ID ) {', '  ID  undeclared '], 4777: ['    else return CONST ;', '  else  without a previous  if '], 4778: ['       printf ( STRING , ID [ CONST ] , ID [ CONST ] ) ;', '  ID  undeclared '], 4779: [' int ID = int ( ID ) ;', ' expected expression before  int '], 4780: ['}', ' expected declaration or statement at end of input'], 4781: ['    for ( int ID = CONST ; ID < ID ; ID ++ ) { ID ( ID , * ( ID + ID ) ) }', ' expected  ;  before  }  token'], 4782: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 4783: ['     if ( )', ' expected expression before  )  token'], 4784: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 4785: ['    float ID = ID ( ID * ID + ID * ID ) :', ' expected  ,  or  ;  before  :  token'], 4786: ['printf ( STRING , - CONST )', ' expected  ;  before  else '], 4787: [' for ( ID == CONST ; ID <= ID / CONST ; ID ++ )', '  ID  undeclared '], 4788: ['        if ( ID == CONST ID ) return ID ;', ' invalid suffix "n" on integer constant'], 4789: ['}', ' expected declaration or statement at end of input'], 4790: ['    float ID = CONST * CONST ^ CONST ; ', ' invalid operands to binary ^ '], 4791: ['\tscanf ( STRING , & CHARST ) ;', ' lvalue required as unary  &  operand'], 4792: ['         printf ( STRING )', ' expected  ;  before  }  token'], 4793: ['    else ( ID % CONST == CONST || ID % CONST == CONST || ID % CONST == CONST || ID % CONST == CONST ) {', ' expected  ;  before  {  token'], 4794: ['        else if ( ID == CONST % % ( ID / ID ) == CONST )', ' expected expression before  %  token'], 4795: ['    printf ( STRING )', ' expected  ;  before  return '], 4796: ['      return ID ( ID + CONST ) ;', ' too few arguments to function  ID '], 4797: ['        printf ( STRING ) ', ' expected  ;  before  }  token'], 4798: ['for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 4799: ['    int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 4800: ['    } printf ( STRING , ID - ID )', ' expected  ;  before  return '], 4801: ['    return - CONST', ' expected  ;  before  }  token'], 4802: ['        ID [ ID ] = ID [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 4803: ['       {   ID [ ID ] = ID ; ', '  ID  undeclared '], 4804: ['free ( ID [ ID ] )', ' expected  ;  before  return '], 4805: ['    if ( )', ' expected expression before  )  token'], 4806: ['\tchar ID = CHARST', ' expected  ,  or  ;  before  scanf '], 4807: ['    while ( ID <= ID ) {', '  ID  undeclared '], 4808: ['    int ID [ ] ;', ' flexible array member in a struct with no named members'], 4809: ['    if ( ID == CONST ) { printf ( STRING ) ; break ; }                   ', ' break statement not within loop or switch'], 4810: ['        ID = ID + ( ID [ ID - ID ] * ID ( ID ) ) ;', '  ID  undeclared '], 4811: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 4812: ['     ID = ID ( ID ) ;', ' void value not ignored as it ought to be'], 4813: ['    } else printf ( STRING , ID )', ' expected  ;  before  }  token'], 4814: ['        ID ( ) ;', ' too few arguments to function  ID '], 4815: ['    printf ( STRING , ID , , ID , ID , CONST * ID * ID ) ;', ' expected expression before  ,  token'], 4816: ['        ID = ID + ID [ ID ] [ ID ] * ID [ ID ] [ ID ]', ' expected  ;  before  }  token'], 4817: ['   ID ID [ ] ;', ' array size missing in  ID '], 4818: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 4819: ['        for ( ID = CONST ; ID <= ( ID - ID ) ; ID ++ )', '  ID  undeclared '], 4820: ['}', ' expected declaration or statement at end of input'], 4821: [' else ( ID > ID )', ' expected  ;  before  printf '], 4822: ['    else return CONST ;', '  else  without a previous  if '], 4823: ['    printf ( STRING , ID , ID , ID , ID , ) ;', ' expected expression before  )  token'], 4824: ['         ID = ID / CONST }', ' expected  ;  before  }  token'], 4825: ['    else ( pow ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) , CONST / CONST ) == ID )', ' expected  ;  before  {  token'], 4826: ['    for ( ID = CONST ; ID < ID + CONST , ++ ID )', ' expected  ;  before  )  token'], 4827: ['    } ', ' expected expression before  ID  token'], 4828: ['\tfor ( ID = CONST ; ID < CONST ; ID += ) {', ' expected expression before  )  token'], 4829: ['    int ID [ ID ] = CONST ;', ' variable-sized object may not be initialized'], 4830: ['    char ID [ CONST ] ;', '  ID  redeclared as different kind of symbol'], 4831: ['                   ID = ID [ ID ] ;', " incompatible types when assigning to type  struct birth_data *  from type 'struct birth_data'"], 4832: ['\t    if ( ( ID [ ID ] >= CONST && ID [ ID ] <= CONST ) && ( ID [ ID + CONST ] >= CONST && ID [ ID + CONST ] <= CONST ) ( ID [ ID + CONST ] >= CONST && ID [ ID + CONST ] <= CONST ) )', ' called object is not a function or function pointer'], 4833: ['    char ID , ID [ CONST ] ;', '  ID  redeclared as different kind of symbol'], 4834: ['    ID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 4835: ['            else if ( ( ID [ ID ] . ID == ID [ ID ] . ID ) && ( ID [ ID ] . ID > ID [ ID ] . ID ) ) {', '  struct rank  has no member named  ID ; did you mean  ID ?'], 4836: ['{   int ID , ID , ID , ID , ID , ID [ CONST ] [ CONST ] , ID = CONST , ID , ID ;    ', ' redeclaration of  ID  with no linkage'], 4837: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 4838: ['    ID ( & ID [ ID ] [ ID ] , int ID ) ;', ' expected expression before  int '], 4839: ['printf ( STRING , ID [ ID ] . ID , ID [ ID ] . ID , ID [ ID ] . ID ) ;', '  ID  undeclared '], 4840: ['\t        scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 4841: ['    scanf ( STRING , ID )', ' expected  ;  before  ID '], 4842: ['    if ( strcmp ( ID , ID ) != CONST ) ID ( ID , ID ) ;', ' too few arguments to function  ID '], 4843: ['        scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 4844: ['    int ID [ ID ] [ ID ] = { } ;', ' variable-sized object may not be initialized'], 4845: ['            printf ( STRING , ID [ CONST ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 4846: ['        if ( ID [ ID ] == CHART || ID [ ID ] == CHARST || ID == CHART || ID == CHARNST )', ' empty character constant'], 4847: ['  printf ( STRING , ID )', ' expected  ;  before  return '], 4848: ['        printf ( STRING , ID -> ID )', ' expected  ;  before  ID '], 4849: ['       ID ;', '  ID  undeclared '], 4850: ['\tprintf ( STRING ( ID , ID ) , ( ID , CONST ) , ( CONST , ID ) ) ;', ' called object is not a function or function pointer'], 4851: ['\tint ID , ID , ;', ' expected identifier or  (  before  ;  token'], 4852: [' printf ( STRING , ID , ID [ ] ) ;', ' expected expression before  ]  token'], 4853: ['int ID = ID ( ID )', ' expected  ,  or  ;  before  if '], 4854: ['    if ( ID == CHARST ) printf ( STRING ) ;', '  ID  undeclared '], 4855: ['        ID ( ID , ID , ID , ID - CONST )', ' expected  ;  before  ID '], 4856: ['    }', ' expected declaration or statement at end of input'], 4857: ['     ID = ( float ) ID / CONST', ' expected  ;  before  return '], 4858: ['if ( ( ID * ID ) < CONST ) )', ' expected statement before  )  token'], 4859: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 4860: ['     ID getchar ( ) ;', ' expected  ;  before  getchar '], 4861: ['    switch ( char ID ) {', ' expected expression before  CHAR '], 4862: ['printf ( STRING )', ' expected  ;  before  return '], 4863: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 4864: ['    ID ( STRING , ID ) ;                  ', '  ID  undeclared '], 4865: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 4866: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 4867: ['    scanf ( STRING , & ID , & ID , & ) ;', ' expected expression before  )  token'], 4868: ['int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 4869: ['\tprintf ( STRING , ID ( CONST , ID , ID ) == CONST ? STRING : STRING ) ;', ' too many arguments to function  ID '], 4870: ['    if ( ID == = ID )', ' expected expression before  =  token'], 4871: ['    printf ( STRING , ID ( CONST ) )', ' expected  ;  before  return '], 4872: ['if ( ID ( ID ) == CONST && ID ( ID ) == CONST && ID + ID < CONST ID )', ' invalid suffix "n" on integer constant'], 4873: ['\t    if ( ID ( ID , ID ) == CONST )', ' too few arguments to function  ID '], 4874: ['\t    ID = CONST * CONST ^ CONST ;', ' invalid operands to binary ^ '], 4875: ['} if ( )  {', ' expected expression before  )  token'], 4876: ['}', ' expected declaration or statement at end of input'], 4877: ['    ID = ( ID * ) malloc ( ID * sizeof ( ID ) ) ;', ' invalid application of  sizeof  to incomplete type  ID  {aka  struct student }'], 4878: ['\tprintf ( STRING , ID ( CONST * ID ) , CONST * ID * ID * ID - ( CONST * ID ) )', ' expected  ;  before  return '], 4879: ['    scanf ( STRING , & ID , & ID , & ID )', ' expected  ;  before  ID '], 4880: ['        ID ( ID , ID )', ' expected  ;  before  ID '], 4881: ['int ID , ID , ID = CONST ;', '  ID  redeclared as different kind of symbol'], 4882: ['\t       if ( ID [ ID < ID [ ID ] )', ' expected  ]  before  )  token'], 4883: ['    else', '  else  without a previous  if '], 4884: ['    ID ( ID , ID , ID )', ' expected  ;  before  return '], 4885: ['        for ( ID = CONST ; ID <= CONST * ID + CONST ) {', ' expected  ;  before  )  token'], 4886: ['printf ( STRING , CONST ++ * CONST ) ;', ' lvalue required as increment operand'], 4887: ['        for ( int ID = ID ; ID <= ; ID ++ ) {', ' expected expression before  ;  token'], 4888: ['        ID = ID ( & ID [ ID ] , & ID [ ID + CONST ] )', ' expected  ;  before  }  token'], 4889: ['\tcase CONST : printf ( STRING ) ; break ;', ' break statement not within loop or switch'], 4890: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4891: ['        if ( ID . ID < ID . ID ) .                  ', ' expected expression before  .  token'], 4892: ['    } printf ( STRING , ID )', ' expected  ;  before  return '], 4893: ['\t       printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 4894: ['    if ( ( ID [ ID ] >= CONST ) && ID [ ID ] < ID ) ) {', ' expected statement before  )  token'], 4895: ['}', ' expected declaration or statement at end of input'], 4896: ['    } printf ( STRING )', ' expected  ;  before  ID '], 4897: ['                ID [ ++ ID ] == ID [ ++ ID ]', ' expected  ;  before  ID '], 4898: ['    printf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 4899: ['    ID = ID', ' expected  ;  before  ID '], 4900: ['    int ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 4901: ['\t ID = CONST', ' expected  ;  before  }  token'], 4902: ['\t    printf ( STRING ,\\ ID ) ;', ' stray  \\  in program'], 4903: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 4904: ['}', ' expected identifier or  (  before  }  token'], 4905: ['                ID = ID', ' expected  ;  before  }  token'], 4906: ['    int ID = CONST ;', ' redefinition of  ID '], 4907: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 4908: ['          printf ( STRING , ID -> ID ) ;', '  *b  is a pointer; did you mean to use  -> ?'], 4909: ['    printf ( STRING )', ' expected  ;  before  else '], 4910: ['    if ( ID != = CONST , ID [ ID ] == ID [ ID ] )', ' expected expression before  =  token'], 4911: ['\telse printf ( STRING ) ;', '  else  without a previous  if '], 4912: ['    { printf ( STRING , ID [ ID ] ) }', ' expected  ;  before  }  token'], 4913: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 4914: ['\tID = ID * ( CONST + ( ( ID * ID ) / CONST ) ) ;                         ', '  ID  undeclared '], 4915: ['          if ( ID == ID - CONST )', '  ID  undeclared '], 4916: ['float ID = CONST * CONST * CONST ', ' expected  ,  or  ;  before  printf '], 4917: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 4918: ['\t            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 4919: ['    ID ( CONST , CONST , ID , CONST * ID , CONST )', ' expected  ;  before  return '], 4920: [' int ID ( int ID [ ] [ ] , int ID , int ID )', ' array type has incomplete element type  int[] '], 4921: ['                ID [ ID ] += CONST ;', '  ID  undeclared '], 4922: ['    }', ' expected identifier or  (  before  }  token'], 4923: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 4924: ['    printf ( STRING , ID ) ; .', ' expected expression before  .  token'], 4925: ['     ID = ID / CONST', ' expected  ;  before  }  token'], 4926: ['\t            ID -> ID = ID [ ID ] ;', '  ID  undeclared '], 4927: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4928: ['    int ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 4929: ['\twhile ( char != CHART && ID < CONST ) {', ' expected expression before  CHAR '], 4930: ['# < ID . ID >', ' invalid preprocessing directive #<'], 4931: ['void ID ( int ID [ ] , int ID , ID )', ' unknown type name  ID '], 4932: ['\tprintf ( STRING , ID ( ) ) ;', ' too few arguments to function  ID '], 4933: ['    return ID ;', ' incompatible types when returning type  Point *  {aka  struct point * } but  ID  {aka  struct point } was expected'], 4934: ['    ID = ID ;', '  ID  undeclared '], 4935: ['    ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 4936: ['            ID = ID - ID [ ID ] ;', '  ID  undeclared '], 4937: ['printf ( STRING , ID , ID ) ', ' expected  ;  before  return '], 4938: ['\tID = ID * ( CONST + ( ( ID * ID ) / CONST ID ) ) ;', ' invalid suffix "oo" on integer constant'], 4939: ['      if ( ID -> ID . ID <= ID -> ID . ID && ID -> ID . ID >= ID -> ID . ID && ID -> ID            . ID >= ID -> ID . ID && ID -> ID -> ID <= ID -> ID . ID )', ' invalid type argument of  ->  '], 4940: ['    if ( ID = ID - CONST && ID = ID - CONST )', ' lvalue required as left operand of assignment'], 4941: ['    for ( ID = CONST ; ID < ID ; ID ++ ) { printf ( STRING . ID [ ID ] ) ; }', ' request for member  ID  in something not a structure or union'], 4942: ['    for ( ID = ( ID - CONST ) / CONST ; ID = > CONST ; ID -- ) {', ' expected expression before  >  token'], 4943: ['float ID = ID * ( ID ^ CONST ) ;', ' invalid operands to binary ^ '], 4944: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 4945: ['\telse ( )', ' expected expression before  )  token'], 4946: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 4947: ['        for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 4948: ['     if ( ID [ ID ] == CHART )', '  ID  undeclared '], 4949: ['    printf ( STRING )', ' expected  ;  before  return '], 4950: ['        if ( ID [ ID ] != / CONST )', ' expected expression before  ID  token'], 4951: ['\t   { ID = CONST', ' expected  ;  before  break '], 4952: ['    ID = ID , ID = ID ;', '  ID  undeclared '], 4953: ['     scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 4954: ['        STRING', ' expected  ;  before  }  token'], 4955: ['             ID [ ID ] = ID [ ID ] + ID [ ID - ID ]', ' expected  ;  before  }  token'], 4956: ['    printf ( STRING )', ' expected  ;  before  if '], 4957: ['   if ( ID / ID = ID / ID ) { printf ( STRING ) ; }', ' lvalue required as left operand of assignment'], 4958: ['\t        scanf ( STRING , ( * ( ID + ID ) + ID ) ) ;', '  ID  undeclared '], 4959: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 4960: ['    {   scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 4961: ['}', ' expected declaration or statement at end of input'], 4962: ['\tprintf ( STRING , * ( * ID [ CONST ] ) ) ;', ' invalid type argument of unary  *  '], 4963: ['\t    for ( ID = ID - CONST ; ID >= ID - ID , ID -- )', ' expected  ;  before  )  token'], 4964: ['                        ID = ID + CONST', ' expected  ;  before  }  token'], 4965: ['        ID [ ID ] = ( ID [ ID ] > CONST ) ? ID [ ID ] : - ID [ ID ]                                                             ', ' expected  ;  before  }  token'], 4966: ['        printf ( STRING )', ' expected  ;  before  }  token'], 4967: ['    if ( ID [ ID ] [ ID ] > CONST )', '  ID  undeclared '], 4968: ['\tif ( ID ( ID , ID ) && ( ID ( ID , ID ) == ID ) )', '  ID  undeclared '], 4969: ['        if ( ( ID == ID && ID [ ID ] [ ID ] = CONST ) || ( ID != ID && ID [ ID ] [ ID ] == CONST ) )', ' lvalue required as left operand of assignment'], 4970: ['float ID ; float ID ;                                                             float ID ;                                                           ID = CONST * ID * ID ;                                                          scanf ( STRING , & ID , & ID ) ;                                                        printf ( STRING , ) ;      \treturn CONST ;', ' expected expression before  )  token'], 4971: ['    ID [ CONST ] = CHARST ;', '  ID  undeclared '], 4972: ['\tID [ ID ]', ' expected  ;  before  for '], 4973: ['            { printf ( STRING , ID )', ' expected  ;  before  break '], 4974: ['\t    else if ( ID [ ID ] > ID - ID )', '  ID  undeclared '], 4975: ['         printf ( STRING , ID ) ;', '  ID  undeclared '], 4976: ['if ( ID < ID && ID < ID )', '  ID  undeclared '], 4977: ['        { else continue ; }', '  else  without a previous  if '], 4978: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before numeric constant'], 4979: ['                ID -> ID = ID -> ID + CONST', ' expected  ;  before  }  token'], 4980: ['printf ( " ID ID ID \\ ( ID , ID\\ ) ID \\ ( ID , ID\\ ) ID % CONST " , ID )', ' expected  ;  before  return '], 4981: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 4982: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 4983: ['\tID = ( ID - ID ) / ( ID * ID - ID * ID )                                         ', ' expected  ;  before  ID '], 4984: ['    scanf ( STRING , & ID )', ' expected  ;  before  printf '], 4985: ['\t\tfor ( int ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 4986: ['    int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 4987: ['        ID = CONST', ' expected  ;  before  ID '], 4988: ['\t        ID = ID + CONST', ' expected  ;  before  }  token'], 4989: ['    ID = ( ID * ) malloc ( ID * ID ) ;', ' expected expression before  ID '], 4990: ['    if ( ID == ID )', '  ID  undeclared '], 4991: ['        ID [ ID ] = ID [ ID % CONST ] ;', '  ID  undeclared '], 4992: ['\tprintf ( STRING ( ID - ID ) ) ;', ' called object is not a function or function pointer'], 4993: ['    return ID ( ID + CONST , ID + ID [ ID ] , ID ) || ID ( ID + CONST , ID , ID + ID [ ID ] ) ;', '  ID  undeclared '], 4994: ['\tID = ID * ID * ID', ' expected  ;  before  printf '], 4995: ['    { for ( ID = ID ; ID <= ID ; ID ++ )', '  ID  undeclared '], 4996: ['\t        else if ( ( ID > ID ) && ( ID < ID ) && ( ID - ID ) < ID ) ) {', ' expected statement before  )  token'], 4997: ['    char ID [ ] ;', ' array size missing in  ID '], 4998: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 4999: ['     getchar ( ID ) ;', ' too many arguments to function  getchar '], 5000: ['ID = ID ( ID ) ; printf ( STRING , ID )', ' expected  ;  before  return '], 5001: ['    printf ( STRING , ID [ ID ] . ID , ID [ ID ] . ID , ID [ ID ] . ID , ID [ ID ] . ID )', ' expected  ;  before  return '], 5002: ['    int ID [ CONST ] = ( CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST ) ;', ' invalid initializer'], 5003: ['while ( ID [ ID ] != CHARST || ID == CONST ) {', '  ID  undeclared '], 5004: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5005: [' while ( ID [ ID ] != STRING )', ' subscripted value is neither array nor pointer nor vector'], 5006: ['\tif ( ID * ID = ID * ID ) ;', ' lvalue required as left operand of assignment'], 5007: ['    for ( int ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 5008: ['        ID = ID + ID [ ID ] [ ID - ID - CONST + ID ] ;', '  ID  undeclared '], 5009: ['            CHARST = CHARST + CHARST - CHARST ;', ' lvalue required as left operand of assignment'], 5010: ['}', ' expected declaration or statement at end of input'], 5011: ['\tscanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 5012: ['    while ID >= CONST ;', ' expected  (  before  ID '], 5013: ['       ID == CONST', ' expected  ;  before  }  token'], 5014: ['\tfloat ID = CONST / CONST * ( ID - CONST ) + CONST ;', ' redeclaration of  ID  with no linkage'], 5015: ['    printf ( STRING ID [ ID ] ) ; }', ' expected  )  before  ID '], 5016: ['    } printf ( STRING , ) ; }', ' expected expression before  )  token'], 5017: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 5018: ['    scanf ( STRING , ID , ID , ID , ID , ID )', ' expected  ;  before  if '], 5019: ['}', ' expected declaration or statement at end of input'], 5020: ['   printf ( STRING )', ' expected  ;  before  return '], 5021: ['    ID ( ID , ID ) ;', ' too many arguments to function  ID '], 5022: ['\tint ID [ ID ] , ID ;', ' redeclaration of  ID  with no linkage'], 5023: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 5024: ['\tif ( ID == ID ) {', '  ID  undeclared '], 5025: ['\tint ID = CONST', ' expected  ,  or  ;  before  printf '], 5026: ['      scanf ( STRING ID . ID + ID ) ;', ' expected  )  before  ID '], 5027: ['    ID', ' expected  ;  before  return '], 5028: ['    else if ( ID == ID )', '  else  without a previous  if '], 5029: ['     for ( ID = ID ; ID [ ID ] != CHART , ID ++ ) {', ' expected  ;  before  )  token'], 5030: ['scanf ( STRING , & ID )', ' expected  ;  before  if '], 5031: ['return ID ;', '  ID  undeclared '], 5032: ['    else ( ID == CONST )', ' expected  ;  before  printf '], 5033: ['\tfor ( ; ID !=\\ ID ; ID ++ ) {', ' stray  \\  in program'], 5034: ['\t    ID = ID ( ID [ ] ) ;                   ', ' expected expression before  ]  token'], 5035: ['printf ( "                                 ', ' missing terminating " character'], 5036: ['        ID = ID + CONST', ' expected  ;  before  if '], 5037: ['\tprintf ( STRING )', ' expected  ;  before  return '], 5038: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 5039: ['        if ( ID = ID - CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 5040: ['\t        if ( ID = > ID ) {', ' expected expression before  >  token'], 5041: ['            if ( ID ( ID , ID ) == ID )', '  ID  undeclared '], 5042: ['        ID [ ID ] ( ID , ID , ID , ID ) ;', ' subscripted value is neither array nor pointer nor vector'], 5043: ['\tfor ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 5044: ['        ID = CONST ;', '  ID  undeclared '], 5045: ['                    printf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 5046: ['\t        ID = ID + ID [ ID ]', ' expected  ;  before  if '], 5047: ['\t    printf ( STRING , ) ;', ' expected expression before  )  token'], 5048: ['        switch ( ID )', '  ID  undeclared '], 5049: ['            if ( ID [ ID ] + ID < ID ) {', '  ID  undeclared '], 5050: ['printf ( STRING )', ' expected  ;  before  return '], 5051: ['\t    ID [ ID ] = putchar ( ) ;', ' too few arguments to function  putchar '], 5052: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 5053: ['else ( ID * ID == ID * ID && ID == ID , ID == ID ) {', ' expected  ;  before  {  token'], 5054: ['\t{ scanf ( STRING , & ID [ ID ] ) ; }', '  ID  undeclared '], 5055: ['\tfor ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 5056: ['        break ;', ' break statement not within loop or switch'], 5057: ['        ID = ID * CONST + ID', ' expected  ;  before  ID '], 5058: ['            if ID = CONST', ' expected  (  before  ID '], 5059: ['printf ( STRING , ID [ ID ] ) }', ' expected  ;  before  }  token'], 5060: ['    printf ( STRING , ( ID [ ID - CONST ] . ID ) , ( ID [ ID - CONST ] . ID ) , ( ID [ ID - CONST ] ID ) ) ;', ' expected  )  before  ID '], 5061: ['\t    for ( ID = CONST ; ( ID >= CONST ) && ( ( ( ID = getchar ( ) ) != CHART ) && ( ID != ID ) ) ; ID -= CONST ) )', ' expected statement before  )  token'], 5062: ['\tscanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 5063: ['}', ' expected declaration or statement at end of input'], 5064: ['        ID --', ' expected  ;  before  }  token'], 5065: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 5066: ['    printf ( STRING )', ' expected  ;  before  return '], 5067: ['     ID [ ID ] = ID [ ID ( ID , ID ) + ID ]  ', ' expected  ;  before  }  token'], 5068: ['    for ( ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ )', ' stray  \\  in program'], 5069: ['     int ID , ID ;', ' redeclaration of  ID  with no linkage'], 5070: ['ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 5071: ['printf ( STRING , ID )\t             ', ' expected  ;  before  return '], 5072: ['ID = sqrt ( CONST ) ID ;', ' expected  ;  before  ID '], 5073: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 5074: ['       scanf ( STRING , & ID )', ' expected  ;  before  }  token'], 5075: ['    ID ( ID + CONST , ID + ID [ ID ] )', ' expected  ;  before  }  token'], 5076: ['            ID == ;', ' expected expression before  ;  token'], 5077: ['    ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 5078: ['        for ( ID = ID + CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 5079: ['   for ( int ID = CONST ; ID <= int ID ( int ID , int ID ) ; ID ++ ) {', ' expected expression before  int '], 5080: ['\twhile ( ID < ID && ID < ID ) {', '  ID  undeclared '], 5081: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 5082: ['\tID = ID ( ID [ ID ] , ID [ ID ] ) ;', ' too few arguments to function  ID '], 5083: ['    ID = CHAR   printf ( STRING , ID ) ;', ' expected  ;  before  printf '], 5084: ['printf ( STRING , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 5085: ['}', ' expected declaration or statement at end of input'], 5086: ['   printf ( STRING )', ' expected  ;  before  scanf '], 5087: ['    int ID , ID = CONST , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 5088: ['    ID = sqrt ( ( ( ID - ID ) * ( ID - ID ) ) + ( ( ID - ID ) * ( ID - ID ) ) )                                   ', ' expected  ;  before  return '], 5089: ['}', ' expected declaration or statement at end of input'], 5090: ['      if ( * ( ID + ID ) > * ( ID + ID ) )', ' expected expression before  }  token'], 5091: ['            int ID [ ID ] [ ID ] = CONST ;', ' variable-sized object may not be initialized'], 5092: ['    struct ID * ID = ( struct ID * ) malloc ( CONST , sizeof ( struct ID ) ) ; ID = ID ;', ' too many arguments to function  malloc '], 5093: ['    printf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 5094: ['    for ( ID = CONST , ID < CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 5095: ['    ID = ID ( ID , ID )', ' expected  ;  before  return '], 5096: ['    free ( ID ) ;', '  ID  undeclared '], 5097: ['        else if ( ( ID >= ID ) && ( ID >= ) )', ' expected expression before  )  token'], 5098: ['        ID [ ID ] [ ID ] = CONST', ' expected  ;  before  }  token'], 5099: ['    for ( ID = CONST ; ID != ID && ID != CHARNST ; ID ++ ) {', ' empty character constant'], 5100: ['    }  continue ;', ' continue statement not within a loop'], 5101: ['\t  ID = ID [ ID ] ;', '  ID  undeclared '], 5102: ['            printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 5103: ['for ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 5104: ['        else', '  else  without a previous  if '], 5105: ['    break ;', ' break statement not within loop or switch'], 5106: [' printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 5107: ['     ID ( ID , ID , ID )', ' expected  ;  before  return '], 5108: ['    int ID = getchar ( ) ;', ' redeclaration of  ID  with no linkage'], 5109: ['\t ID = ID ;', '  ID  undeclared '], 5110: ['printf ( STRING )', ' expected  ;  before  return '], 5111: ['    else ( ID == CONST )', ' expected  ;  before  {  token'], 5112: ['printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 5113: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 5114: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 5115: ['}', ' expected declaration or statement at end of input'], 5116: ['        ID ( ID , ID + CONST , ID ) ;', '  ID  undeclared '], 5117: ['   printf (\\ ID ) ;', ' stray  \\  in program'], 5118: ['        ID ++', ' expected  ;  before  }  token'], 5119: ['        ID --', ' expected  ;  before  }  token'], 5120: ['    ID ++        ', ' expected  ;  before  }  token'], 5121: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5122: ['    printf ( STRING , ID ( ID , ID , ID ) ? STRING : STRING ) ;', ' too few arguments to function  ID '], 5123: ['\t    for ( ID = ID ; ID [ ID ! ] = CHART ; ID ++ )', ' expected  ]  before  !  token'], 5124: ['}', ' expected declaration or statement at end of input'], 5125: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 5126: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 5127: ['scanf ( STRING , - & ID , & ID ) ;', ' wrong type argument to unary minus'], 5128: ['       ID ++ ;', '  ID  undeclared '], 5129: ['int main ( ) { int ID , ;', ' expected identifier or  (  before  ;  token'], 5130: ['    if ( CONST <= ID [ ID ] <= CONST && CONST <= ID [ ID + CONST ] <= CONST && ID [ ID + CONST ] = ID [ ID + CONST ] - CONST ) {', ' lvalue required as left operand of assignment'], 5131: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 5132: ['char ID [ ID ]', ' expected  ;  before  int '], 5133: ['        ID = ID * ID', ' expected  ;  before  }  token'], 5134: ['   } printf ( STRING )         ', ' expected  ;  before  }  token'], 5135: ['\t{ if ( ( CHARST = < ID [ ID ] && ID [ ID ] <= CHARST ) && ( CHARST <= ID [ ID + CONST ] && ID [ ID + CONST ] <= CHARST )', ' expected expression before  <  token'], 5136: ['\t    } else if ( ID == ID ) {', '  ID  undeclared '], 5137: ['\t    ID = ID / CONST ;', ' invalid operands to binary / '], 5138: ['    if ( ID ( ID ) = ID )', ' lvalue required as left operand of assignment'], 5139: ['\t    if ( ID == CONST ) break ;', ' break statement not within loop or switch'], 5140: ['    printf ( STRING , % ID ) ;', ' expected expression before  %  token'], 5141: ['        case CONST ; printf ( STRING ) ; break ;', ' expected  :  or  ...  before  ;  token'], 5142: ['\t    break ;', ' break statement not within loop or switch'], 5143: ['    break }', ' expected  ;  before  }  token'], 5144: ['}', ' expected  ; , identifier or  (  before  int '], 5145: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 5146: ['    scanf ( STRING & ID , & ID [ ID ] ) ;', ' invalid operands to binary & '], 5147: ['\tprintf ( STRING , * ( * ID [ CONST ] + CONST ) ) ;', ' invalid type argument of unary  *  '], 5148: ['    char ID = { } ;', ' empty scalar initializer'], 5149: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 5150: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 5151: ['\tscanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 5152: ['    printf ( STRING )', ' expected  ;  before  printf '], 5153: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 5154: ['    printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  return '], 5155: ['}', ' expected declaration or statement at end of input'], 5156: ['    int ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  while "], 5157: ['          }     if ( ID > ID )     {    printf ( STRING , ID ) ; }', '  ID  undeclared '], 5158: ['\tID [ ] = getchar ( ) ;', ' expected expression before  ]  token'], 5159: ['    if ( ID % CONST = = CONST )', ' expected expression before  =  token'], 5160: ['if ( ID ( ID ) = CONST )', ' lvalue required as left operand of assignment'], 5161: ['        if ( ID == ID [ ID ] && ID = CONST )', ' lvalue required as left operand of assignment'], 5162: ['      scanf ( STRING , & CHAR) ;    ', ' lvalue required as unary  &  operand'], 5163: ['\t    else ID [ ID ] = ID [ ]', ' expected expression before  ]  token'], 5164: ['    { ID += ID [ ID ] ; ID += ID [ ID + CONST ] ; }', '  ID  undeclared '], 5165: ['    ID = CONST', ' expected  ;  before  ID '], 5166: ['printf ( STRING , ID ID ID ) ;', ' expected  )  before  ID '], 5167: ['\t       ID = ID - ( CONST * ( pow ( CONST , ID - CONST - ID ) ) ) ', ' expected  ;  before  }  token'], 5168: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 5169: ['    { for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 5170: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 5171: ['int ID [ CONST ] ,', ' expected identifier or  (  before  return '], 5172: ['\tfor ( ID = ; ID <= ID ; ID ++ )', ' expected expression before  ;  token'], 5173: ['            ID = ID ( ID , ID ) ;', '  ID  undeclared '], 5174: ['}', ' expected declaration or statement at end of input'], 5175: ['    for ( ID > CONST ; ) ', ' expected expression before  )  token'], 5176: ['     ID = ( char * ) ID ( ( ID ) * sizeof ( char ) ) ;', ' assignment to expression with array type'], 5177: ['\tint ID = ID ( ID , ID )', ' expected  ,  or  ;  before  printf '], 5178: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 5179: ['    int ID = ;', ' expected expression before  ;  token'], 5180: ['             ID ++ ;', '  ID  undeclared '], 5181: ['                ID [ ID ] [ ID ] = ID [ ID ] [ ID ] + ( ID [ ID ] [ ID ] * ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 5182: ['\t    scanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 5183: ['\tprintf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 5184: ['    ID = CONST', ' expected  ;  before  for '], 5185: ['\tfor ( ID = CONST ; ID [ CONST ] != ID ; ID ++ )', ' subscripted value is neither array nor pointer nor vector'], 5186: ['\tfor ( ID = CONST ; ID < CONST ; CONST ++ )', ' lvalue required as increment operand'], 5187: ['                ID ( & ID [ ID ] , & ( ID ( ID , ID , ID ) ) ) ;', ' lvalue required as unary  &  operand'], 5188: ['    * ID = ID ;', ' incompatible types when assigning to type  struct node  from type  struct node * '], 5189: ['                else { printf ( STRING ) }', ' expected  ;  before  }  token'], 5190: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5191: ['        if ( ID < ID )    ID ( ID + ID , ID + ID )', ' expected  ;  before  }  token'], 5192: ['   printf ( STRING )', ' expected  ;  before  return '], 5193: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 5194: ['    ID ( ID , ID ) ;', ' too many arguments to function  ID '], 5195: ['double ID = ID ( CONST )', ' expected  ,  or  ;  before  printf '], 5196: ['    else if ( ID % CONST != = CONST )', ' expected expression before  =  token'], 5197: ['    else', '  else  without a previous  if '], 5198: ['    else return CONST ;', '  else  without a previous  if '], 5199: ['    struct ID * ID = ( struct ID * ) malloc ( sizeof ( struct ID ) ) ;', ' invalid application of  sizeof  to incomplete type  struct point '], 5200: ['\t    if ( ID == )', ' expected expression before  )  token'], 5201: ['    ID = getchar ( ) ;', ' assignment to expression with array type'], 5202: ['ID = ( ID - ID ) * ( ID - ID )', ' expected  ;  before  return '], 5203: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 5204: ['}', ' expected declaration or statement at end of input'], 5205: ['        if ( ID ( ID [ ID ] >= ID ) == CONST ) {', ' too few arguments to function  ID '], 5206: ['}', ' expected declaration or statement at end of input'], 5207: ['    printf ( STRING , * ( ID + ) ) ;', ' expected expression before  )  token'], 5208: ['        scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 5209: ['        printf ( STRING , ID , ID , ID + CONST , ID , ID + CONST , ID - ID [ ID ) ;', ' expected  ]  before  )  token'], 5210: ['        { printf ( STRING ) }', ' expected  ;  before  }  token'], 5211: ['\tint ID = ID ( ID , ID ) ;', ' too many arguments to function  ID '], 5212: ['printf ( STRING )', ' expected  ;  before  return '], 5213: ['\tID ( ID [ ] , ID , ID + ID ) ;', ' expected expression before  ]  token'], 5214: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 5215: ['    for ( ID = CONST ; ID < CONST , ID ++ ) {', ' expected  ;  before  )  token'], 5216: ['    scanf ( STRING , ID * [ ID ] ) ;', ' expected expression before  [  token'], 5217: ['    int ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 5218: ['printf ( STRING , ID ( ID [ ] , ID ) ) ;', ' expected expression before  ]  token'], 5219: ['    printf ( STRING , ID , ID , ID , ID , ID ) ;', '  ID  undeclared '], 5220: ['            ( ID ( ID , ID , ID , ID ) ) {', ' expected  ;  before  {  token'], 5221: ['         else', ' expected expression before  }  token'], 5222: ['}', ' expected declaration or statement at end of input'], 5223: ['    if ( ID == CHART || ID == CHARNST )', ' empty character constant'], 5224: ['        printf ( / ID ) ;', ' expected expression before  ID  token'], 5225: ['scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 5226: ['    if ( ID == CHART ) return ;', '  ID  undeclared '], 5227: ['\t    ID ( ID , ID [ ] ) ;', ' expected expression before  ]  token'], 5228: ['\t\tfor ( ID = CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 5229: ['    float ID = sqrt ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;', ' invalid operands to binary ^ '], 5230: ['  if ( ID == ID ) {                                                                          printf ( STRING )                      } else {                                                                          printf ( STRING ) ;    ', ' expected  ;  before  }  token'], 5231: ['    ID < ID = ID ;', ' lvalue required as left operand of assignment'], 5232: ['\tprintf ( STRING , ( CONST ^ CONST ) )', ' expected  ;  before  return '], 5233: ['printf ( STRING )', ' expected  ;  before  return '], 5234: ['\tstruct ID * ID = ID ;', '  ID  undeclared '], 5235: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 5236: ['printf ( STRING , CONST )', ' expected  ;  before  }  token'], 5237: ['    char ID [ CONST ] , ;', ' expected identifier or  (  before  ;  token'], 5238: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 5239: ['}', ' expected declaration or statement at end of input'], 5240: ['}', ' expected declaration or statement at end of input'], 5241: ['       if ( ID % ID != CONST ) {', '  ID  undeclared '], 5242: ['    ID = CHARST', ' expected  ;  before  printf '], 5243: ['        printf ( STRING , ID )', ' expected  ;  before  return '], 5244: [' ID ( ID )', ' expected  ;  before  return '], 5245: ['        ID = CONST', ' expected  ;  before  for '], 5246: ['printf ( STRING . ) ;', ' expected identifier before  )  token'], 5247: ['    ID ( ID , CONST , CONST , CONST , ID , ID ) ;', ' too many arguments to function  ID '], 5248: ['    printf ( STRING )', ' expected  ;  before  return '], 5249: ['        ID ( CONST , CONST , CONST , ID + CONST )', ' expected  ;  before  ID '], 5250: ['\t    printf ( STRING , - ID )', ' expected  ;  before  }  token'], 5251: ['\tint ID = ID [ ID , CONST , ID - CONST , ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 5252: ['    while ( fabs ( ID - ID < ID ) ) {', '  ID  undeclared '], 5253: ['\tgetchar ( ID [ ID ] ) ;', ' too many arguments to function  getchar '], 5254: ['    if ( ID ( ID ) = CONST && ID ( ID ) != CONST )', ' lvalue required as left operand of assignment'], 5255: ['if ( ID / ID = ID / ID && ID / ID != ID * ID / ID * ID ) {', ' lvalue required as left operand of assignment'], 5256: ['\tID ( ID [ ID ] [ ID ] , ID [ ID ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 5257: ['\t    scanf ( STRING , ID )', ' expected  ;  before  printf '], 5258: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 5259: ['  for ( ; ID >= CONST || ID >= CONST ; ID ++ , ID -- , ID -- , ID -- ) {', '  ID  undeclared '], 5260: ['\t    if ( ( ( ID [ ID ] >= CHARST ) && ( ID [ ID ] <= CHARST ) ) && ( ( ID [ ID ] >= CHARST ) && ( ID [ ID ] <= ID ) ) )', '  ID  undeclared '], 5261: ['\tscanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 5262: ['    printf ( STRING , ID & ) ;', ' expected expression before  )  token'], 5263: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 5264: ['            ID [ ID ] = CHART ;', ' array subscript is not an integer'], 5265: ['    ID ( ID [ CONST ] , [ CONST ] ) ;', ' expected expression before  [  token'], 5266: ['}', ' expected declaration or statement at end of input'], 5267: ['\tif ( ( ID / ID ) = ( ID / ID ) ) {', ' lvalue required as left operand of assignment'], 5268: ['\telse if ', ' expected  (  before  {  token'], 5269: ['\t       printf ( STRING , ID - CONST )', ' expected  ;  before  }  token'], 5270: ['        for ( int ID = ID - ID ; ID + ID = ID ; ID -- )', ' lvalue required as left operand of assignment'], 5271: ['\t        ID = CONST', ' expected  ;  before  break '], 5272: ['            ( ID [ ID ] [ ID ] ) = ID ( ID [ ID ] [ ID ] ) ;', ' too few arguments to function  ID '], 5273: ['    float ID , ID , ;', ' expected identifier or  (  before  ;  token'], 5274: ['    ( * ID ) = ID ;', ' incompatible types when assigning to type  ID  {aka  struct node } from type  Node *  {aka  struct node * }'], 5275: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 5276: ['        for ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 5277: ['for ( ID = CONST ; ID < ID ; ID ++ ) {\tprintf ( STRING , & ID [ ID ] ) ; }', '  ID  undeclared '], 5278: ['    while ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 5279: ['\tprintf ( STRING , ! ( ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) || ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) ) )', ' expected  ;  before  return '], 5280: ['    ID = CONST', ' expected  ;  before  int '], 5281: ['                ID [ ID ] = ID [ ID ] ; ID ++ ; ID ++', ' expected  ;  before  }  token'], 5282: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 5283: ['    ID ( ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 5284: ['return CONST ; }', ' expected declaration or statement at end of input'], 5285: ['   printf ( STRING , ID - CONST ) ; ', '  ID  undeclared '], 5286: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5287: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 5288: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 5289: ['    if ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) = CONST ) {', ' lvalue required as left operand of assignment'], 5290: ['    for ( ID = CONST ; ID < CONST || ID = ID ; ID ++ )', ' lvalue required as left operand of assignment'], 5291: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 5292: ['        ID [ ID ] [ ID ] = CONST ;', '  ID  undeclared '], 5293: ['        if ( ID != - CONST )', ' expected expression before  else '], 5294: ['            if ( ( ID >= ID - ID ) && ( ID [ ID ] != CHART ) )', '  ID  undeclared '], 5295: ['   printf ( STRING , ID )', ' expected  ;  before  return '], 5296: ['    ( ID ( ID , ID ) == ID ) && ID ( ID , ID ) ? printf ( STRING ) : printf ( STRING ) , ;', ' expected expression before  ;  token'], 5297: ['    ID > CONST || ID = CONST ;', ' lvalue required as left operand of assignment'], 5298: ['\t    ID == ID', ' expected  ;  before  if '], 5299: ['   printf ( STRING , ID ID [ CONST ] [ CONST ] ) ;', ' expected expression before  ID '], 5300: ['\tprintf ( STRING , ID )', ' expected  ;  before  switch '], 5301: ['    scanf ( STRING , ID [ ID ] )', ' expected  ;  before  scanf '], 5302: ['      ID ++', ' expected  ;  before  }  token'], 5303: ['\tint ID = strlen ( ID ) ;', ' redeclaration of  ID  with no linkage'], 5304: ['    printf ( STRING )', ' expected  ;  before  return '], 5305: ['    for ( ID >= CONST , ID <= ID ; ID = ID * ( ID - ID ) )', ' expected  ;  before  )  token'], 5306: ['}', ' expected declaration or statement at end of input'], 5307: ['\tfloat ID = CONST * ID * ID * ID * ID', ' expected  ,  or  ;  before  printf '], 5308: ['\t            printf ( STRING , ID [ ID -  ] ) ;', ' expected expression before  ]  token'], 5309: ['\tID ( ID , ID , strlen ( ID ) - CONST ) ;', '  ID  undeclared '], 5310: ['# include < stdio.h >', ' expected identifier or  (  before  }  token'], 5311: ['    { ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 5312: ['        for ( ID = CONST ; ID <= ID ) {', ' expected  ;  before  )  token'], 5313: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 5314: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 5315: ['else if ( ID % CONST == CONST & ) ', ' expected expression before  )  token'], 5316: ['} } }', ' expected declaration or statement at end of input'], 5317: ['    ID ( ID [ ] , ID - CONST ) ;', ' expected expression before  ]  token'], 5318: ['\t    if ( ( ID [ ID ] == CHARST && ID [ ID - CONST ] != CHARST ) || ID [ ID ] = CHART ) printf ( STRING , ID [ ID - CONST ] ) ;', ' lvalue required as left operand of assignment'], 5319: ['    if ( ID ! > ID + ID || ID ! > ID + ID || ID ! > ID + ID )', ' expected  )  before  !  token'], 5320: [' printf ( STRING )', ' expected  ;  before  return '], 5321: ['            ID [ ID ] = ID [ ID + ID - ID ]', ' expected  ;  before  }  token'], 5322: ['\t              if ( ID == ( ID - CONST ) / CONST || ID + ID = ID )', ' lvalue required as left operand of assignment'], 5323: ['    return ID ( ID + CONST , ID - CONST ) ;', '  ID  undeclared '], 5324: ['    ID = ID ( ( ID -> ID . ID ) - ( ID -> ID . ID ) ) ;', '  struct rect  has no member named  ID '], 5325: ['# include < stdio.h >', ' expected identifier or  (  before  }  token'], 5326: ['                ID ( ID , ID , ID , ID , ID )', ' expected  ;  before  }  token'], 5327: ['\t            printf', ' expected  ;  before  }  token'], 5328: ['                      if ( ( ID < ID || ID = ID ) && ID < ID )', ' lvalue required as left operand of assignment'], 5329: ['        printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 5330: ['\tID = ( float ) CONST / CONST * ID * ( ( ID ) ^ CONST - ( * ID ^ CONST ) ) ;', ' invalid type argument of unary  *  '], 5331: ['    return ID ;', ' incompatible types when returning type  BirthData *  {aka  struct birth_data * } but  ID  {aka  struct birth_data } was expected'], 5332: ['ID ( ID != CONST ) {', ' expected  ;  before  {  token'], 5333: ['        ID += ;', ' expected expression before  ;  token'], 5334: ['for ( ID = ID - ( ID - CONST ) ; ID != ID - ( ID - CONST ) ; ID ++ )', '  ID  undeclared '], 5335: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 5336: ['    ID ( ID [ ] , ID - CONST ) ;', ' expected expression before  ]  token'], 5337: ['\t       for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 5338: ['       scanf ( STRING , & ( ID + ID ) ) ;', ' lvalue required as unary  &  operand'], 5339: ['}', ' expected declaration or statement at end of input'], 5340: ['    ID ( ID , ID , ID )', ' expected  ;  before  return '], 5341: ['\t    ID = ID ( ID , ID )', ' expected  ;  before  scanf '], 5342: ['        printf ( STRING , ID [ ID ] [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 5343: ['    int ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 5344: ['                ID = ID [ ID ]', ' expected  ;  before  ID '], 5345: ['\tID ( ID , CONST , ID ) ;', ' too many arguments to function  ID '], 5346: ['    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 5347: ['\t        ID = ID ( ID , ID ) ;', ' void value not ignored as it ought to be'], 5348: ['    return ( ( ID - ID ) + CONST ) ;', '  ID  undeclared '], 5349: ['\twhile ( ( ID [ ID ] = getchar ( ) != ID CHART ) && ( ID <= CONST ) )', ' expected  )  before  \\x0 '], 5350: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 5351: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 5352: ['    ID -> ID = ID ;', '  ID  undeclared '], 5353: ['}', ' expected declaration or statement at end of input'], 5354: ['}', ' expected declaration or statement at end of input'], 5355: ['\t    for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 5356: ['    * ( * ID + ID ) = * ( ID + ID )', ' expected  ;  before  }  token'], 5357: [' for ( ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 5358: ['            int ID = CONST , ID , ID [ ] [ ID ] ;', ' array size missing in  ID '], 5359: ['}', ' expected declaration or statement at end of input'], 5360: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 5361: ['        ID = CONST', ' expected  ;  before  }  token'], 5362: ['\tscanf ( STRING , & ID )', ' expected  ;  before  if '], 5363: ['        printf ( STRING ID - CONST ) ;', ' expected  )  before  ID '], 5364: ['        ID ( ID , CONST , CONST , CONST )', ' expected  ;  before  ID '], 5365: ['     int ID = CONST ;', ' redefinition of  ID '], 5366: ['printf ( STRING )', ' expected  ;  before  {  token'], 5367: ['            ID = ID + ID + ID + ID', ' expected  ;  before  }  token'], 5368: ['\treturn CONST ; } }', ' expected identifier or  (  before  }  token'], 5369: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 5370: ['\t    printf ( STRING , & ID [ ID ] & ID [ CONST ] & ID [ ID ] ) ;', ' invalid operands to binary & '], 5371: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 5372: ['\t    ID [ ID ] = ID + CONST ;', ' incompatible types when assigning to type  struct list_entry  from type  int '], 5373: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 5374: ['    for ( ID == CONST ; ID < ID , ID = ID + CONST )', ' expected  ;  before  )  token'], 5375: ['\tfor ( ID = CONST ; ID [ ID ] != ; ID ++ )               ', ' expected expression before  ;  token'], 5376: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 5377: ['}', ' expected declaration or statement at end of input'], 5378: ['    else printf ( STRING )      ', ' expected  ;  before  return '], 5379: ['    printf ( STRING , ID , , ID ) ;', ' expected expression before  ,  token'], 5380: ['\tint ID , ID , ;', ' expected identifier or  (  before  ;  token'], 5381: ['    double ID , ID , ID = CONST ;', '  ID  redeclared as different kind of symbol'], 5382: ['\tint ID ,', ' expected identifier or  (  before  int '], 5383: ['   scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 5384: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 5385: ['        * ID + ID = ID ;', ' lvalue required as left operand of assignment'], 5386: ['\t     ID = ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) ( ID - ID ) ) ;', ' called object is not a function or function pointer'], 5387: ['\tint ID ; char ID = CHARNST ;', ' empty character constant'], 5388: [' printf ( STRING , ID )', ' expected  ;  before  printf '], 5389: ['        return CONST ; }', ' expected declaration or statement at end of input'], 5390: ['\tscanf ( STRING & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 5391: ['\tif ( ID < ( int ) ID ) {', '  ID  undeclared '], 5392: ['            else ID --', ' expected  ;  before  }  token'], 5393: ['\t    ID = ID ;', ' assignment to expression with array type'], 5394: ['    } while ( ID != - CONST )', ' expected  ;  before  scanf '], 5395: ['\tprintf ( STRING )', ' expected  ;  before  printf '], 5396: ['    }', ' expected declaration or statement at end of input'], 5397: ['else', '  else  without a previous  if '], 5398: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 5399: ['\tID = CONST ( ID / CONST ) + CONST ;', ' called object is not a function or function pointer'], 5400: ['    printf ( STRING ) .', ' expected identifier before  return '], 5401: ['      printf ( STRING )', ' expected  ;  before  }  token'], 5402: ['printf ( STRING , ID , ID , ID , ) ;            ', ' expected expression before  )  token'], 5403: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 5404: ['\t            ID ++', ' expected  ;  before  }  token'], 5405: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 5406: ['      scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 5407: ['\t    for ( ID = CONST , ID < CONST + ID ; ID ++ ) {', ' expected  ;  before  )  token'], 5408: ['while ( ID != ID && ID < CONST )', '  ID  undeclared '], 5409: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 5410: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 5411: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 5412: ['\telse ', '  else  without a previous  if '], 5413: ['            ID = ID ( ID , ID ( ID [ ID - CONST ] , ID [ ID - ID + ID - CONST ] ) ) ;', ' called object  ID  is not a function or function pointer'], 5414: ['        ID = ( ID - ID ) / ( ID * ID - ID * ID )', ' expected  ;  before  printf '], 5415: ['    for', ' expected  (  before  return '], 5416: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 5417: ['scanf ( STRING , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 5418: ['     ID = ID ( ID )', ' expected  ;  before  scanf '], 5419: ['        ID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 5420: ['    if ( ID == CONST )', ' expected expression before  }  token'], 5421: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 5422: ['    else', '  else  without a previous  if '], 5423: ['\tprintf ( STRING , ID ( ID , ID , ID , ID [ ] ) == CONST ? STRING : STRING ) ;', ' expected expression before  ]  token'], 5424: ['    putchar ( ) ;', ' too few arguments to function  putchar '], 5425: ['    ID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 5426: ['    if ( ID [ ID ] == ID [ ID - ID - CONST ] ) {', '  ID  undeclared '], 5427: ['    ID , ( ID * CONST + ID * CONST + ID ) = ID ;', ' lvalue required as left operand of assignment'], 5428: ['} ID : / / ID . ID . ID . ID . ID / ID / ID / CONST # ID - ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  :  token"], 5429: ['\tID = ID ( ID )', ' expected  ;  before  if '], 5430: ['}', ' expected declaration or statement at end of input'], 5431: ['\treturn ID ;', '  ID  undeclared '], 5432: ['  for ( ID = ( ID - ( ID - CONST ) ) ; ID <= ( ID + ( ID - CONST ) ID ) ; ID ++ )', ' expected  )  before  ID '], 5433: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 5434: ['    printf ( STRING , ID CHART ID ) ;', ' expected  )  before  \\xa '], 5435: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 5436: ['        printf ( STRING )', ' expected  ;  before  for '], 5437: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5438: ['                printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 5439: ['\tfor ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 5440: ['int ID [ CONST ] , ID [ CONST ] , ID [ CONST ] , ID [ ( CONST ] ;', ' expected  )  before  ]  token'], 5441: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 5442: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 5443: ['        scanf ( STRING , & ID , ) ;', ' expected expression before  )  token'], 5444: ['    } printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 5445: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 5446: ['    float ID , ID = CONST ; long float ID ;', ' both  long  and  float  in declaration specifiers'], 5447: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 5448: ['            if ( ID >= ID - ( ID + CONST ) / CONST && ID <= ID - ID ++ ID )', ' expected  )  before  ID '], 5449: ['  } printf ( STRING , ID )', ' expected  ;  before  }  token'], 5450: ['    scanf ( STRING , int ID , int ID ) ;', ' expected expression before  int '], 5451: ['   ID = ID ( ID , ID , ID ) ;', ' void value not ignored as it ought to be'], 5452: ['}', ' expected declaration or statement at end of input'], 5453: ['}', ' expected declaration or statement at end of input'], 5454: ['\t    else printf ( STRING ) ;', '  else  without a previous  if '], 5455: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 5456: ['\tprintf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 5457: ['            if ( ID [ ID ] == ID [ ID ] )', '  ID  undeclared '], 5458: ['\t      printf ( STRING ID ) ;', ' expected  )  before  ID '], 5459: ['    printf ( STRING , ID [ CONST ] , ID [ CONST ] )', ' expected  ;  before  while '], 5460: ['        if ( ID ( ID , ID ) == CONST ) {', '  ID  undeclared '], 5461: ['\t            if ( ID == ID - ID || ID = ID + ID )', ' lvalue required as left operand of assignment'], 5462: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 5463: ['    ID -> ID = ( int * ) malloc ( ( ID -> ID + ID -> ID ) * sizeof ( int ) ) ;', '  ID  undeclared '], 5464: ['\t} break ;', ' break statement not within loop or switch'], 5465: ['\tID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on floating constant'], 5466: ['\tID -> ID = CONST * ( ID -> ID ) ;', ' invalid operands to binary * '], 5467: ['    printf ( STRING , int ( ID ) * CONST ) ;', ' expected expression before  int '], 5468: ['int main ( ) { printf ( STRING . ) ;', ' expected identifier before  )  token'], 5469: ['             }', ' expected identifier or  (  before  }  token'], 5470: ['                    printf ( STRING , ID + CONST ) ;', '  ID  undeclared '], 5471: ['    ID ++ ; }', '  ID  undeclared '], 5472: ['    int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 5473: ['    while ( ID -- )', '  ID  undeclared '], 5474: ['        int ID = int ID ( char * ID , char * ID , int ID ) ;', ' expected expression before  int '], 5475: ['            printf ( STRING , ID [ ID ] [ ID ] , ID ( ID ( ID ) ) ) ;', ' called object  ID  is not a function or function pointer'], 5476: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  printf '], 5477: ['    while ( ID < ID && ID >= ID )', '  ID  undeclared '], 5478: ['\t    scanf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 5479: ['    printf ( STRING ) :', ' expected  ;  before  :  token'], 5480: ['\tID ( ID , CONST )', ' expected  ;  before  printf '], 5481: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 5482: ['        else continue ;', '  else  without a previous  if '], 5483: ['\t            ID [ ID ] = ID', ' expected  ;  before  printf '], 5484: ['\tID = ID', ' expected  ;  before  printf '], 5485: ['\tint ID = ID ;', '  ID  undeclared '], 5486: ['        * ID [ ID ] = ID ;', ' invalid type argument of unary  *  '], 5487: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 5488: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 5489: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 5490: ['    ID ( ID , )', ' expected expression before  )  token'], 5491: ['\tif ( ID ) printf ( STRING ) ;', '  ID  undeclared '], 5492: ['    ID ( ID [ CONST ] , ID [ CONST ] )', ' expected  ;  before  printf '], 5493: ['    ID [ ID ] = CONST ;', '  ID  undeclared '], 5494: ['printf ( STRING , ID )', ' expected  ;  before  return '], 5495: ['    ID = ( char * ) malloc ( ( ID * ID ) * sizeof ( char ) ) ;', ' assignment to expression with array type'], 5496: ['\tID [ ID - CONST ] = ID [ ID % ID ( CONST , ID ) ] ;', ' invalid operands to binary % '], 5497: ['\t    if ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 5498: [' printf ( STRING )', ' expected  ;  before  printf '], 5499: ['    scanf ( STRING , ID ID ID ID ID ) ;', ' expected  )  before  ID '], 5500: ['}', ' expected declaration or statement at end of input'], 5501: ['int main ( ) {', ' two or more data types in declaration specifiers'], 5502: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 5503: ['        printf ( STRING . ID [ ID ] ) ;', ' request for member  ID  in something not a structure or union'], 5504: ['    ( ( ID = ( ID [ CONST ] [ CONST ] - ID ) ) && ( ID = ( ID [ CONST ] [ CONST ] - ID ) ) )', ' expected  ;  before  ID '], 5505: ['    for ( ID = CONST , ID <= ID ; ID == ID + CONST ) ; {', ' expected  ;  before  )  token'], 5506: ['    } printf ( STRING , ID )', ' expected  ;  before  return '], 5507: ['\tID ( ID , ID ) ;', '  ID  undeclared '], 5508: ['            for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 5509: ['}', ' expected declaration or statement at end of input'], 5510: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 5511: ['        ID [ ID ] = ( int * ) malloc ( CONST * sizeof ( int ) ) ;', ' expected identifier or  (  before  [  token'], 5512: ['        ID [ ID + ID + ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 5513: ['    for ( ID = CONST ; ID = > ID && ID < ID ; ID ++ )', ' expected expression before  >  token'], 5514: ['\t    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 5515: ['}', ' expected declaration or statement at end of input'], 5516: ['    scanf ( STRING , & ID . ID [ CONST ] , & ID [ CONST ] . ID , & ID [ CONST ] . ID , & ID [ CONST ] . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 5517: ['\t    CHAR = ID - CHARST + CHARST ;', ' lvalue required as left operand of assignment'], 5518: ['        for ( int ID = ID ; ID < ID ; ID ++ )', ' expected expression before  }  token'], 5519: ['      else ( CHARST <= ID && ID <= CHARST )                   ', ' expected  ;  before  {  token'], 5520: ['\t    if ( CHARST <= ID [ ID ] && ID [ ID ] <= CHARST ) || ( CHARST <= ID [ ID ] && ID [ ID ] <= CHARST )', ' expected expression before  ||  token'], 5521: [' printf ( STRING , STRING ! ) ;', ' expected  )  before  !  token'], 5522: ['ID = CONST / CONST * ID ( ID * ID - ID * ID ) ;', ' called object  ID  is not a function or function pointer'], 5523: ['        ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 5524: ['        ID = CONST', ' expected  ;  before  for '], 5525: ['        if ( ID == CONST && ID = ID / CONST )', ' lvalue required as left operand of assignment'], 5526: ['\telse { printf ( STRING ) ; ) }', ' expected statement before  )  token'], 5527: ['    float ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 5528: ['float ID = ID ( ( CONST * ID ) / CONST ) ) ;                      ', ' expected  ,  or  ;  before  )  token'], 5529: ['        case CONST ( ID > CONST ) : printf ( STRING , ID ) ;', ' called object is not a function or function pointer'], 5530: ['       if ( ) if ( ! ID ( ID ) ) { ID = CONST ; break ; }', ' expected expression before  )  token'], 5531: ['printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  return '], 5532: ['\t        scanf ( STRING , ID [ ID ] ) ;   ', '  ID  undeclared '], 5533: ['    ID = ( int * ) malloc ( ID * ( sizeof ( int ) ) ) ;', '  ID  undeclared '], 5534: ['            if ( ID [ ID ] == CHARST || ID [ ID ] = CHART ) {', ' lvalue required as left operand of assignment'], 5535: ['    static int ID = ID ;', ' initializer element is not constant'], 5536: ['        for ( int ID = ID ; ID < ( ID . ID ) ; ID ++ )', '  ID  undeclared '], 5537: ['    printf ( STRING , ID )', ' expected  ;  before  else '], 5538: ['\tfor ( ID = CONST ; ID != ; ID ++ ) {', ' expected expression before  ;  token'], 5539: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 5540: ['\tif ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST && ID [ ID ] )', '  ID  undeclared '], 5541: ['    struct ID { int ID ; int ID ; }', ' expected  ; , identifier or  (  before  struct '], 5542: ['    return ( ( ID ( ID , ID / CONST , ID ) * ID ( ID , ( ID / CONST ) , ID ) * ID ( ID , ID - CONST * ( ID / CONST ) ) ) % ID ) ;', ' too few arguments to function  ID '], 5543: ['    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 5544: ['\tif ( ID [ ID ] == CHART )', '  ID  undeclared '], 5545: ['        printf ( STRING , ID , ID , ) ;', ' expected expression before  )  token'], 5546: ['            if ( ID == CONST ) printf ( STRING ID ) ;', ' expected  )  before  ID '], 5547: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 5548: ['\tfloat ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 5549: ['   ) printf ( STRING , ID ) ;', ' expected  ,  or  ;  before  printf '], 5550: ['}', ' expected declaration or statement at end of input'], 5551: ['        ID = ID + ( ( ID / CONST == CONST ) ? ( ( ID / CONST == CONST ) ? CONST : CONST ) : CONST )', ' expected  ;  before  }  token'], 5552: ['ID = CONST ,', ' expected expression before  while '], 5553: ['int ID ( int ID [ ] , int ID , )', ' expected declaration specifiers or  ...  before  )  token'], 5554: ['            } else { printf ( STRING ) }', ' expected  ;  before  }  token'], 5555: ['        if ( ID == CHARST || ID == CHARST || ID == CHARST ID == STRING ID == STRING )', ' expected  )  before  ID '], 5556: ['\t( ID == CONST ) ? printf ( STRING ) : printf ( STRING )                                                        ', ' expected  ;  before  return '], 5557: ['\tprintf ( STRING , ID , ID , ID , ID , ID ) ;', '  ID  undeclared '], 5558: ['    else', '  else  without a previous  if '], 5559: ['printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 5560: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5561: ['\t      * ( ID + ( ID ++ CONST ) ) = * ( ID + ID ) ;', ' expected  )  before numeric constant'], 5562: ['    for ( ID = CONST ; ID < )', ' expected expression before  )  token'], 5563: ['    scanf ( STRING , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 5564: ['       ID [ ID ] = CHARNST ; ', ' empty character constant'], 5565: ['ID += ( ID )', ' expected  ;  before  }  token'], 5566: ['\t    scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 5567: ['\t        ID = ID [ ID ] ;', '  ID  undeclared '], 5568: ['    else if', ' expected  (  before  {  token'], 5569: ['        if ( ( ID [ ID ] != ID ) && ( ID [ ID ] = != ID ) )', ' expected expression before  !=  token'], 5570: ['        * ( ID + ID ) = ( int * ) malloc ( sizeof ( int ) * ID )', ' expected  ;  before  for '], 5571: ['        if ( strncmp ( ID , ID ) == CONST ) {', ' too few arguments to function  strncmp '], 5572: ['    if ( ID == / CONST )', ' expected expression before  ID  token'], 5573: ['\twhile ( ID != CHARNST && ID < CONST ) {', ' empty character constant'], 5574: ['\tchar ID [ CONST ] = STRING', ' expected  ,  or  ;  before  return '], 5575: ['    ID = sqrt ( CONST ID / CONST ) ;                                                                   ', ' invalid suffix "a" on integer constant'], 5576: ['    for ( ID = ID ; ID >= CONST ) {', ' expected  ;  before  )  token'], 5577: ['    putchar ( ID [ ID - ID ] ) ;', '  ID  undeclared '], 5578: ['\t    \tprintf ( STRING , & ID [ CONST ] )', ' expected  ;  before  return '], 5579: ['            printf ( STRING , ID [ ID - CONST - ID ] ) ;', '  ID  undeclared '], 5580: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 5581: ['}', ' expected declaration or statement at end of input'], 5582: ['            ID = ID [ ID ]', ' expected  ;  before  }  token'], 5583: ['    for ( ID = CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 5584: ['int ID ( char ID [ ] , ID )', ' unknown type name  ID '], 5585: ['\tif ( ID = > CONST )', ' expected expression before  >  token'], 5586: ['        if ( ID [ ID ] == CONST ) {', '  ID  undeclared '], 5587: ['}', ' expected identifier or  (  before  }  token'], 5588: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 5589: ['\tID = ID ( ID [ ] , CONST ) ;', ' expected expression before  ]  token'], 5590: ['        scanf ( STRING , * ( ID + ID ) ) ;', '  ID  undeclared '], 5591: ['    printf ( STRING ID ( ID , ID ) ) ;', ' expected  )  before  ID '], 5592: ['}', ' expected declaration or statement at end of input'], 5593: ['        ID = ( CONST * ID ) + ( ID % CONST )', ' expected  ;  before  }  token'], 5594: ['            if ( ID [ ID ] < ID [ ID ] )', '  ID  undeclared '], 5595: ['    return ( ( ID % ID ) * ID ( ID , ID - CONST ) % ID ) % ID ;', ' too few arguments to function  ID '], 5596: ['        * ( ID + ID ) = * ( ID + ID - ID )', ' expected  ;  before  }  token'], 5597: ['\tID [ ID ] = ID ( ID [ CONST ] ) ;', '  ID  undeclared '], 5598: ['    float ID , ID , ID , ID = CONST , ID , ID ;', ' conflicting types for  ID '], 5599: ['}', ' expected declaration or statement at end of input'], 5600: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 5601: ['printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 5602: ['    ID = ( struct ID * ) malloc ( ID * sizeof ( struct ID ) ) ;', ' invalid application of  sizeof  to incomplete type  struct birth_date '], 5603: ['\t   printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 5604: ['     for ( ID = ID ; ID <= ID ; ID = ID - CONST ) ;', '  ID  undeclared '], 5605: ['         int ID [ ID + CONST ] , ID [ ID + CONST ] , ID [ ID + ID + CONST ] = CONST ;', ' variable-sized object may not be initialized'], 5606: ['        ID += pow ( - CONST , ID ) * ID ( * ( ID - CONST ) + ID , ( ID - CONST ) ) ;', '  ID  undeclared '], 5607: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 5608: ['    ID ( ID , CONST , ID ) ;                                  ', ' too many arguments to function  ID '], 5609: ['            ID [ ID ] = ID + CHARST ;', '  ID  undeclared '], 5610: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 5611: ['}', ' expected declaration or statement at end of input'], 5612: ['        ID ( ID [ ID ] )', ' expected  ;  before  ID '], 5613: ['\t}', ' expected declaration or statement at end of input'], 5614: ['\t    ID ++ ;', '  ID  undeclared '], 5615: ['\tchar ID [ CONST ] = { CHARCHARHARRRCHARAR\tprintf ( STRING , ID [ ID ] ) ;', ' expected  ,  or  ;  before  printf '], 5616: ['    ID ( ID , CONST , ID - CONST , ID , CONST ) ;', ' too many arguments to function  ID '], 5617: ['\twhile ( >= CONST ) {', ' expected expression before  >=  token'], 5618: ['\t    for ( ID > ID ; )', ' expected expression before  )  token'], 5619: ['    ID = ID  ', ' expected  ;  before  ID '], 5620: ['\t    else {', '  else  without a previous  if '], 5621: ['\tscanf ( STRING , ID [ ID ] )', ' expected  ;  before  for '], 5622: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 5623: ['\tprintf ( STRING , ID , ID , ) ;', ' expected expression before  )  token'], 5624: ['\tID = ( ID * ID * ( ID - ID ) . ) / ( ID * ID - ID * ID ) ;', ' expected identifier before  )  token'], 5625: ['\tscanf ( STRING ID [ ID ] ) ;                                               ', ' expected  )  before  ID '], 5626: ['    printf ( STRING )', ' expected  ;  before  return '], 5627: ['        if ( ID = CHAR || ID = CHART )', ' lvalue required as left operand of assignment'], 5628: ['}', ' expected declaration or statement at end of input'], 5629: ['    else ( ID >= CHARST && ID <= CHARST ) {', ' expected  ;  before  {  token'], 5630: ['            ( ID [ ID ] + ID ) = ID [ ID ] + ID - CONST ;', ' lvalue required as left operand of assignment'], 5631: ['    else      ', '  else  without a previous  if '], 5632: ['\t    scanf ( STRING , & ( ID + ID ) ) ;', ' lvalue required as unary  &  operand'], 5633: ['     ID ( ID ) ;', ' too few arguments to function  ID '], 5634: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 5635: ['        for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 5636: ['           if ( ID [ ID ] == CHARST || ID [ ID ] == CHARST || ID [ ID ] == CHARST || ID [ ID ] == CHARST || ID [ ID ] == CHARST || ID [ ID ] == CHARST || ID [ ID ] == CHARST || ID [ ID ] == CHARST || ID [ ID ] == CHARST || ID [ ID ] == CHARST || )', ' expected expression before  )  token'], 5637: ['        ID ++', ' expected  ;  before  }  token'], 5638: [' ID [ ] = getchar ( ) ;', ' expected expression before  ]  token'], 5639: ['    for ( ID = CONST ; ID < CONST && ID [ ID ] != CHART ; ID ++ ) ;', '  ID  undeclared '], 5640: ['}', ' expected declaration or statement at end of input'], 5641: ['        ID ( ID )                      ', ' expected  ;  before  ID '], 5642: ['             if ( ID [ ID ] == ID [ CONST ] ) {', '  ID  undeclared '], 5643: ['\tfor ( ID = CONST ; ID < ; ID ++ )', ' expected expression before  ;  token'], 5644: ['    else if ( ( ID . ID . ID ) >= ID . ID . ID ) && ( ID . ID . ID <= ID . ID . ID )', ' expected identifier before  (  token'], 5645: ['\tprintf ( STRING , ID ( CONST ) )', ' expected  ;  before  return '], 5646: ['    if ( ( ( ID % CONST == CONST ) && ( ID % CONST != CONST ) ) || ( ( ID % CONST == CONST ) && ( ID % CONST == CONST ) ) ) {                  ', '  ID  undeclared '], 5647: ['            else continue ;', '  else  without a previous  if '], 5648: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 5649: ['         printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 5650: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 5651: ['\t    ID [ ID / CONST + ID = ID ] ;', ' lvalue required as left operand of assignment'], 5652: ['printf ( STRING CHARST > CHARST ) ;', ' expected  )  before  ID '], 5653: ['            if ( ID [ ID ] < ID [ ID ] && ID [ ID ] != )', ' expected expression before  )  token'], 5654: ['        { ID -> ID . ID = - CONST ;', '  curr->next  is a pointer; did you mean to use  -> ?'], 5655: ['\tprintf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 5656: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 5657: ['        ID [ ID ] = & ID ;', '  ID  undeclared '], 5658: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 5659: ['    ID = CONST', ' expected  ;  before  for '], 5660: ['    printf ( STRING , ID )', ' expected  ;  before  for '], 5661: ['\t    printf ( STRING ) :', ' expected  ;  before  :  token'], 5662: ['   if ( ID ) { ', '  ID  undeclared '], 5663: ['\tfloat ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 5664: ['}', ' expected identifier or  (  before  return '], 5665: ['}', ' expected declaration or statement at end of input'], 5666: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 5667: ['   ID = ( char * ) malloc ( ID * sizeof ( char ) ) ;', '  ID  undeclared '], 5668: [' return CHARNST ;                                     ', ' empty character constant'], 5669: ['printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 5670: ['    scanf ( % ID , & ID ) ;', ' expected expression before  %  token'], 5671: ['    printf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 5672: ['    ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 5673: ['\t            ID ;', '  ID  undeclared '], 5674: ['        ID [ ID ++ ] = ID ;', '  ID  undeclared '], 5675: ['\tprintf ( STRING , ID )', ' expected  ;  before  }  token'], 5676: ['\tID ( ID [ ] [ ID ] , ID [ ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 5677: ['                   ID ++ ,', ' expected expression before  }  token'], 5678: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 5679: ['    else if ( ID < CONST )', '  else  without a previous  if '], 5680: ['         ID >> ID >> ID ;', '  ID  undeclared '], 5681: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 5682: ['               ID = CONST', ' expected  ;  before  }  token'], 5683: ['    * ( ID + ID ) = ( int * ) malloc ( ID * sizeof ( int ) ) ;', ' assignment to expression with array type'], 5684: ['    ID = CONST ;', '  ID  undeclared '], 5685: [' \tfor ( ID = CONST ; ID [ ID ] != CHART && ID [ ID ] != ID ; ID ++ ) {', '  ID  undeclared '], 5686: ['    float ID = CONST * ID * ( ID * ID - ID * ID ) ;', ' redeclaration of  ID  with no linkage'], 5687: ['    ID = ( int * * ) malloc ( ID * ( int * ) ) ;', ' expected expression before  )  token'], 5688: ['\t    ID = ID', ' expected  ;  before  }  token'], 5689: ['\t        ID [ ID ] ==\\ CONST ;', ' stray  \\  in program'], 5690: ['    if ( ID % CONST == CONST ) || ( ID % CONST == CONST ) && ( ID % CONST == CONST ) {', ' expected expression before  ||  token'], 5691: ['printf ( STRING )    ', ' expected  ;  before  return '], 5692: ['                for ( ID = ID + CONST , ID = CONST ; ID <= ID , ID ++ , ID ++ ) {', ' expected  ;  before  )  token'], 5693: ['        ID [ ID ++ ] = ID [ ID ++ ]', ' expected  ;  before  }  token'], 5694: ['            ID [ ID ] = ID [ ID ] + CHARST - CHARST', ' expected  ;  before  }  token'], 5695: ['        ID = ID ( CONST ( ID - CONST ) ) ;', ' called object is not a function or function pointer'], 5696: ['    for ( ID = CONST ; ID != ID ) {', ' expected  ;  before  )  token'], 5697: ['    scanf ( STRING , & ID [ CONST ] ) ; printf ( STRING )', ' expected  ;  before  return '], 5698: ['printf ( STRING ID ) ;', ' expected  )  before  ID '], 5699: ['\t    ID --', ' expected  ;  before  }  token'], 5700: ['    printf ( STRING )', ' expected  ;  before  return '], 5701: ['    int ID = ID ( ID , ID + ID [ ID ] ) ;', '  ID  undeclared '], 5702: ['# include < string.h >', ' expected identifier or  (  before  }  token'], 5703: ['          ID = ID -> ID ;', "  ID  {aka  struct node } has no member named  ID  did you mean 'pre'?"], 5704: ['\treturn ID % CONST ;', ' invalid operands to binary % '], 5705: ['    ID = ID / CONST', ' expected  ;  before  }  token'], 5706: ['          ID = ID', ' expected  ;  before  else '], 5707: ['    ID ( ID , ID ) ;', ' too few arguments to function  ID '], 5708: ['    int ID = strlen ( ID ) ;', '  ID  undeclared '], 5709: ['        ID ++', ' expected  ;  before  }  token'], 5710: ['\tscanf ( STRING , & ID )', ' expected  ;  before  while '], 5711: [' scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 5712: ['     case CONST : printf ( STRING , ID ) ; break ;', ' duplicate case value'], 5713: [' printf ( STRING , ( ( ID * ID ) - CONST ID ) ) ;', ' invalid suffix "ac" on integer constant'], 5714: ['        free ( ID )', ' expected  ;  before  return '], 5715: ['\twhile ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 5716: ['    int * ID = ( int * ) malloc ( ID ( int ) ) ;', ' expected expression before  int '], 5717: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 5718: ['}', ' expected  ; , identifier or  (  before  int '], 5719: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5720: ['            ID = ID', ' expected  ;  before  continue '], 5721: ['    ID ++', ' expected  ;  before  return '], 5722: ['\tint ID , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 5723: ['        if ( ( ID [ ID + CONST ] == CHARST ) || ( ID [ ID + CONST ] ) == CHART ) )', ' expected statement before  )  token'], 5724: ['    else ( ( ID % CONST ) != CONST ) {', ' expected  ;  before  {  token'], 5725: ['                    ID = ID + ID', ' expected  ;  before  }  token'], 5726: ['    ID = int ( ID ) ;', ' expected expression before  int '], 5727: ['\t  for ( ID = ID ; ID >= ; ID = ID - CONST )', ' expected expression before  ;  token'], 5728: ['\t    getc ( STRING , ID [ ID ] ) ;', ' too many arguments to function  getc '], 5729: ['            ID [ ID ] = & ID ;', '  ID  undeclared '], 5730: ['printf ( STRING , ID )', ' expected  ;  before  return '], 5731: ['\tID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 5732: ['    else ( ( ID >= CHARST ) && ( ID <= CHARST ) )                                  ', ' expected  ;  before  printf '], 5733: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 5734: ['}', ' expected declaration or statement at end of input'], 5735: ['ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 5736: ['    if else ( ( ID >= CHARST ) && ( ID <= CHARST ) ) {', ' expected  (  before  else '], 5737: ['scanf ( STRING , ID ) ;', '  ID  undeclared '], 5738: ['scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 5739: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 5740: ['{ if ( ID = CONST || ID = ID )', ' lvalue required as left operand of assignment'], 5741: ['}', ' expected declaration or statement at end of input'], 5742: ['\t                if ( ID [ ID ] > ID [ ID - CONST ] ) {', '  ID  undeclared '], 5743: ['\twhile ( ID [ ID ] !=\\ CONST ) {', ' stray  \\  in program'], 5744: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5745: ['\tfor ( ID = CONST , ID <= ID - ID && ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 5746: ['        if ( ID [ ID ] == ID ) return ID', ' expected  ;  before  return '], 5747: ['\tif ( ID [ ID ] == CHARNST )', ' empty character constant'], 5748: ['}', ' expected declaration or statement at end of input'], 5749: ['printf ( STRING )', ' expected  ;  before  return '], 5750: ['    ID = CONST * ID * ( ID * ID - ID` * ID ) ;', ' stray  `  in program'], 5751: ['    int ID [ ( CONST ID - CONST ) ] ;', ' invalid suffix "n" on integer constant'], 5752: ['if ( ID [ CONST ] == ID )', '  ID  undeclared '], 5753: ['    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 5754: ['        if ( ID [ ID ] + ID [ ID ] - CHARST + CONST > ID ) {', '  ID  undeclared '], 5755: ['          if ( ID == ID / CONST - ID + CONST || ID = ID / CONST + CONST )', ' lvalue required as left operand of assignment'], 5756: ['        if ( ID ( ID [ ID ] ) != ID * ( ID [ ID ] ) ) {', ' invalid operands to binary * '], 5757: ['        if ( ID [ ID ] == CHART || ID [ ID ] == \\ CONST )', ' stray  \\  in program'], 5758: ['            printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  if '], 5759: ['        for ( ID = ID ; ( ID - ID ) <= ( ID / CONST ) ; ID ++ )', '  ID  undeclared '], 5760: ['               printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 5761: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 5762: ['    float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 5763: ['    printf ( ( STRING , ( ( ID + CONST ) . ID ) ) ) ;', '  a + 16  is a pointer; did you mean to use  -> ?'], 5764: ['                if ( ID >= ID - ( ID - ID ) / CONST && ID <= ( CONST * ID - CONST * ID ) / CONST ) { CONST', ' expected  ;  before  printf '], 5765: ['    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 5766: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 5767: ['\tbreak ;', ' break statement not within loop or switch'], 5768: ['    float ID = ID ( ( ID ) * ( ID ) + ( ID ) * ( ID ) ) ;', ' redeclaration of  ID  with no linkage'], 5769: ['    ID = ( struct ID * ) malloc ( CONST , sizeof ( struct ID ) ) ;', ' too many arguments to function  malloc '], 5770: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 5771: ['     if ( ( ID - ID ) / ( ID - ID ) ) == ( ( ID - ID ) / ( ID - ID ) ) {', ' expected expression before  ==  token'], 5772: ['    ID = ( ID ) ;', ' lvalue required as left operand of assignment'], 5773: ['                ID = ID [ ID ]', ' expected  ;  before  continue '], 5774: ['          printf ( STRING CHARRING ) ;', ' expected  )  before  \\x6c696e65 '], 5775: ['          ( CONST < ID < CONST )', ' expected  ;  before  {  token'], 5776: ['            if ( ID [ ID ] = < ID [ ID ] )', ' expected expression before  <  token'], 5777: ['    int * * ID = ( int * * ) malloc ( ID * sizeof ( int * ) ) ;', ' invalid operands to binary * '], 5778: ['    for ( ID = CONST ; ID <= ID ; ID += )', ' expected expression before  )  token'], 5779: ['if ( ( ID ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) << ID ) {', ' invalid operands to binary << '], 5780: ['\tscanf ( STRING & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 5781: ['\telse  ( CHARST >= CONST && CHARST <= CONST )', ' expected  ;  before  printf '], 5782: ['    {  / printf ( STRING , ID ) ;', ' expected expression before  ID  token'], 5783: ['\tchar ID [ ] = STRING', ' expected  ,  or  ;  before  printf '], 5784: ['        int ID = ID ( ID , CONST )', ' expected  ,  or  ;  before  printf '], 5785: ['\t    ID ++', ' expected  ;  before  }  token'], 5786: ['        for ( * ID != ID ; ID ++ )', ' expected  ;  before  )  token'], 5787: ['         ID = - ID', ' expected  ;  before  }  token'], 5788: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 5789: ['    }', ' expected declaration or statement at end of input'], 5790: ['    int ID , ID = CONST , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 5791: ['\t       if ( ID [ ID - CONST ] + CHART = ID [ ID ] ) {  ', ' lvalue required as left operand of assignment'], 5792: ['    { printf ( STRING . ID ) ; }', ' request for member  ID  in something not a structure or union'], 5793: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 5794: ['\t     ID ++', ' expected  ;  before  ID '], 5795: ['\tif ( ID ) printf ( STRING , ID ) ;', '  ID  undeclared '], 5796: ['\t for ( ID = ; ID <= ID ; ID ++ ) {', ' expected expression before  ;  token'], 5797: ['\t    ID ++ ,', ' expected expression before  }  token'], 5798: ['    printf ( STRING , CONST )', ' expected  ;  before  return '], 5799: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 5800: ['\t for ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 5801: ['  if ( ID >= CHARST && ID <= CHARST )', '  ID  undeclared '], 5802: ['    if ( ID ( ID , ( ID * ( ID - ID ) ) ) == ID ( ID , ( ID * ID - ID ) ) )', '  ID  undeclared '], 5803: ['    { printf ( STRING ) }', ' expected  ;  before  }  token'], 5804: ['\tID ( ID [ ] , ID , ID + ID ) ;', ' expected expression before  ]  token'], 5805: ['    gets ( ID [ ] ) ;', ' expected expression before  ]  token'], 5806: ['       else { printf ( STRING ) }', ' expected  ;  before  }  token'], 5807: ['    for ( ID = CONST ; ID <= ID ; ++ ) {', ' expected expression before  )  token'], 5808: ['            printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 5809: ['    ID = ID * ID * CONST ( ID - ID ) / ( ID * ID - ID * ID ) ;', ' called object is not a function or function pointer'], 5810: ['    ID = CONST', ' expected  ;  before  break '], 5811: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 5812: ['printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 5813: ['    ID = ID ;', '  ID  undeclared '], 5814: ['        printf ( STRING , ( ID + ID - CONST ) % CONST )', ' expected  ;  before  }  token'], 5815: [' printf ( STRING , ID , ID , ID , ID , ( if ( ID > CONST ) ) ? ID : - ID ) ;', ' expected expression before  if '], 5816: ['        if ID < ID [ ID ]', ' expected  (  before  ID '], 5817: ['    } * /', ' expected expression before  ID  token'], 5818: ['\t           { printf ( STRING )', ' expected  ;  before  ID '], 5819: ['printf ( STRING , ID , ID , ID , ID ID ID ) ;', ' expected  )  before  ID '], 5820: ['\t    printf ( STRING , STRING ID ) ;', ' expected  )  before  ID '], 5821: ['\t        while ( ID [ ID ] + ID > ID ) {', '  ID  undeclared '], 5822: ['    printf ( STRING , ID + ID ( * ( ID + ID ) , * ( ID + ID ) ) ) ;', '  ID  undeclared '], 5823: ['\t    if ( ID [ ID ] !=\\ CHARST )', ' stray  \\  in program'], 5824: ['                if ( ( ID + ID ) = ID ) break ;', ' lvalue required as left operand of assignment'], 5825: ['\tID = CONST', ' expected  ;  before  switch '], 5826: ['        default :', ' label at end of compound statement'], 5827: ['   while ( ID != CONST ) { ID = ID * CONST ;', '  ID  undeclared '], 5828: ['    printf ( STRING )', ' expected  ;  before  printf '], 5829: ['}', ' expected declaration or statement at end of input'], 5830: ['}', ' expected identifier or  (  before  }  token'], 5831: ['ID >= CONST && ID <= CONST', ' expected  ;  before  scanf '], 5832: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 5833: ['if ( * ID [ CONST ] == CONST && * ID [ CONST ] == CONST && * ID [ CONST ] == CONST && * ID [ CONST ] == CONST * ID [ CONST ] == CONST )  ', ' invalid operands to binary * '], 5834: ['int ID = strlen ( ID ) ;', ' redefinition of  ID '], 5835: ['    ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 5836: ['\t    ID = char ( getchar ( ) ) ;', ' expected expression before  CHAR '], 5837: ['    if ( ) { printf ( STRING ) ; }', ' expected expression before  )  token'], 5838: ['         printf ( STRING , ID )', ' expected  ;  before  }  token'], 5839: ['   ID = CONST * ID ( ID * ID - ID * ID ) ;', ' called object  ID  is not a function or function pointer'], 5840: ['    scanf', ' expected  ;  before  ID '], 5841: ['\tID ( ID , ID ) ;', ' too many arguments to function  ID '], 5842: ['printf ( STRING )', ' expected  ;  before  return '], 5843: ['        printf ( STRING )', ' expected  ;  before  }  token'], 5844: ["    * ( ID + ID ) = '\\0;", " missing terminating ' character"], 5845: ['        if ( ID -> ID == ID )', '  ID  undeclared '], 5846: ['\tID = CONST', ' expected  ;  before  }  token'], 5847: ['\t  ID = CHART ;', ' assignment to expression with array type'], 5848: ['printf ( STRING )', ' expected  ;  before  return '], 5849: ['        for ( ID = ID - CONST ; ID = > CONST ; ID -- ) {', ' expected expression before  >  token'], 5850: ['\t            ID [ ID ] = CHART ;', '  ID  undeclared '], 5851: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 5852: ['    ID ( ID , ID - CONST )', ' expected  ;  before  }  token'], 5853: ['           while ( ID <= ID )', ' expected  ;  before  ID '], 5854: ['if ( ID >= ID ( ID ) && ID = < ID ( ID + CONST ) ) {', ' expected expression before  <  token'], 5855: ['\tprintf ( STRING , ID )', ' expected  ;  before  }  token'], 5856: ['\t    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 5857: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 5858: ['  printf ( STRING , ID ( ID [ ] , ID ) ) ;', ' expected expression before  ]  token'], 5859: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 5860: ['    ID [ CONST ] = ID [ CONST ] ID [ CONST ] ;', ' expected  ;  before  ID '], 5861: ['    printf ( STRING , ID , ID [ ID ] + CHARST ) ;', '  ID  undeclared '], 5862: ['    ID = sqrt ( ID * ID = ID * ID ) ;', ' lvalue required as left operand of assignment'], 5863: ['    ID ( ID , ID , CONST , CONST ) ;', ' too many arguments to function  ID '], 5864: ['    ID ( ID , ID - CONST , ID + CONST )', ' expected  ;  before  printf '], 5865: ['\tfloat ID = ID * ID * * CONST ;', ' invalid type argument of unary  *  '], 5866: ['    if else ( ID == CONST ) printf ( STRING , ID ) ;', ' expected  (  before  else '], 5867: ['    ID = ( struct ID * ) ID ( sizeof ( struct ID ) * ID ) ;', '  ID  undeclared '], 5868: ['\t    ID = ID + ID ;', '  ID  undeclared '], 5869: ['{   int ID = ID ;', '  ID  redeclared as different kind of symbol'], 5870: ['\t  { if ( ( ID [ ID + CONST ] - CONST ) == ID [ ID + CONST ] )', ' expected expression before  else '], 5871: ['}', ' expected  ; , identifier or  (  before  int '], 5872: ['        ID = ( ( char * ) malloc ( ID + CONST ) * sizeof ( char ) ) ;', ' invalid operands to binary * '], 5873: ['}', ' expected declaration or statement at end of input'], 5874: ['    \twhile ( ID [ ID ] == ID [ ID ] && ID < ID && ID != )', ' expected expression before  )  token'], 5875: ['\tscanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 5876: ['   if ( )', ' expected expression before  )  token'], 5877: ['}', ' expected declaration or statement at end of input'], 5878: ['    ID = ID / ( pow ( CONST , ID ) )', ' expected  ;  before  printf '], 5879: ['    ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 5880: ['                    printf ( STRING , ID )', ' expected  ;  before  ID '], 5881: ['  for ( int ID = CONST ; ID = < ID - CONST ; ID ++ )', ' expected expression before  <  token'], 5882: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 5883: ['    strcpy ( ID , ID , ID - ID ) ;', ' too many arguments to function  strcpy '], 5884: ['    if ( ID == ID || ID == ID || ID == ID || ID == ID ) && ( ID != ID ) printf ( STRING , ID ) ;', ' expected identifier before  (  token'], 5885: ['\t    ID = CONST', ' expected  ;  before  }  token'], 5886: ['    ID ( ID , CONST , ID - CONST )', ' expected  ;  before  return '], 5887: ['\tID = ID ( ID , ID ) ;', ' assignment to expression with array type'], 5888: ['                ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 5889: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 5890: ['\t            ID = CONST', ' expected  ;  before  }  token'], 5891: ['    if ( ID == ID && ID != CONST )', '  ID  undeclared '], 5892: ['                printf ( STRING )', ' expected  ;  before  }  token'], 5893: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 5894: ['\twhile ( ID [ ID ] ! STRING ) {', ' expected  )  before  !  token'], 5895: ['\telse { printf ( STRING ) ; }', '  else  without a previous  if '], 5896: ['  { printf ( STRING ) }', ' expected  ;  before  }  token'], 5897: ['    int ID [ ] ;                                ', ' array size missing in  ID '], 5898: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 5899: ['}', ' expected declaration or statement at end of input'], 5900: ['    while ( ID [ ID ] != CHART || ID CHART )', ' expected  )  before  \\xa '], 5901: [' int ID = ID (  ID [ ] ) ;', ' expected expression before  ]  token'], 5902: ['  puts ( ID ) ;', '  ID  undeclared '], 5903: ['\tprintf ( STRING , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] , ID , ID ) ;', '  ID  undeclared '], 5904: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 5905: ['\tif ( ID ( ID [ ] ) == CONST )', ' expected expression before  ]  token'], 5906: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 5907: ['            if ( ID [ ID ] == ID [ ID ] && ( ID != ID || ID = ID ) )', ' lvalue required as left operand of assignment'], 5908: ['    else if {', ' expected  (  before  {  token'], 5909: ['   } while ( ID != CONST )', ' expected  ;  before  return '], 5910: ['     else return ID ( ID + CONST , ID ) || ID ( ID + CONST , ID + ID [ ID ] ) ;', '  ID  undeclared '], 5911: ['        printf ( STRING , ID [ ID ] , ID [ ID ] )', ' expected  ;  before  ID '], 5912: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 5913: ['\tfor ( ID = CONST ; ID ++ )', ' expected  ;  before  )  token'], 5914: ['\tfor ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 5915: ['\t        ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 5916: ['    ID ( ID , ID ) ? printf ( STRING ) : printf ( STRING ) ;', ' expected declaration or statement at end of input'], 5917: ['    { scanf ( STRING , & ID ) ;', '  ID  undeclared '], 5918: ['    for ( ID = CONST ; ID != ID , ID ++ ) {', ' expected  ;  before  )  token'], 5919: ['                    ID = CONST', ' expected  ;  before  }  token'], 5920: ['\twhile ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 5921: ['        return ID ( ID , ID , ID , ID + CONST , ID ) || ID ( ID , ID , ID , ID , ID + CONST ) || ID ( ID , ID , ID , ID - CONST ) ;', ' too few arguments to function  ID '], 5922: ['    ID ( ID , CONST )', ' expected  ;  before  printf '], 5923: ['}', ' expected  ; , identifier or  (  before  int '], 5924: ['}', ' expected declaration or statement at end of input'], 5925: ['  printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 5926: ['    ID = gets ( ) ;', ' too few arguments to function  gets '], 5927: ['    printf ( STRING )', ' expected  ;  before  }  token'], 5928: ['\tprintf ( STRING , & )', ' expected expression before  )  token'], 5929: ['\tprintf ( STRING , ID [ CONST ] [ CONST ] ) ;', '  ID  undeclared '], 5930: ['printf ( STRING ID ) ;', ' expected  )  before  ID '], 5931: ['            printf ( STRING , ID [ ID ] ) ; }', '  ID  undeclared '], 5932: ['}', ' expected  ; , identifier or  (  before  int '], 5933: ['    ( ID ( ID , CONST , CONST , CHARST ) == CONST ) ? printf ( STRING ) : printf ( ) ;', ' too few arguments to function  printf '], 5934: ['return ID ; } }', ' expected identifier or  (  before  }  token'], 5935: ['    int ID [ ] [ CONST ] ; ', ' array size missing in  ID '], 5936: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 5937: ['    for ( int ID = CONST ; ID < ID - CONST ) {', ' expected  ;  before  )  token'], 5938: ['    ID = ( struct ID * ) calloc ( ID * sizeof ( struct ID ) ) ;', ' too few arguments to function  calloc '], 5939: ['\tif ( ID == CONST ) )', ' expected statement before  )  token'], 5940: ['        ID = float ( ( ID + ID ) / CONST ) ;', ' expected expression before  float '], 5941: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 5942: ['\tID = ID ++', ' expected  ;  before  }  token'], 5943: ['\t    printf ( STRING , ID )', ' expected  ;  before  ID '], 5944: ['     if ( * ID [ ID ] == ID )', ' invalid type argument of unary  *  '], 5945: ['\t    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 5946: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 5947: ['\t   ID [ ID ] = ID [ ID - ID - CONST ] ; ', '  ID  undeclared '], 5948: ['}', ' expected declaration or statement at end of input'], 5949: ['\t        printf ( STRING , ID ) ,', ' expected expression before  }  token'], 5950: ['float ID = ID ^ CONST - CONST ID ;', ' invalid suffix "ac" on integer constant'], 5951: ['    printf ( STRING )', ' expected  ;  before  return '], 5952: ['            printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 5953: ['\tID ++', ' expected  ;  before  while '], 5954: ['            if ( ID ! ID && ID [ ID + ID ] [ ID + ID ] != CHARST )', ' expected  )  before  !  token'], 5955: ['    scanf ( STRING , & ID )', ' expected  ;  before  printf '], 5956: ['        ID [ ID ] = char ( CONST - ID ) ;', ' expected expression before  CHAR '], 5957: ['    if ID > ID {', ' expected  (  before  ID '], 5958: ['    ID = * ;', ' expected expression before  ;  token'], 5959: ['      ( ( ID [ ID ] += ID [ ID ] ) > CONST ) ? ID [ ID ] = ID [ ID ] + ID [ ID ] - CONST : ID [ ID ] += ID [ ID ] ;', ' lvalue required as left operand of assignment'], 5960: ['    if ( ( ID % CONST == CONST ) && if ( ID % CHARST == CONST && ID % CONST == CONST ) )                   ', ' expected expression before  if '], 5961: ['    for ( ID = ID - CONST ; ID = > CONST ; ID -- )', ' expected expression before  >  token'], 5962: ['}', ' expected declaration or statement at end of input'], 5963: ['\t else printf ( STRING ) ;', '  else  without a previous  if '], 5964: ['    for ( ID = CONST ; ID [ ID ] != CHART , ID ++ ) {', ' expected  ;  before  )  token'], 5965: ['        else', '  else  without a previous  if '], 5966: ['\t   ID -> = ID ;', ' expected identifier before  =  token'], 5967: ['                scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 5968: ['} }', ' expected identifier or  (  before  }  token'], 5969: ['            if ( * ( * ( ID + ID ) + ID ) == CONST ) {', '  ID  undeclared '], 5970: ['    for ( int ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 5971: ['    for ( int ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 5972: ['                ID [ CONST ] = ID [ ID ]', ' expected  ;  before  ID '], 5973: ['}', ' expected declaration or statement at end of input'], 5974: ['if ( ID >= ID ) && ( ID >= ID ) {', ' expected identifier before  (  token'], 5975: ['    ID ( ID , ID * CONST , ID ( ID , ID , ( ID * CONST ) - CONST ) , ( ID * CONST ) - CONST ) ;', '  ID  undeclared '], 5976: ['            if ( ( ID + ID > ID ) && ( ID + ID > ID ) ) && ( ID + ID > ID )', ' expected identifier before  (  token'], 5977: ['printf ( STRING . ) ;', ' expected identifier before  )  token'], 5978: ['    ID = float ( abs ( ID ) ) ;', ' expected expression before  float '], 5979: ['    ID = CONST , ID = CONST ;', '  ID  undeclared '], 5980: ['\tfor ( ID = CONST , ID <= CONST ; ID ++ )', ' expected  ;  before  )  token'], 5981: ['    float ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 5982: ['            ID ++', ' expected  ;  before  }  token'], 5983: ['                ID ++', ' expected  ;  before  ID '], 5984: ['      int ID = ID [ ID ] ;', '  ID  undeclared '], 5985: ['        if ( ID == CONST ) ID = CONST', ' expected  ;  before  break '], 5986: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 5987: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 5988: ['            ID [ ID ] = CONST', ' expected  ;  before  }  token'], 5989: ['    scanf ( STRING , * ID ) ;', ' invalid type argument of unary  *  '], 5990: ['\t    printf ( STRING , ID )', ' expected  ;  before  if '], 5991: ['    else ( ID < ID * ID )', ' expected  ;  before  printf '], 5992: ['}', ' expected declaration or statement at end of input'], 5993: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 5994: ['    ID = ID ( int ID ) ;', ' expected expression before  int '], 5995: ['\t    ID = ( ID + ( ID * ( CONST pow ( ID ) ) ) ) ;', ' invalid suffix "pow" on integer constant'], 5996: ['    printf ( STRING , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] )', ' expected  ;  before  return '], 5997: ['    float ID = ID * ID ;', '  ID  undeclared '], 5998: ['\t    else', '  else  without a previous  if '], 5999: ['\tint ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 6000: ['\t    while ( ID >= ID / CONST + CONST )', '  ID  undeclared '], 6001: ['\tint', ' expected identifier or  (  before  return '], 6002: ['            if ( ID == CONST || ID == ID || ID == CONST || ID == ID ) printf ( STRING / ID , ID ) ;', '  ID  undeclared '], 6003: ['printf ( STRING , ( ID - CONST ) + ( ID * ( ID + CONST ) / CONST ) )', ' expected  ;  before  return '], 6004: ['           { ID [ ID ] = ID [ ID ] ; ID ++ ; ID += ID + CONST - ID }', ' expected  ;  before  }  token'], 6005: ['    scanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 6006: ['\t       else if ( ID == CONST || ID == ID ) ) {', ' expected statement before  )  token'], 6007: ['# ID < ID . ID >', ' invalid preprocessing directive #inclue; did you mean #include?'], 6008: ['    int ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 6009: ['ID = CONST * ID', ' expected  ;  before  scanf '], 6010: ['printf ( STRING , ID )', ' expected  ;  before  return '], 6011: ['        ID = ID ( ID , & ID [ ID ] [ CONST ] )', ' expected  ;  before  }  token'], 6012: ['printf ( STRING )', ' expected  ;  before  return '], 6013: ['   { printf ( STRING )', ' expected  ;  before  return '], 6014: ['    printf ( STRING , ID ( ID , CONST ) )', ' expected  ;  before  return '], 6015: ['printf ( STRING )', ' expected  ;  before  return '], 6016: ['\telse ( ID == CONST ) printf ( STRING ) ;', ' expected  ;  before  printf '], 6017: ['        case CONST ; printf ( STRING ) ; break ;', ' expected  :  or  ...  before  ;  token'], 6018: ['    if ( ID == CONST )', '  ID  undeclared '], 6019: ['    if ( ID != CONST ) {', '  ID  undeclared '], 6020: [' if ( ID % CONST == CONST ) && ( ID % CONST == CONST ) {', ' expected identifier before  (  token'], 6021: ['    printf ( CHAR', ' expected  ;  before  return '], 6022: ['\tID [ CONST ] = CONST', ' expected  ;  before  printf '], 6023: ['         ID [ ID ] = ID [ ID - ID ] ;', '  ID  undeclared '], 6024: ['        ID [ ID ] [ ID ] = CONST', ' expected  ;  before  ID '], 6025: ['    else if ( ( ID == ID ) && ID != ID ) )', ' expected statement before  )  token'], 6026: ['    ID = ( char * * ) malloc ( ID * sizeof ( char ) ) ;', '  ID  undeclared '], 6027: ['    \telse if ( ID [ ID - CONST ] < ID ( ID ) ) ID = CONST ;', ' called object  ID  is not a function or function pointer'], 6028: ['\t        while ( scanf ( STRING , ID ) != CHARST || scanf ( STRING ID ) != CHART ) {', ' expected  )  before  ID '], 6029: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 6030: ['    { ID [ ID ] = ID ; ID = getchar ( ) ; ID ++ }', ' expected  ;  before  }  token'], 6031: ['        ID ++', ' expected  ;  before  ID '], 6032: [' printf ( STRING , * ID , * ID , * ID ) ;', '  ID  undeclared '], 6033: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 6034: ['\tprintf ( STRING , * ID ) ;', ' invalid type argument of unary  *  '], 6035: ['\t    ID = ID [ ID ] ', ' expected  ;  before  }  token'], 6036: ['else if ( ID < ID )', '  else  without a previous  if '], 6037: ['    while ( ID -> ID ! ID ) {', ' expected  )  before  !  token'], 6038: ['}', ' expected declaration or statement at end of input'], 6039: ['                  ID = ID + CONST', ' expected  ;  before  }  token'], 6040: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 6041: ['                {   ID = ID [ ID ] ;', '  ID  undeclared '], 6042: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 6043: ['\tprintf ( STRING , ( CONST / CONST ) * ID * ID * ID * ID , CONST * ID * ID * ID * ID )', ' expected  ;  before  return '], 6044: ['\tint ID = ID ++ ID ;', ' expected  ,  or  ;  before  ID '], 6045: ['    printf ( STRING , ID [ ID ] ) ; ', '  ID  undeclared '], 6046: ['        printf ( STRING , * ( ID + ID ) )', ' expected  ;  before  }  token'], 6047: ['    int ID , ID ;', '  ID  redeclared as different kind of symbol'], 6048: ['  else if ( abs ( ID ) == abs ( ID ) ) printf ( STRING ) ; ', '  else  without a previous  if '], 6049: ['\tfloat ID = CONST', ' expected  ,  or  ;  before  float '], 6050: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 6051: ['else ( ID > ID && ID > ID && ID > ID )', ' expected  ;  before  ID '], 6052: ['printf ( STRING , ID ( ID [ ] , ID ) ) ;', ' expected expression before  ]  token'], 6053: ['\tscanf ( STRING , ID , & ID , & ID , ID )', ' expected  ;  before  for '], 6054: ['    scanf ( STRING , ID )', ' expected  ;  before  printf '], 6055: ['    ID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 6056: ['    ID = ( int * * ) ID ( ID * ID ( int * ) ) ;', ' expected expression before  int '], 6057: ['\tfor ( ID = CONST ; ID < ID [ ] ; ID ++ ) {', ' expected expression before  ]  token'], 6058: ['\tID = putchar ( ID ) ;', '  ID  undeclared '], 6059: ['    return ID ;', ' incompatible types when returning type  R *  {aka  struct range * } but  ID  {aka  struct range } was expected'], 6060: ['scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 6061: ['\tfor ( int ID = CONST ; ID < CONST ; CONST ++ ) {', ' lvalue required as increment operand'], 6062: [' int ID , ID = CONST , ID = CONST , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 6063: ['   ID = ( ID * ID + ID * ID * ID * ID ) ^ CONST / CONST ;', '  ID  undeclared '], 6064: ['            if ( ID > ID )', '  ID  undeclared '], 6065: ['        ID [ ID ] = ID [ ID - CONST - ID ] ;', '  ID  undeclared '], 6066: ['ID = ID + ID', ' expected  ;  before  }  token'], 6067: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 6068: ['\tID [ ID ] = CHART ;', '  ID  undeclared '], 6069: ['printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  ID '], 6070: ['\t        if ( ( ID [ ID + CONST ] >= CHARST ) && ( ID [ ID + CONST ] <= CHARST ) ) { ID = ID + CONST ; } } }', '  ID  undeclared '], 6071: ['    printf ( STRING , ID -> ID ) ;', ' invalid type argument of  ->  '], 6072: ['\twhile ( ! ID ) )', ' expected statement before  )  token'], 6073: ['    if ( ID == CONST ) { printf ( STRING ) ; }', '  ID  undeclared '], 6074: ['    ID > CONST || ID = CONST ;', ' lvalue required as left operand of assignment'], 6075: ['    printf ( STRING , ID , ID , ID , CONST , CONST CONST , ID , ID ) ;', ' expected  )  before numeric constant'], 6076: ['   else if {', ' expected  (  before  {  token'], 6077: ['\t        if ( ID [ ID ] == CHARST || ID [ ID ] = STRING )', ' lvalue required as left operand of assignment'], 6078: ['\t    else printf ( STRING )', ' expected  ;  before  return '], 6079: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6080: ['  ID ( ID , ID , CONST , ID , ID [ ] ) ;', ' expected expression before  ]  token'], 6081: ['\t            printf ( STRING , ID )', ' expected  ;  before  }  token'], 6082: ['}', ' expected identifier or  (  before  }  token'], 6083: ['\t    for ( ID = CONST ; ID = < ID ; ID ++ ) {', ' expected expression before  <  token'], 6084: ['   ID = ID * ( * ( ID + ID ) )', ' expected  ;  before  printf '], 6085: ['    ID ( ID ID ) ;', ' expected expression before  ID '], 6086: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 6087: ['        ID [ ID ] = ID [ ID ] + CHARST - CHARST', ' expected  ;  before  }  token'], 6088: ['}', ' expected declaration or statement at end of input'], 6089: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 6090: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 6091: ['    # CHARST CONST ;', ' invalid preprocessing directive # j '], 6092: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 6093: ['\t    ID ++', ' expected  ;  before  if '], 6094: ['      return ID ( ID - CONST , ID )', ' expected  ;  before  }  token'], 6095: ['void ID ( ID * ID , int ID )', ' unknown type name  ID ; did you mean  ID ?'], 6096: ['  printf ( STRING , * ( ID + ID ) ) ;', '  ID  undeclared '], 6097: ['else ( CHARST <= ID <= CHARST ) {', ' expected  ;  before  {  token'], 6098: ['        while ( * ID [ ID ] != STRING )', ' invalid type argument of unary  *  '], 6099: ['\tfor ( ID = CONST ; ID < ID < ID ++ ) {', ' expected  ;  before  )  token'], 6100: ['        ID [ ID ] = ID ( ID [ ID ] + CONST , ID [ ID ] )', ' expected  ;  before  }  token'], 6101: ['printf ( CHARST ID ID ID ID STRING . ) ;', ' expected  )  before  ID '], 6102: ['    char ID = CHARST', ' expected  ,  or  ;  before  printf '], 6103: ['\tID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6104: ['\tID ID ( ID ) ;', ' unknown type name  ID '], 6105: ['\t    ID ++', ' expected  ;  before  }  token'], 6106: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 6107: ['   scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 6108: ['        for ( ID = CONST ; ID != ID , ID ++ ) {', ' expected  ;  before  )  token'], 6109: ['}', ' expected declaration or statement at end of input'], 6110: ['        else if ( ID [ ID ] [ CONST ] == ID . ID ) {', ' invalid operands to binary == '], 6111: ['        } printf ( STRING )', ' expected  ;  before  }  token'], 6112: ['    else ( CHARST <= ID && ID <= CHARST )', ' expected  ;  before  printf '], 6113: ['  printf ( STRING , ID )  ', ' expected  ;  before  return '], 6114: ['    printf ( STRING )', ' expected  ;  before  }  token'], 6115: ['    if ( ID == CHART || ID == - CONST || ID == CHARNST )', ' empty character constant'], 6116: ['\telse printf ( STRING ) ; printf ( STRING , ID ( CHARST ) )', ' expected  ;  before  return '], 6117: ['\t        printf ( STRING , ID )', ' expected  ;  before  else '], 6118: ['             return int ID ;', ' expected expression before  int '], 6119: ['        for ( ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 6120: ['        if ( ID [ ID - CONST ] == CONST ) {', '  ID  undeclared '], 6121: ['        ID = ID + ID ;', '  ID  undeclared '], 6122: ['     { scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  for '], 6123: ['       if ( ID [ ID ] == ID ) { ID = ID', ' expected  ;  before  }  token'], 6124: ['}', ' expected declaration or statement at end of input'], 6125: ['           printf ( STRING )', ' expected  ;  before  }  token'], 6126: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 6127: ['ID ( CONST )', ' expected  ;  before  return '], 6128: ['    else ( ID % CONST != CONST )', ' expected  ;  before  {  token'], 6129: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 6130: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6131: ['\tint ID [ ] [ CONST ] ;', ' array size missing in  ID '], 6132: ['\t    printf ( STRING , * ( ID + ID ) )', ' expected  ;  before  }  token'], 6133: ['    ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 6134: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 6135: [' ID . ID = ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 6136: ['    ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 6137: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 6138: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 6139: ['    int ID , ID , ID = CONST , ID = CONST , ID = CONST , ID , ID = CONST ;', ' redeclaration of  ID  with no linkage'], 6140: ['if ( ID ( ID ) == CONST && ID ( ID ) == CONST && ID + ID < CONST * ID && ID + CONST = ID )', ' lvalue required as left operand of assignment'], 6141: ['    for ( int ID = CONST ; ID <= CONST , ID ++ ) {', ' expected  ;  before  )  token'], 6142: ['        }              ', ' expected identifier or  (  before  }  token'], 6143: ['ID ( ID , ID , ID )', ' expected  ;  before  return '], 6144: ['\t    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 6145: ['             for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 6146: ['    ID = ID + ID ( ID ) * ID ( ID - CONST - ID ) ; ', '  ID  undeclared '], 6147: ['    ID = ID ( ( ID - ID ) * ( ID - ID ) ) & + ( ( ID - ID ) * ( ID - ID ) ) ;', ' invalid operands to binary & '], 6148: ['printf ID [ ID ] ;', ' expected  ;  before  ID '], 6149: ['\t    ID [ ID - CONST ] = ( ID >= ID && ID >= ID ) ? ID [ ID - ID ] + ID [ ID - ID ] + ID : ( if ( ID >= ID || ID < ID ) ? ID [ ID - ID ] + ID : ID [ ID - ID ] + ID ) ;', ' expected expression before  if '], 6150: ['      ID = ( int * ) ID ( ID * ID ( int ) ) ;', ' expected expression before  int '], 6151: ['        ID = ID * CONST + ID % CONST ;', ' expected expression before  =  token'], 6152: ['      ID ( ID , CONST , ID )', ' expected  ;  before  }  token'], 6153: ['        printf ( STRING ) ;`', ' stray  `  in program'], 6154: ['    printf ( STRING , ID ( ID ) ) ;', ' too few arguments to function  ID '], 6155: ['  ID = ID + ( ID * ID * ID ) / CONST', ' expected  ;  before  return '], 6156: ['printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 6157: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 6158: ['\telse ( ID = CONST )', ' expected  ;  before  printf '], 6159: ['    printf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 6160: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 6161: ['\tID == CHART', ' expected  ;  before  }  token'], 6162: ['\tID = gets ( ) ;', ' too few arguments to function  gets '], 6163: ['\t    ID [ ID + CONST ] = ID [ ID ] ;', ' assignment to expression with array type'], 6164: ['        goto CONST ;', ' expected identifier or  *  before numeric constant'], 6165: ['        ID = ID * ID - ID + CONST', ' expected  ;  before  if '], 6166: ['\tfor ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 6167: ['\tprintf ( STRING )', ' expected  ;  before  return '], 6168: ['int ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  int "], 6169: ['\tif ( ID == CONST && ID = CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 6170: ['\t    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 6171: ['return CONST', ' expected  ;  before  }  token'], 6172: ['            ID ( ID + CONST , ID , ID + CONST , CONST ) ;', '  ID  undeclared '], 6173: ['\tprintf ( STRING . ID ) ;', ' request for member  ID  in something not a structure or union'], 6174: ['        & ( ( ID + ID ) -> ID ) = ( int * ) malloc ( CONST * sizeof ( int ) ) ;', ' lvalue required as left operand of assignment'], 6175: ['printf = ( STRING , ID , ID , ID , ID , ID ) ;', ' lvalue required as left operand of assignment'], 6176: ['    char CHARST = CONST ;', ' expected identifier or  (  before  j '], 6177: ['    printf ( STRING )', ' expected  ;  before  return '], 6178: ['int ID [ ID ] , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 6179: ['        ID = ID + ID [ ID ] ;', '  ID  undeclared '], 6180: ['          else ( ID == CONST )', ' expected  ;  before  {  token'], 6181: ['\t\t    ID ( ID [ ] [ CONST ] , ID , ID ) ;', ' expected expression before  ]  token'], 6182: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 6183: ['    if ( ID % CONST ! CONST ) {', ' expected  )  before  !  token'], 6184: ['\t        ID [ ID ] [ ID ] = ID [ ID - CONST - ID ] [ ID ] ;', '  ID  undeclared '], 6185: ['    for ( ID = CONST ; ID < CONST ; ID = ID + ID ( ID - CONST ) ) {', ' called object  ID  is not a function or function pointer'], 6186: ['}', ' expected declaration or statement at end of input'], 6187: ['    { while ( ID [ ID ] > ID [ ID ] )', ' subscripted value is neither array nor pointer nor vector'], 6188: ['}', ' expected declaration or statement at end of input'], 6189: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 6190: ['  scanf ( STRING ID ) ;', ' expected  )  before  ID '], 6191: ['        ID [ ( ID . ID ) - CONST ] [ ( ID . ID ) CONST ] = CONST ;', ' expected  ]  before numeric constant'], 6192: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 6193: ['\treturn CONST ;', ' expected declaration or statement at end of input'], 6194: ['\t    for ( ID = ID ; ID != ID && ID < ( ID + ID ) ; ID ++ )', '  ID  undeclared '], 6195: ['\t     ID --   ', ' expected  ;  before  }  token'], 6196: ['        ID += ID ( ID + CONST , ID + ID [ ID ] , ID - ID [ ID ] ) ; ', '  ID  undeclared '], 6197: ['\t        printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 6198: ['    ( * ID ) . ID = { CONST , CONST } ;                                ', ' expected expression before  {  token'], 6199: ['\tID ( ID [ ] [ CONST ] , ID [ ] [ CONST ] , ID [ ] [ CONST ] ) ;', ' expected expression before  ]  token'], 6200: ['    while ( ID [ ID ] != / CONST ) {', ' expected expression before  ID  token'], 6201: ['\tfor ( ID = ID ; ID < ID / CONST ; ID ++ )', '  ID  undeclared '], 6202: ['\tif ( ID ( ID - CONST ) == ID )', '  ID  undeclared '], 6203: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 6204: ['\tif ( ID * ID = ID * ID ) {', ' lvalue required as left operand of assignment'], 6205: ['\t    scanf ( STRING , ID + ID )', ' expected  ;  before  }  token'], 6206: ['    return ID ( ID + CONST , ID - CONST ) ;', ' too few arguments to function  ID '], 6207: ['  else {', '  else  without a previous  if '], 6208: ['        ID = ID ( ID , CONST , CONST ) ;', ' too many arguments to function  ID '], 6209: ['        if ( ID < CONST && ID = CHARST ) continue ;', ' lvalue required as left operand of assignment'], 6210: ['\t{ printf ( STRING ) }', ' expected  ;  before  }  token'], 6211: ['    ID -> ID = ID ;', ' invalid type argument of  ->  '], 6212: ['     default : CONST    ', ' expected  ;  before  }  token'], 6213: ['        scanf ( STRING )', ' expected  ;  before  }  token'], 6214: ['            ` ID = CONST ;', ' stray  `  in program'], 6215: ['      scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 6216: ['    ID = ID ( char * ID ) ;', ' expected expression before  CHAR '], 6217: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 6218: ['}', ' expected declaration or statement at end of input'], 6219: [' int ID ( int ID , int ID , int ID ) ;', ' expected identifier or  (  before  {  token'], 6220: ['}', ' expected declaration or statement at end of input'], 6221: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6222: ['    ID ( ID , ID , ID - CONST )', ' expected  ;  before  return '], 6223: ['    ID = ID [ ID + CONST ] ;', '  ID  undeclared '], 6224: ['        switch ( ID ) {', '  ID  undeclared '], 6225: ['    int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  printf "], 6226: ['    if ( ID - ID = CONST )', ' lvalue required as left operand of assignment'], 6227: ['\tscanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 6228: ['scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 6229: ['        ID ( ID , ID , ID )', ' expected  ;  before  printf '], 6230: ['      ID ( ID + CONST ,  ID + ID [ ID ] ,  ID ) ;', ' expected expression before  ||  token'], 6231: ['}`                                  ', ' stray  `  in program'], 6232: ['}', ' expected declaration or statement at end of input'], 6233: ['\tscanf ( STRING , ID [ ] ) ;                    ', ' expected expression before  ]  token'], 6234: ['        if ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) = ID * ID )', ' lvalue required as left operand of assignment'], 6235: ['}', ' expected declaration or statement at end of input'], 6236: ['    int ID = ID ( char ID ) ;', ' expected expression before  CHAR '], 6237: ['printf ( STRING )', ' expected  ;  before  printf '], 6238: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 6239: ['    else {', '  else  without a previous  if '], 6240: ['              if ( ( ID % ID ) != = CONST )', ' expected expression before  =  token'], 6241: [' int ( ) {', ' expected identifier or  (  before  )  token'], 6242: ['printf ( STRING )', ' expected  ;  before  return '], 6243: ['    ID ( CONST , CONST , CONST )', ' expected  ;  before  printf '], 6244: [' int ID = ID ( ID [ ] , CONST , ID - CONST ) ;', ' expected expression before  ]  token'], 6245: ['\t    ID [ ID ] = ID [ ID ++ ]', ' expected  ;  before  printf '], 6246: ['\t    ID = ID ;', '  ID  undeclared '], 6247: ['                ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 6248: ['\tprintf ( STRING , ID ( ID , ID - CONST , ID - CONST , CONST ) ) ;', ' too few arguments to function  ID '], 6249: ['\tprintf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 6250: ['    int ID = CONST', ' expected  ,  or  ;  before  scanf '], 6251: ['for ( ID = ; ID < ID ; ID ++ )', ' expected expression before  ;  token'], 6252: ['\t        else printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 6253: ['ID = ( ( CONST ) / ( CONST ) * ( ID * ( ID - ID ) ) + ( ID * ( ID - ID ) ) + ( ID * ( ID - ID ) ) ) ;', '  ID  undeclared '], 6254: ['printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 6255: ['\tfloat ID = ID ( CONST + ( ( ID * ID ) / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 6256: ['        if ( ID [ ID ] == CHARST )', '  ID  undeclared '], 6257: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 6258: ['for ( ID = ID ; <= ID ; ID ++ )', ' expected expression before  <=  token'], 6259: ['    {   printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 6260: ['    else  ( ID >= CHARST && ID <= CHARST )', ' expected  ;  before  {  token'], 6261: ['\t        printf ( STRING , ID [ CONST ( ID + CONST ) ] ) ;', ' called object is not a function or function pointer'], 6262: ['    if ( ID - ID / ID - ID = ID - ID / ID - ID ) {', ' lvalue required as left operand of assignment'], 6263: ['printf ( STRING )', ' expected  ;  before  return '], 6264: ['}', ' expected declaration or statement at end of input'], 6265: ['        ID ( ID , ID , CONST , CONST , CONST )', ' expected  ;  before  }  token'], 6266: ['if ( ID == ID == ID <= ) printf ( STRING , ID ) ;', ' expected expression before  )  token'], 6267: ['}', ' expected declaration or statement at end of input'], 6268: ['    else ( )', ' expected expression before  )  token'], 6269: ['puts ( ID [ CONST ] )', ' expected  ;  before  return '], 6270: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 6271: ['        ID = ID + double ( ID ( - CONST , ID ) ) * ID ( ID , CONST * ID ) / ID ( CONST * ID ) ;    ', ' expected expression before  double '], 6272: ['\t    ID ( ID , ID ) = ID [ ID ] ;', ' lvalue required as left operand of assignment'], 6273: ['\tfor ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 6274: ['    ID ( ID , ID ) ;', ' too few arguments to function  ID '], 6275: ['\t            printf ( STRING ) :', ' expected  ;  before  :  token'], 6276: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6277: ['\t            ID [ ID ] = ID ( ID ( CONST + ID [ ID ] ) , CONST ) ;        ', ' too few arguments to function  ID '], 6278: ['}', ' expected declaration or statement at end of input'], 6279: ['}', ' expected declaration or statement at end of input'], 6280: ['}', ' expected declaration or statement at end of input'], 6281: ['    printf ( STRING , ID , ID , ID , ID , ) ;                                            ', ' expected expression before  )  token'], 6282: ['if ( ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 6283: ['} printf ( STRING )', ' expected  ;  before  for '], 6284: ['        ID = ID [ ID + CONST ]', ' expected  ;  before  }  token'], 6285: ['void ID ( int ID [ ] [ ID ] , int ID [ ] [ ID ] , int ID [ ] [ ID ] , )', ' expected declaration specifiers or  ...  before  )  token'], 6286: ['        else if { ID = CONST ; break ; }', ' expected  (  before  {  token'], 6287: ['}', ' expected declaration or statement at end of input'], 6288: ['        ID = ID + CONST', ' expected  ;  before  ID '], 6289: ['    while ( )', ' expected expression before  )  token'], 6290: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 6291: ['    ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 6292: ['        ID = ID ( int ID ) ;', ' expected expression before  int '], 6293: ['\tscanf ( STRING ID ) ;', ' expected  )  before  ID '], 6294: ['   printf ( STRING , ID ) ;', '  ID  undeclared '], 6295: ['\t    if ( ID == CONST ) ID = CONST ; if ( ID == CONST ) ID = CONST', ' expected  ;  before  printf '], 6296: [' printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 6297: ['            if ( ( ID [ ID + ID + ID ] ) + ( ID [ ID + ID + ID ] ) != CONST ) {', ' invalid operands to binary + '], 6298: ['                if ( ID [ ID ] == ID [ ID ] ) {', '  ID  undeclared '], 6299: ['    ID = STRING ;', '  ID  undeclared '], 6300: ['    ID ( ID , ID , CONST , ID ) ;', ' too few arguments to function  ID '], 6301: ['    return ID', ' expected  ;  before  }  token'], 6302: ['printf ( STRING ID STRING ) ;\t', ' expected  )  before  ID '], 6303: ['    float ID = ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ;', ' invalid operands to binary ^ '], 6304: ['\tfor ( int ID = CONST ; ID < ID )', ' expected  ;  before  )  token'], 6305: ['        ID [ ID ] = ID', ' expected  ;  before  }  token'], 6306: ['\tscanf ( STRING , ID , % ID , & ID , & ID ) ;', ' expected expression before  %  token'], 6307: ['\telse ( ID / ID == ID / ID && ID == ID )', ' expected  ;  before  {  token'], 6308: ['    if ( ID == ( CONST ID - CONST ) ) { return CONST ; }                                  ', ' invalid suffix "n" on integer constant'], 6309: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 6310: ['    ID = ( char ) * malloc ( ID * sizeof ( char ) ) ;', ' invalid use of void expression'], 6311: ['\t     if ( ID == CONST )', '  ID  undeclared '], 6312: ['\tprintf ( STRING )', ' expected  ;  before  return '], 6313: ['printf ( STRING , ID )', ' expected  ;  before  if '], 6314: ['            ID = ID % CONST', ' expected  ;  before  }  token'], 6315: ['}', ' expected declaration or statement at end of input'], 6316: ['        ID = ID ( ID , ID ) ;', '  ID  undeclared '], 6317: ['}', ' expected declaration or statement at end of input'], 6318: ['    scanf ( STRING , & ID , & ID , & ID , & ID )                            ', ' expected  ;  before  if '], 6319: ['\tfor', ' expected  (  before  return '], 6320: ['}', ' expected declaration or statement at end of input'], 6321: ['\t    ID = ID + ( * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 6322: ['    if ( ID + ID [ ID ] == ( ID / CONST ) )', ' invalid operands to binary / '], 6323: ['    void ID ( ID , CONST ) ;', ' expected  )  before numeric constant'], 6324: ['} }', ' expected declaration or statement at end of input'], 6325: ['\tint ID = CONST ;  ID = CONST ;', '  ID  undeclared '], 6326: ['\t    printf ( STRING , ID [ CONST ] [ CONST ] )', ' expected  ;  before  for '], 6327: ['\tID = ID - ID', ' expected  ;  before  scanf '], 6328: ['\t \tID = ( ID - ID )   ', ' expected  ;  before  }  token'], 6329: ['  }', ' expected declaration or statement at end of input'], 6330: ['\tID = ( ID - ID ) ( ID * ID ) / ( ID * ID - ID * ID ) ;', ' called object is not a function or function pointer'], 6331: ['        for ( int ID = CONST ; ID <= ID / CONST ; ID ++ )', '  ID  undeclared '], 6332: ['    for ( ID = CONST ; ID <= ID ; ID ++ )', ' expected expression before  }  token'], 6333: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 6334: ['    printf ( STRING , ID [ ] )', ' expected expression before  ]  token'], 6335: ['{         scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 6336: ['    if ( ID == ID ) return CONST ;', '  ID  undeclared '], 6337: ['        ( ID + ID ) = ( ID + ID - CONST - ID ) ;', ' lvalue required as left operand of assignment'], 6338: ['    scanf ( STRING , & ID , & ID , ID , ID ) ;', '  ID  undeclared '], 6339: ['    printf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  }  token'], 6340: ['if ( ( ID * ID != ID * ID ) && ) { ID = ( ( CONST / ID ) - ( CONST / ID ) ) / ( ( CONST / ( ID * ID ) ) - ( CONST / ( ID * ID ) ) ) ;', ' expected expression before  )  token'], 6341: ['\tprintf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 6342: ['            for ( int ID = ID + CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 6343: ['    ID = ( struct ID * ) calloc ( , sizeof ( struct ID ) ) ;', ' expected expression before  ,  token'], 6344: ['    ID ( ID , ID + ID ) ;', ' too few arguments to function  ID '], 6345: ['\t    printf ( STRING break ) ;', ' expected  )  before  break '], 6346: ['printf ( STRING )    ', ' expected  ;  before  return '], 6347: ['            printf ( STRING , ID ) ;', '  ID  undeclared '], 6348: ['    ID ( ID , ID , ID ) ;', '  ID  undeclared '], 6349: ['\tfloat ID = CONST / CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6350: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 6351: ['            CHARST = ID + CHARST - CHARST ;', ' lvalue required as left operand of assignment'], 6352: ['\tscanf ( STRING , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 6353: ['    for ( ID = ( CONST + ID [ CONST ] ) ; ID > ( CONST + ID [ CONST ] + ID [ CONST ] ) )', ' expected  ;  before  )  token'], 6354: ['        while ( ( ID < CONST ) ) )', ' expected statement before  )  token'], 6355: ['    else  ( ID * ID < ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) )', ' expected  ;  before  {  token'], 6356: ['     printf ( STRING , ID ) ;', '  ID  undeclared '], 6357: ['    int ID , ID , ID , ID , ID = CONST , ID = CONST , ID , ID , ID , ID , ID = CONST , ID = CONST , ID = ID ;', '  ID  undeclared '], 6358: ['\t    if ( ID [ ID ] = < CHARST && ID [ ID ] >= CHARST ) {', ' expected expression before  <  token'], 6359: ['printf ( STRING , ID )', ' expected  ;  before  return '], 6360: ['\tprintf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 6361: ['ID = CONST ID / CONST ;', ' invalid suffix "a" on integer constant'], 6362: ['\t    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 6363: ['     ID ++ ;', '  ID  undeclared '], 6364: ['    int ID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 6365: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 6366: ['# ID < ID . ID >', ' invalid preprocessing directive #inculde; did you mean #include?'], 6367: ['   if ( ID ( ID ) == CONST && ID ( ID - ID ) == CONST ) ) {', ' expected statement before  )  token'], 6368: ['ID = ( struct ID ) * malloc ( CONST * sizeof ( struct ID ) ) ;', ' invalid use of void expression'], 6369: ['  printf ( STRING )', ' expected  ;  before  return '], 6370: ['                            printf ( STRING , CONST , ID , ID )', ' expected  ;  before  }  token'], 6371: ['     ID = ( int * ) malloc ( sizeof ( int ) * ( ID . ID + ID . ID ) )                                ', ' expected  ;  before  for '], 6372: ['\tfloat ID = CONST / CONST ( ID - CONST ) + CONST ;', ' called object is not a function or function pointer'], 6373: ['}', ' expected declaration or statement at end of input'], 6374: ['\t        ID ( ID , ID , ID + CONST )', ' expected  ;  before  }  token'], 6375: ['    else if ( ID == ( ID - CONST ) && ID == ( ID - CONST ) ) {', '  else  without a previous  if '], 6376: ['\t    ID = ID ( ID , ID ) ;', ' assignment to expression with array type'], 6377: ['        ID [ ID ] . ID . ID = - CONST ;', '  list_entries[i].head  is a pointer; did you mean to use  -> ?'], 6378: ['    printf ( STRING , , STRING , ID , ID ) ;', ' expected expression before  ,  token'], 6379: ['            scanf ( STRING , * ID [ ID ] [ ID ] ) ; ;', ' invalid type argument of unary  *  '], 6380: ['    printf ( STRING )', ' expected  ;  before  }  token'], 6381: ['      ID = ID [ CONST ] ;', '  ID  undeclared '], 6382: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 6383: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6384: ['float CHART = CONST ;', ' expected identifier or  (  before  \\x7069 '], 6385: ['char ID ( ID [ ] ) {', ' unknown type name  ID '], 6386: ['\t        if ( ID = < ID )', ' expected expression before  <  token'], 6387: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 6388: ['else if', ' expected  (  before  {  token'], 6389: ['                ID [ ID ] = ID', ' expected  ;  before  }  token'], 6390: ['if ( ID == ID == ID || ID == ID == ID = CONST ) {', ' lvalue required as left operand of assignment'], 6391: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 6392: ['    { printf ( STRING ) }', ' expected  ;  before  }  token'], 6393: ['      printf ( STRING , * ID ) ;', ' invalid use of void expression'], 6394: ['\twhile ( ID != ID )', '  ID  undeclared '], 6395: ['    ID = getchar ( )', ' expected  ;  before  while '], 6396: ['  printf ( STRING )', ' expected  ;  before  else '], 6397: ['\tprintf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 6398: ['   ID = CONST ;', '  ID  undeclared '], 6399: ['            printf ( STRING   ID [ ID ] [ ID ] , ID , ID ) ;', ' expected  )  before  ID '], 6400: ['\tfor ( ID = CONST ; ID >= CONST ; ID = ID - CONST ) { printf ( STRING , ID ) } {', ' expected  ;  before  }  token'], 6401: ['   else ID ( STRING )', ' expected  ;  before  }  token'], 6402: ['    ID [ ID ] [ CONST ] = ID [ ID ] [ CONST ]', ' expected  ;  before  }  token'], 6403: ['    printf ( STRING , ID ( ID [ ] , ID ) ) ;', ' expected expression before  ]  token'], 6404: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 6405: ['            ID = ID + CONST', ' expected  ;  before  break '], 6406: ['                    printf ( STRING )', ' expected  ;  before  }  token'], 6407: ['\t{ ID [ ID ] = CONST }', ' expected  ;  before  }  token'], 6408: ['   printf ( STRING , ID ( ID [ ] [ CONST ] , CONST ) ) ;', ' expected expression before  ]  token'], 6409: ['\tID ++', ' expected  ;  before  return '], 6410: ['        ID ( ID , CONST , CONST , CONST ) ;', ' too many arguments to function  ID '], 6411: ['\t  ID = ID -> ID', ' expected  ;  before  }  token'], 6412: ['}', ' expected declaration or statement at end of input'], 6413: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 6414: ['    ID ( ID + CONST , ID , ID - CONST )', ' expected  ;  before  }  token'], 6415: ['        while ( ( ID == CHARST ) || ( ID == CHARST ) || ( ID == CHARST ) || ( ID == CHARST ) || ( ID == CHARST ) )', ' expected  ;  before  break '], 6416: ['   ID = CONST', ' expected  ;  before  scanf '], 6417: ['    printf ( STRING )', ' expected  ;  before  return '], 6418: ['\twhile ( getchar ( ID ) != ID ) {', ' too many arguments to function  getchar '], 6419: ['        printf ( STRING , CHARST + CONST )', ' expected  ;  before  ID '], 6420: ['        ID ++', ' expected  ;  before  }  token'], 6421: ['\tfloat ID = ID * ID * ID', ' expected  ,  or  ;  before  printf '], 6422: ['     if ( * ( ID + ID ) >= * ( ID + ID - CONST ) )', ' expected expression before  int '], 6423: ['}', ' expected declaration or statement at end of input'], 6424: ['\t       printf ( STRING , ID [ ID ] ) ; ', '  ID  undeclared '], 6425: [' return ID ( ID + CONST , ID + ID [ ID ] , ID ) || ID ( ID + CONST , ID , ID + ID [ ID ] )', ' expected  ;  before  }  token'], 6426: ['   for ( ID = ID + CONST ; ID < ID - ID ; ID ++ )', '  ID  undeclared '], 6427: ['    else', '  else  without a previous  if '], 6428: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 6429: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 6430: ['\t        ID [ ID ] = ID ( ID , ID , ID + ID )', ' expected  ;  before  ID '], 6431: ['   else ( CHARST < ID && ID < CHARST )', ' expected  ;  before  {  token'], 6432: ['      ID = ID [ CONST ]', ' expected  ;  before  for '], 6433: ['    return CONST ;', ' incompatible types when returning type  int  but  ID  {aka  struct birth_data } was expected'], 6434: ['    ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 6435: ['    { for ( ID = CONST ; ID < ID + ID && ID < ID + ID && ID < ID + ID && ID <= ID ; ID = ID + CONST ) ;', '  ID  undeclared '], 6436: ['    printf ( STRING , ID [ ID ] ) ; }', '  ID  undeclared '], 6437: ['    else if', ' expected  (  before  {  token'], 6438: ['    ID = ID ( ID )', ' expected  ;  before  printf '], 6439: ['int main ( ) {', ' two or more data types in declaration specifiers'], 6440: ['} return CONST ;', ' expected identifier or  (  before  return '], 6441: ['\t    ID ++', ' expected  ;  before  }  token'], 6442: ['\tfor ( ID = ID - CONST ; ID < CHARST ; ID = ID - CONST ) {', '  ID  undeclared '], 6443: ['    int ID = ID * ID ;', ' conflicting types for  ID '], 6444: ['\tif ( ID == CONST )', '  ID  undeclared '], 6445: ['}', ' expected declaration or statement at end of input'], 6446: ['  printf ( STRING )', ' expected  ;  before  }  token'], 6447: ['    scanf ( STRING , & ID , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 6448: ['        for ( ID = ID - ID ; ID >= CONST ; ID -- )', '  ID  undeclared '], 6449: [' scanf ( STRING , & ID , & ID , % ID , % ID ) ;', ' expected expression before  %  token'], 6450: ['\t    ID ++', ' expected  ;  before  }  token'], 6451: ['     printf ( STRING ID + ID ) ;', ' expected  )  before  ID '], 6452: ['    if ( ID != CONST )', '  ID  undeclared '], 6453: ['\tscanf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 6454: ['\t       printf ( STRING )', ' expected  ;  before  }  token'], 6455: ['    if ( ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 6456: ['    printf ( STRING )', ' expected  ;  before  }  token'], 6457: ['  }', ' expected  ; , identifier or  (  before  struct '], 6458: ['}', ' expected declaration or statement at end of input'], 6459: ['                    if ( ID [ ID ] [ ID ] != ( - ID [ ID + ID - ID ] [ ID + ID - ID ) )', ' expected  ]  before  )  token'], 6460: ['int ID = CONST', ' expected  ,  or  ;  before  ID '], 6461: ['  printf ( STRING , ID )', ' expected  ;  before  return '], 6462: ['    while ( ( ID [ ID ] !=\\ CONST ) && ( ID < CONST ) ) {', ' stray  \\  in program'], 6463: ['\tID ( ID [ ] [ ID ] , ID , ID ) ;', ' expected expression before  ]  token'], 6464: ['\telse if', ' expected  (  before  {  token'], 6465: ['    ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 6466: ['\t        if ( ID = ( CONST | CONST ) && ID = ( CONST | CONST | CONST | CONST | CONST | CONST | CONST ) )', ' lvalue required as left operand of assignment'], 6467: ['ID ( ID [ CONST ] [ CONST ] , ID , ID ) ;', ' subscripted value is neither array nor pointer nor vector'], 6468: ['            ID ( ID , ID + CONST ) ;', ' too few arguments to function  ID '], 6469: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 6470: ['        while ( ID [ ID ] != CHART )', '  ID  undeclared '], 6471: ['    ID . ID = CONST', ' expected  ;  before  printf '], 6472: ['    int ID , ID = CONST , ID ;', '  ID  redeclared as different kind of symbol'], 6473: ['   char ID = ID ;', '  ID  undeclared '], 6474: ['            {   ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 6475: ['\telse if ( ID == CONST && ID == CONST ) {', '  else  without a previous  if '], 6476: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 6477: ['scanf ( STRING , & ID , & ID , ) ;', ' expected expression before  )  token'], 6478: ['    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 6479: ['    float ID = ID ^ CONST * ID ;', ' invalid operands to binary ^ '], 6480: ['            for ( int ID = CONST ; ID < ID ; ID ++ ) printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 6481: ['            printf ( STRING ( * ( ID + ID ) + ID ) -> ID , ( * ( ID + ID ) + ID ) -> ID ) ;', ' called object is not a function or function pointer'], 6482: ['    else if ( int ID == CONST )  return CONST ;', ' expected expression before  int '], 6483: ['            if ( ID [ ID ] [ ID ] == CHARNST )', ' empty character constant'], 6484: ['    }', ' expected declaration or statement at end of input'], 6485: ['    ID ( ) ;', ' too few arguments to function  ID '], 6486: ['\tID = ID - CHARST + CONST', ' expected  ;  before  printf '], 6487: ['\t    printf ( ) ;', ' too few arguments to function  printf '], 6488: [' ID = ID ( ID [ CONST ] , ID [ CONST ] , ID , ID ) ;', '  ID  undeclared '], 6489: ['    ID = ID ( ID ) ;', '  ID  undeclared '], 6490: ['scanf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 6491: [' scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 6492: ['\tfloat ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 6493: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 6494: ['    printf ( STRING . ID [ CONST ] ) ;', ' request for member  ID  in something not a structure or union'], 6495: ['            printf ( STRING ) ', ' expected  ;  before  }  token'], 6496: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 6497: ['\telse ( )', ' expected expression before  )  token'], 6498: ['    else return ( ( ID ( ID + CONST , ID + CONST , ID ) ) || ( ID ( ID + CONST , ID , ID + CONST ) ) )', ' expected  ;  before  }  token'], 6499: ['\tif ( ID ( ) )', ' too few arguments to function  ID '], 6500: ['    else if', ' expected  (  before  {  token'], 6501: ['   else', '  else  without a previous  if '], 6502: ['    ID [ ID [ ID ] , ID ] ;', ' array subscript is not an integer'], 6503: ['\t    printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  else '], 6504: ['        printf ( STRING , ID -> ID ) ;', '  ID  {aka  struct node } has no member named  ID '], 6505: ['char ID [ ] [ CONST ] = { STRING , STRING , STRING , STRING , STRING , STRING , STRING }', ' expected  ,  or  ;  before  int '], 6506: ['     for ( ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 6507: ['        ID = CONST', ' expected  ;  before  }  token'], 6508: ['\tprintf ( STRING , ID ( CONST , CHARST , ID ) ) ;', '  ID  undeclared '], 6509: ['    int ID ;', ' redeclaration of  ID  with no linkage'], 6510: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 6511: ['float ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6512: ['    printf ( STRING ID , ID [ ID - ID ] ) ;', ' expected  )  before  ID '], 6513: ['\t    for ( ID = ID ; ID ++ ) {', ' expected  ;  before  )  token'], 6514: ['ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6515: ['    gets ( ID [ ] ) ;', ' expected expression before  ]  token'], 6516: ['    return CONST', ' expected  ;  before  }  token'], 6517: ['        if ( ID ( ID [ ] , ID , ID [ ID ] ) == ID ) { printf ( STRING ) ; }', ' expected expression before  ]  token'], 6518: ['    struct ID * ID = ( struct ID * ) calloc ( CONST * sizeof ( struct ID ) ) ;', ' too few arguments to function  calloc '], 6519: ['\t    if ( ID [ ID ] == ID )', '  ID  undeclared '], 6520: ['\tif ( ( ID ! + ID ) && ( ID == ID ) ) {', ' expected  )  before  !  token'], 6521: ['\tprintf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 6522: ['    {   ID = CONST ;', '  ID  undeclared '], 6523: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 6524: ['\t    if ( ID [ ID ] == CHARST ) printf ( STRING , ID [ ID - CONST ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 6525: ['        ID ( ID [ CONST ] , ID [ CONST ] ) ;', ' too few arguments to function  ID '], 6526: ['printf ( STRING , ID )', ' expected  ;  before  return '], 6527: ['    scanf ID ;', ' expected  ;  before  ID '], 6528: ['\telse ( ID > ID )', ' expected  ;  before  printf '], 6529: ['        scanf ( STRING , & ( * ID + ID ) . ID ) ;', ' invalid operands to binary + '], 6530: ['int main', " expected  = , ',',  ; ,  asm  or  __attribute__  before  {  token"], 6531: ['        printf ( STRING , ID )', ' expected  ;  before  return '], 6532: ['    ( ( ID == ( ID [ CONST ] [ CONST ] - ID ) ) & CONST ( ID == ( ID [ CONST ] [ CONST ] + ID ) ) ) ||', ' called object is not a function or function pointer'], 6533: ['        printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 6534: ['    ID = ID + CHARST ;', '  ID  undeclared '], 6535: ['  for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 6536: ['    ID', ' expected  ;  before  return '], 6537: ['  scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 6538: ['        ID [ ID ] = ID', ' expected  ;  before  }  token'], 6539: ['return CONST', ' expected  ;  before  }  token'], 6540: ['    for ( ID = ( ID - CONST ) ; ID = > CONST ; ID -- )', ' expected expression before  >  token'], 6541: ['        ID --', ' expected  ;  before  ID '], 6542: ['\t         ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 6543: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 6544: ['\t    if ( ID > - CONST + ID && )', ' expected expression before  )  token'], 6545: ['\t            if ( ID [ ID ] = < CHARST && ID [ ID ] >= CHARST ) {', ' expected expression before  <  token'], 6546: ['        ID = ( ( ID / CONST ) - ( ID / CONST ) ) * CONST', ' expected  ;  before  ID '], 6547: ['\t        return CONST', ' expected  ;  before  }  token'], 6548: ['    for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 6549: ['    ID ( ID , ID , ID ) ; ', ' too many arguments to function  ID '], 6550: ['                else', ' expected expression before  }  token'], 6551: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 6552: ['    if ( ID % CONST == CONST ) && ( ID % CONST == CONST )', ' expected identifier before  (  token'], 6553: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 6554: ['}', ' expected declaration or statement at end of input'], 6555: ['      printf ( STRING ) }', ' expected  ;  before  }  token'], 6556: ['            printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 6557: ['         scanf ( STRING , & ID [ ID ] . ID , & ID [ ID ] . ID , & ID [ ID ] . ID )', ' expected  ;  before  }  token'], 6558: ['        if ( ID [ ID ] != CHARST )', '  ID  undeclared '], 6559: ['}', ' expected declaration or statement at end of input'], 6560: ['\tint ', ' expected identifier or  (  before  return '], 6561: ['\tfor ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 6562: ['\t        ID ++', ' expected  ;  before  }  token'], 6563: ['          printf ( STRING )', ' expected  ;  before  }  token'], 6564: ['}', ' expected  ; , identifier or  (  before  ID '], 6565: ['\t     for ( ID = CONST ; ID <= ( ID - ID + ) ; ID ++ )', ' expected expression before  )  token'], 6566: ['\tscanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 6567: ['\t    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 6568: ['                     ID ID ;', ' unknown type name  ID '], 6569: ['                    scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 6570: ['\tfor ( int ID = CONST ; ID = < ID ; ID ++ ) {', ' expected expression before  <  token'], 6571: ['\tint ID = CONST * CONST * CONST * CONST * CONST ;', ' conflicting types for  ID '], 6572: ['\t    if ( ID [ ID ] == . && ID < CONST )', ' expected expression before  .  token'], 6573: ['    ID = ( int * ) malloc * ( ID * ( sizeof ( int ) ) ) ;', ' invalid operands to binary * '], 6574: ['\telse if ( ID != CONST || CONST || CONST ) { printf ( STRING , ID ) ; }', '  ID  undeclared '], 6575: ['printf ( STRING , ID )', ' expected  ;  before  return '], 6576: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 6577: ['  return ID ( ID , ID , ID ++ , ID )', ' expected  ;  before  else '], 6578: ['\t    ID = getchar ( ID ) ;', ' too many arguments to function  getchar '], 6579: ['        ID ( ID , ID , ID + CONST ) ;', ' too many arguments to function  ID '], 6580: ['    }', ' expected identifier or  (  before  }  token'], 6581: ['    if ( CHARST <= ID <= CHARST || CHARST <= ID <= char CHARST )', ' expected expression before  CHAR '], 6582: [' printf ( STRING , ID [ ID ] ) ; ID ++ ;  } printf ( % STRING , ID ) ;', ' expected expression before  %  token'], 6583: ['\tscanf ( STRING STRING STRING STRING , & ID , & ID & ID & ID ) ;', ' invalid operands to binary & '], 6584: ['}', ' expected  ; , identifier or  (  before  int '], 6585: ['        return ID ( ID + CONST , ID + ID [ ID ] ) | ID ( ID + CONST , ID ) | ;', ' expected expression before  ;  token'], 6586: ['\telse {', '  else  without a previous  if '], 6587: ['        printf ( STRING )', ' expected  ;  before  else '], 6588: ['printf ( STRING , ID ) ; ', '  ID  undeclared '], 6589: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 6590: ['\tint ID , ID , ;', ' expected identifier or  (  before  ;  token'], 6591: ['int main ( ) { printf ( STRING , CONST * CONST * CONST )', ' expected  ;  before  return '], 6592: ['\t  printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 6593: ['   ID . ID = ( int * ) malloc ( ID * sizeof ( int ) )', ' expected  ;  before  ID '], 6594: ['    printf ( STRING )', ' expected  ;  before  return '], 6595: ['const double ID = CONST                                            ', ' expected  ,  or  ;  before  int '], 6596: ['\tfor ( ID = CONST ; ID <= ( CONST ID - CONST ) ; ID ++ ) {', ' invalid suffix "a" on integer constant'], 6597: ['     printf ( STRING , ID - CONST )', ' expected  ;  before  }  token'], 6598: ['}', ' expected identifier or  (  before  }  token'], 6599: ['        if ( ID [ ID ] == ID [ ID ] )', ' expected expression before  else '], 6600: ['\t    ( ( ( ID [ ID ] >= CONST ) && ( ID [ ID ] <= CONST ) ) || ( ( ID [ ID ] >= CONST ) && ( ID [ ID ] <= CONST ) ) || ( ( ID [ ID ] >= CONST ) && ( ID [ ID ] <= CONST ) ) )', ' expected  ;  before  }  token'], 6601: ['    int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 6602: ['scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 6603: ['        if ( ID == ID [ CONST ] && ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST ) )', '  ID  undeclared '], 6604: ['\twhile ( ID != CHART && ID != ID )                        ', '  ID  undeclared '], 6605: ['    ID += ( ! ( ID . ID - ID . ID ) ) * ( ID . ID - ID . ID )', ' expected  ;  before  ID '], 6606: ['        if ( ( ID [ ID ] == ID ) ||                ) {', ' expected expression before  )  token'], 6607: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before numeric constant'], 6608: ['}', ' expected  ; , identifier or  (  before  int '], 6609: ['        ID ++', ' expected  ;  before  }  token'], 6610: ['    float ID = ( ( float ) CONST / CONST ) ( ID + ID ) ;', ' called object is not a function or function pointer'], 6611: ['                       if ( ( ID != CONST ) ID < ID )', ' expected  )  before  ID '], 6612: ['printf ( STRING )', ' expected  ;  before  }  token'], 6613: ['    { printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 6614: ['\t   } printf ( STRING )', ' expected  ;  before  }  token'], 6615: ['  printf ( STRING )', ' expected  ;  before  }  token'], 6616: ['    ID ( CONST , ID , CONST , ID ) ;', '  ID  undeclared '], 6617: ['if ( ID + ID < ID = || ID + ID <= ID || ID + ID <= ID )', ' expected expression before  ||  token'], 6618: ['     ID ( ID , ID , ID )', ' expected  ;  before  return '], 6619: ['    ID = getchar ;', " incompatible types when assigning to type  float  from type 'int "], 6620: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 6621: ['\t        scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 6622: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 6623: ['            scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  ID '], 6624: ['            ID = ID ( ID [ ID ] , ID )', ' expected  ;  before  }  token'], 6625: ['\telse ( ID == CONST ) {', ' expected  ;  before  {  token'], 6626: ['\t    ID = ID - CONST', ' expected  ;  before  printf '], 6627: ['printf ( STRING , ID , ) ;', ' expected expression before  )  token'], 6628: ['   scanf ( STRING , & ID , & ID , & ID ) ;', '  ID  undeclared '], 6629: ['            if ( ID > ID ) printf ( STRING , ID - CONST ) ;', '  ID  undeclared '], 6630: ['\t        ( ID + ID ) = & ID [ ID ] [ ID ] ;', ' lvalue required as left operand of assignment'], 6631: ['\t    ID = ID [ ID ] ;', '  ID  undeclared '], 6632: ['printf ( STRING , -- - ID ) ;', ' lvalue required as decrement operand'], 6633: ['printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 6634: ['    printf ( STRING , ID ( ID , ID ) ) ;', ' invalid use of void expression'], 6635: ['    for ( ID = CONST ; ID < ID ; ID ++ ) { ID ++', ' expected  ;  before  if '], 6636: ['    int ID = ID [ CONST ] . ID ;', ' subscripted value is neither array nor pointer nor vector'], 6637: ['printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 6638: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 6639: ['\tscanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 6640: ['        ID ++', ' expected  ;  before  }  token'], 6641: ['\tID ( ID , ID [ ] ) ;', ' expected expression before  ]  token'], 6642: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 6643: ['         ID [ ID ] ++', ' expected  ;  before  printf '], 6644: ['\tID = ID', ' expected  ;  before  while '], 6645: ['  for ( ID = ID + CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 6646: ['\t        ID = CONST', ' expected  ;  before  while '], 6647: ['void ID ( int ID [ ] , int ID , ID )', ' unknown type name  ID '], 6648: ['ID = sqrt ( CONST / CONST * ID ) ;', '  ID  undeclared '], 6649: ['    printf ( STRING , ID ID ID ) ;', ' expected  )  before numeric constant'], 6650: ['\t       ID ++', ' expected  ;  before  }  token'], 6651: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 6652: ['    printf ( STRING )', ' expected  ;  before  return '], 6653: ['    ID = ID', ' expected  ;  before  return '], 6654: ['    ID = ( * ID ) malloc ( ID * sizeof ( int ) ) ;', ' expected  ;  before  malloc '], 6655: ['\twhile ( ID [ ID ] != ID )', ' expected  ;  before  printf '], 6656: ['    ID = CONST * ID ^ CONST ;', ' invalid operands to binary ^ '], 6657: ['float ID = ( CONST / CONST ) ID * ID * ID * ID ;', ' expected  ,  or  ;  before  ID '], 6658: ['\tprintf ( STRING , ID , ID , ) ;', ' expected expression before  )  token'], 6659: ['    scanf ( STRING , & ID )', ' expected  ;  before  printf '], 6660: ['printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 6661: ['    if ID > CONST {', ' expected  (  before  ID '], 6662: ['    for ( ID = CONST ; ID < ID < ; ID ++ )', ' expected expression before  ;  token'], 6663: ['    putchar ( ) ;', ' too few arguments to function  putchar '], 6664: ['\tfor ( ; ID !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 6665: ['else if {', ' expected  (  before  {  token'], 6666: ['  scanf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 6667: ['    for ( ID = ID ; ID >= ID && ID = < ID && ID > CONST && ID > CONST ; ID = ID + CONST )', ' expected expression before  <  token'], 6668: ['\tscanf ( STRING , ID )', ' expected  ;  before  printf '], 6669: ['    return ID [ ID - CONST ] ID ( ID , ID - CONST ) ;', ' expected  ;  before  ID '], 6670: ['\t     printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 6671: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 6672: ['\t    for ( ID = ID ; ID >= CONST , ID = ID - CONST )', ' expected  ;  before  )  token'], 6673: ['        if ( ID + CONST >= CHARST && ID + CONST <= CHARST ) ID = ID + CONST', ' expected  ;  before  else '], 6674: ['\tscanf ( STRING & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 6675: ['\tchar ID [ ] [ ] = { STRING , STRING , STRING , STRING , STRING , STRING , STRING } ;', ' array type has incomplete element type  char[] '], 6676: ['        else if ( ID [ ID ] == (\\ CONST ) )', ' stray  \\  in program'], 6677: ['\tID = ID ( CONST + ( ID * ID ) / CONST ) ;                                        ', ' called object  ID  is not a function or function pointer'], 6678: ['\tfor ( ID = CONST ; ID < ID - CONST ) {', ' expected  ;  before  )  token'], 6679: ['    return ID ( ID + CONST , ID + ID [ ID ] ) || ID ( ID + CONST , ID )', ' expected  ;  before  }  token'], 6680: ['\t                ID = ID ( ID [ ID ] , ID )', ' expected  ;  before  }  token'], 6681: ['}', ' expected declaration or statement at end of input'], 6682: ['    for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 6683: ['# define ID CONST', ' expected identifier or  (  before numeric constant'], 6684: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 6685: ['\tfloat ID = sqrt ( CONST ) * ID * ID / CONST', ' expected  ,  or  ;  before  printf '], 6686: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  for '], 6687: ['         printf ( STRING )', ' expected  ;  before  }  token'], 6688: ['ID ( ID , ID )', ' expected  ;  before  return '], 6689: ['\t      printf ( STRING )', ' expected  ;  before  }  token'], 6690: ['ID ( ( ID -> ID ) > CONST ) {', ' expected  ;  before  {  token'], 6691: ['\t  for ( ID = CONST ; ID <= ; ID ++ )', ' expected expression before  ;  token'], 6692: ['float ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6693: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 6694: ['\t        scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 6695: ['\tID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 6696: ['\tID [ ID ] = getchar ( )', ' expected  ;  before  while '], 6697: ['\tint ID [ ] [ CONST ] , ID [ CONST ] [ CONST ] , ID [ CONST ] [ CONST ] ;', ' array size missing in  ID '], 6698: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 6699: ['    ID = ID * ID ;', '  ID  undeclared '], 6700: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 6701: ['scanf ( STRING , & ID )', ' expected  ;  before  while '], 6702: ['        ID [ ID + ID ] = ID [ ID ] ;', '  ID  undeclared '], 6703: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 6704: ['        if ( ID [ ID ] == ) {', ' expected expression before  )  token'], 6705: ['    else if ( ID * ID - ID * ID == CONST )', '  else  without a previous  if '], 6706: ['    else ( ID > ID && ID > ID && ID > ID )', ' expected  ;  before  {  token'], 6707: ['        ID = ID * ID', ' expected  ;  before  }  token'], 6708: ['        printf ( STRING , / ID ) ;', ' expected expression before  ID  token'], 6709: ['printf ( STRING )', ' expected  ;  before  return '], 6710: ['    else ( ID = CONST )', ' expected  ;  before  printf '], 6711: ['    while ( ID <= ) {', ' expected expression before  )  token'], 6712: ['    ID [ ID ] = CHART ;', '  ID  undeclared '], 6713: ['    ID [ CONST ] = if ( ID [ CONST ] > ID [ CONST ] ) ? ID [ CONST ] : ID [ CONST ] ;', ' expected expression before  if '], 6714: ['    }', ' expected identifier or  (  before  }  token'], 6715: ['        ID /= CONST ; ID --', ' expected  ;  before  }  token'], 6716: ['\tscanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 6717: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 6718: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 6719: ['    ID = CONST ; ID = CONST , ID = CONST ;', '  ID  undeclared '], 6720: ['        ID = ID', ' expected  ;  before  ID '], 6721: ['    scanf ( STRING , & ) ;', ' expected expression before  )  token'], 6722: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 6723: ['\t  printf ( STRING )', ' expected  ;  before  return '], 6724: ['    ID -> ID . ID = ID ;', '  ID  {aka  struct rect } has no member named  ID ; did you mean  ID ?'], 6725: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 6726: ['\t    printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  printf '], 6727: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 6728: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 6729: ['        if else ( ID > ID ) {', ' expected  (  before  else '], 6730: ['      ID ( ID ) ;', ' too few arguments to function  ID '], 6731: ['    ID != CONST', ' expected  ;  before  return '], 6732: ['        scanf ( STRING , * ID [ ID ] [ ID ] ) ;', ' invalid type argument of unary  *  '], 6733: ['    printf ( STRING ID ID STRING . ) ;', ' expected  )  before  ID '], 6734: ['\t    for ( int ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 6735: ['float ID = CONST * ID * ID ;', ' redeclaration of  ID  with no linkage'], 6736: ['if ( ID == ID ) {', '  ID  undeclared '], 6737: ['    ID ( ID < CONST )', ' expected  ;  before  {  token'], 6738: ['            printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 6739: ['\t            printf ( STRING , * ) ;', ' expected expression before  )  token'], 6740: ['        printf ( STRING ID + CONST ) ;', ' expected  )  before  ID '], 6741: ['\t\tfor', ' expected  (  before  scanf '], 6742: ['printf ( STRING , CONST , ID , ) ;', ' expected expression before  )  token'], 6743: ['\tfor ( ID = CONST ; ID [ ID ] != CHART ; ID ++ ) {', '  ID  undeclared '], 6744: ['        printf ( STRING ( ID [ ID ] . ID ) -> ID ) ;', ' called object is not a function or function pointer'], 6745: ['\tprintf ( STRING , ID ( STRING , STRING ) ) ;', ' too few arguments to function  ID '], 6746: ['    ID ( ID + ID + CONST , ID - ID , ID + CONST , ID - CONST ) ;', '  ID  undeclared '], 6747: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 6748: ['    ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6749: ['    float ID = sqrt ( ID ) ( CONST * ID / CONST ) ;', '  ID  undeclared '], 6750: ['    printf ( STRING )', ' expected  ;  before  return '], 6751: ['printf ( STRING , ID )', ' expected  ;  before  return '], 6752: ['    ID ( ) ;', ' too few arguments to function  ID '], 6753: ['\t        ID = ID + ID ;                                     ', '  ID  undeclared '], 6754: ['\tscanf ( STRING , & ID )', ' expected  ;  before  {  token'], 6755: ['\tID = CONST', ' expected  ;  before  while '], 6756: ['printf ( STRING )', ' expected  ;  before  return '], 6757: ['        { ID = ID [ ID ] ; ID = ID }', ' expected  ;  before  }  token'], 6758: ['\t    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 6759: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6760: ['    int ID = ID -> ID - ID ;', '  ID  {aka  struct node } has no member named  ID '], 6761: [' printf ( STRING )   ', ' expected  ;  before  return '], 6762: ['\t    break ;', ' break statement not within loop or switch'], 6763: ['        ID ( ID , ID , ID , ID ) )', ' expected  ;  before  }  token'], 6764: ['        ID = ID ++', ' expected  ;  before  }  token'], 6765: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6766: ['    ID = ID - ID', ' expected  ;  before  for '], 6767: ['\t     { if ( ID ( ID [ ] , ID , ID [ ID ] ) == CONST )', ' expected expression before  ]  token'], 6768: ['           if ( int ID ( ID ) == CONST )', ' expected expression before  int '], 6769: ['    float ID = ( CONST / CONST ) * ID * ID * ID * ID ;                                                                       float ID     float ID = CONST * CONST * ID * ID * ID ;', ' expected  ;  before  float '], 6770: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 6771: ['}', ' expected declaration or statement at end of input'], 6772: ['printf ( STRING , ID ) :', ' expected  ;  before  :  token'], 6773: ['           ID += ID [ ID ] ;', '  ID  undeclared '], 6774: ['        else ( ID >= ID && ID <= ID ) {', ' expected  ;  before  {  token'], 6775: ['            ID [ ID ] == ID [ ID ] ;', '  ID  undeclared '], 6776: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 6777: ['        printf ( STRING )', ' expected  ;  before  }  token'], 6778: ['\t            ID = ID + ID', ' expected  ;  before  ID '], 6779: ['    printf ( STRING )', ' expected  ;  before  if '], 6780: ['if { ( ID = CONST ) printf ( STRING ) ; }', ' expected  (  before  {  token'], 6781: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 6782: ['\t        for ( ID = CONST ; ID < ID ( ID ) ; ID ++ ) printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 6783: ['   else printf ( STRING ) ;', '  else  without a previous  if '], 6784: ['\tfor ( ID = CONST ; ID != ID ; ID ++ ) {', '  ID  undeclared '], 6785: ['\tID = strlen ( ) - CONST ;', ' too few arguments to function  strlen '], 6786: ['}', ' expected declaration or statement at end of input'], 6787: ['\tID [ ID ] = char CHARST ;', ' expected expression before  CHAR '], 6788: ['}', ' expected declaration or statement at end of input'], 6789: ['\t    for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 6790: ['    int ID = ID * ( ID - CONST ) + CONST', ' expected  ,  or  ;  before  printf '], 6791: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 6792: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 6793: ['    ID = ( int * ) malloc ( ( CONST ID - CONST ) * sizeof ( int ) ) ;', ' invalid suffix "n" on integer constant'], 6794: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 6795: ['printf ( STRING , ID )                                   ', ' expected  ;  before  return '], 6796: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6797: ['\tchar ', ' expected identifier or  (  before  return '], 6798: ['          * ( ID + ID ) = CHART', ' expected  ;  before  break '], 6799: ['     printf ( STRING , ID )  ', ' expected  ;  before  }  token'], 6800: ['        for ( ID = ; ID < ID ; ID ++ )', ' expected expression before  ;  token'], 6801: ['        ID [ ID ] = ID ( ID [ ] , ID , ID ) ;', ' expected expression before  ]  token'], 6802: ['printf ( STRING , ID )', ' expected  ;  before  if '], 6803: ['\tprintf ( STRING , ID [ CONST ] [ CONST ] )', ' expected  ;  before  return '], 6804: ['    struct ID * ID = ( struct ID * ) calloc ( CONST , struct ID ) ;', ' expected expression before  struct '], 6805: ['                * ( ( ID [ CONST ] . ID ) + * ( ID [ CONST ] . ID ++ ) ) = * ( ( ID [ CONST ] . ID ) + ID ) ;', ' invalid type argument of unary  *  '], 6806: ['ID = ( ID [ CONST ] == CONST )', ' expected  ;  before  printf '], 6807: ['printf ( STRING )', ' expected  ;  before  return '], 6808: ['\t        scanf ( STRING , * ID [ ID ] [ ID ] ) ;', ' invalid type argument of unary  *  '], 6809: ['    printf ( STRING , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] )', ' expected  ;  before  return '], 6810: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 6811: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 6812: ['printf ( STRING , ID )', ' expected  ;  before  return '], 6813: ['          printf ( STRING , & ( * ( ID + ID ) ) . ID , & ( * ( ID + ID ) ) . ID ) ;', '  ID  undeclared '], 6814: ['        ID [ ID ] = ID', ' expected  ;  before  if '], 6815: ['        else if ( ID != CHARST && ID != CHARST )', '  ID  undeclared '], 6816: ['\tID ( ID ) ;', ' too few arguments to function  ID '], 6817: ['    ID = ( int * ) calloc ( ID * sizeof ( int ) ) ;', ' too few arguments to function  calloc '], 6818: ['if ( ID == ID CHART ID == ID || ID * ID == CONST CHART ID * ID == CONST ) {', ' expected  )  before  \\x2626 '], 6819: ['        if ( ID [ ID ] == ID ) {', '  ID  undeclared '], 6820: ['        ID [ ID ] = ID [ ID - ( CONST + ID ) ]', ' expected  ;  before  }  token'], 6821: ['return = CONST ;', ' expected expression before  =  token'], 6822: ['        ID = CONST', ' expected  ;  before  while '], 6823: ['    if ( ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 6824: ['    float ID = sqrt ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;', ' invalid operands to binary ^ '], 6825: ['}', ' expected declaration or statement at end of input'], 6826: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 6827: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 6828: ['    for ( ID = CONST ; * ID [ ID ] != ID ; ID ++ ) {', ' invalid type argument of unary  *  '], 6829: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 6830: ['{ if ( ID = CONST || ID = ID )', ' lvalue required as left operand of assignment'], 6831: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 6832: ['printf ( STRING , ID )', ' expected  ;  before  return '], 6833: ['\t{ putchar ( ) ; }', ' too few arguments to function  putchar '], 6834: ['        ID = CONST ;', '  ID  undeclared '], 6835: ['\tSTRING', ' invalid initializer'], 6836: ['        if ( ID [ ID ] ) = CHARST ; continue ;', ' expected expression before  =  token'], 6837: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 6838: ['        ID = int ( ID ) ;', ' expected expression before  int '], 6839: ['    ID = ID ( ID , CONST )', ' expected  ;  before  scanf '], 6840: ['        ID = ID ( ID [ ] [ ID ] , ID , ID , ID ) ;', ' expected expression before  ]  token'], 6841: ['} }', ' expected identifier or  (  before  }  token'], 6842: ['\t   for ( ID = ( ID + CONST ) / CONST ; ID >= CONST ; ID = ID - CONST )', '  ID  undeclared '], 6843: ['       printf ( STRING )', ' expected  ;  before  }  token'], 6844: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 6845: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 6846: ['\t        printf ( STRING )', ' expected  ;  before  ID '], 6847: ['      else ', '  else  without a previous  if '], 6848: ['    ID = ( float * ) malloc ( sizeof ( float ) * CONST ) ;', '  ID  undeclared '], 6849: ['scanf ( STRING ID ) ;', ' expected  )  before  ID '], 6850: ['\t    else if ( ) {', ' expected expression before  )  token'], 6851: ['\tscanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 6852: ['        printf ( STRING , ID ) ;  ', '  ID  undeclared '], 6853: ['    while ( ID ! ID ) {', ' expected  )  before  !  token'], 6854: ['\t            printf ( STRING , ID [ ID - CONST ] , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 6855: [' printf ( STRING , ID )', ' expected  ;  before  return '], 6856: ['   scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 6857: ['    int ID = ID ;', ' redefinition of  ID '], 6858: ['\t        continue', ' expected  ;  before  else '], 6859: ['    int ID = CONST , ID = CONST , ID = CONST , ID = CONST , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 6860: ['    printf ( STRING , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 6861: ['     `  ID = ID ;', ' stray  `  in program'], 6862: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 6863: ['}', ' expected declaration or statement at end of input'], 6864: ['    for ( int ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 6865: ['\tif ( ( ID ( ID [ ] , ID ) ) % CONST != CONST ) {', ' expected expression before  ]  token'], 6866: [' scanf ( STRING & ID , & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 6867: [' printf ( STRING , ID ) ;', '  ID  undeclared '], 6868: ['\tif ( ID ( ID [ ] , ID [ ] , ID , ID ) == CONST )', ' expected expression before  ]  token'], 6869: ['    ID ( ID )', ' expected  ;  before  return '], 6870: ['}', ' expected declaration or statement at end of input'], 6871: ['                { ID = CONST }', ' expected  ;  before  }  token'], 6872: ['else return CONST ;', '  else  without a previous  if '], 6873: ['  printf ( STRING , ID * ID )', ' expected  ;  before  return '], 6874: ['       { ID = CONST } ;', ' expected  ;  before  }  token'], 6875: ['   scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 6876: ['     ID ( ID , ID , ID ) ; }', ' too few arguments to function  ID '], 6877: ['}', ' expected declaration or statement at end of input'], 6878: ['                    `   }', ' stray  `  in program'], 6879: ['            if ( ID [ ID ] == * ID )', ' invalid operands to binary == '], 6880: ['    scanf ( STRING , & ID , & ID , % ID ) ;', ' expected expression before  %  token'], 6881: ['\tfloat ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6882: ['\tif ( CHARST <= ID [ ID ] <= CHARST && CHARST <= ID [ ID + CONST ] <= CHARST && ID [ ID + CONST ] == ID )', '  ID  undeclared '], 6883: ['    ID ( ID , ID ) ; }', ' too few arguments to function  ID '], 6884: ['    printf ( ID * ID * ID ) ;', ' incompatible type for argument 1 of  printf '], 6885: ['ID struct ID ID * ID ;', " expected  = , ',',  ; ,  asm  or  __attribute__  before  *  token"], 6886: ['\tID', ' expected  ;  before  return '], 6887: ['\tprintf ( STRING , ID ( ID [ ] , ID , ID ) ) ;', ' expected expression before  ]  token'], 6888: ['\tprintf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 6889: ['        ID ;', '  ID  undeclared '], 6890: ['        if ( ID -> ID == ID && ID -> ID == ID )', '  ID  undeclared '], 6891: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 6892: ['    printf ( , ID ) ;', ' expected expression before  ,  token'], 6893: ['    if ( ID % CONST == CONST ) && ( ID % CONST != CONST )', ' expected identifier before  (  token'], 6894: ['        printf ( STRING , ID , ID )', ' expected  ;  before  }  token'], 6895: ['CONST <= ID = > CONST ;', ' expected expression before  >  token'], 6896: ['    printf ( STRING )', ' expected  ;  before  return '], 6897: ['        printf ( STRING , ID , ID + CONST , ID + CONST ) ;', '  ID  undeclared '], 6898: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 6899: ['    int ID = ID ( ID , CONST )', ' expected  ,  or  ;  before  printf '], 6900: ['for ( int ID = ID ; ID = > ID ; ID ++ ) {', ' expected expression before  >  token'], 6901: ['    printf ( STRING , * ( ID + ID ) ) ;', '  ID  undeclared '], 6902: ['}', ' expected declaration or statement at end of input'], 6903: ['\tprintf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 6904: ['\tdouble ID = ID * ( CONST - ID ) / ( ID - ID ) ;', ' redeclaration of  ID  with no linkage'], 6905: ['\t    ID ++', ' expected  ;  before  }  token'], 6906: ['\t            ID [ ID + ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 6907: ['    printf ( STRING , * * ID , * * ( ID + CONST ) , * ( * ( ID ) + CONST ) )', ' expected  ;  before  return '], 6908: ['\tint ID , ID = CONST , ID [ CONST ] , ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 6909: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6910: ['    if ( ID [ ID + CONST ] = )', ' expected expression before  )  token'], 6911: ['             if ( ( ID % ID ) != CONST ) && ( ( ID % ID ) != CONST )', ' expected identifier before  (  token'], 6912: ['    ID ( CONST ) ;', ' too few arguments to function  ID '], 6913: ['    {   printf ( STRING , ID ) ;', '  ID  undeclared '], 6914: ['\tif ( ID == ID ) ]', ' expected statement before  ]  token'], 6915: ['\t    scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 6916: ['    if ( ID ( CONST , CONST , ID , ID , ID ) )', '  ID  undeclared '], 6917: ['     ID = ID + CONST', ' expected  ;  before  }  token'], 6918: ['    if ( ID [ CONST ] == CHART ) printf ( STRING )', ' expected  ;  before  }  token'], 6919: ['\t    ID [ ID ] = ( int * ) malloc ( sizeof ( int ) )', ' expected  ;  before  }  token'], 6920: ['                ID [ ID ] [ ID ] =', ' expected expression before  }  token'], 6921: ['                    ID = ID + CONST', ' expected  ;  before  }  token'], 6922: ['    if ( ID >= CHARST && ID <= ID ) ', '  ID  undeclared '], 6923: ['\tfloat ID = ;', ' expected expression before  ;  token'], 6924: ['        ID [ ID ] = ID [ ID ] + CONST', ' expected  ;  before  }  token'], 6925: ['}', ' expected declaration or statement at end of input'], 6926: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 6927: ['\t        scanf ( STRING , & ( ID + ID + ID ) ) ;', ' lvalue required as unary  &  operand'], 6928: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 6929: ['   printf ( STRING )', ' expected  ;  before  return '], 6930: ['        char ID  ', " expected  = , ',',  ; ,  asm  or  __attribute__  before  }  token"], 6931: ['\tfor ( ID = CONST ; ID <= ID ; ID += ) {', ' expected expression before  )  token'], 6932: ['        printf ( STRING , ID )', ' expected  ;  before  {  token'], 6933: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 6934: ['                    ID [ ID + ID ] = ID [ ID + ID - ID - ID ] ;', '  ID  undeclared '], 6935: ['        scanf ( STRING , & ( * ID [ ID ] ) ) ;', ' invalid type argument of unary  *  '], 6936: ['    return ID ( ID , ID + CONST , ID - CONST ) ;    ', ' too few arguments to function  ID '], 6937: ['\t{   CHART = CHART - CONST ;', ' lvalue required as left operand of assignment'], 6938: [' else ( ID = CONST ) ; {', '  else  without a previous  if '], 6939: ['    ID ( ID [ ] [ ID ] , ID [ ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 6940: ['\tprintf ( STRING , ID , ID ) ;', '  ID  undeclared '], 6941: ['    float ID , ID , ;', ' expected identifier or  (  before  ;  token'], 6942: ['      ID = ID + ( ID % ID ) ;', '  ID  undeclared '], 6943: ['      printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 6944: ['if ( ID == ID && ID = ID ) {', ' lvalue required as left operand of assignment'], 6945: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 6946: ['    int ID [ ID ] [ ID ] = { { } } ;', ' variable-sized object may not be initialized'], 6947: ['\t    ID = CONST', ' expected  ;  before  break '], 6948: ['    return ID ;', '  ID  undeclared '], 6949: ['        ID ( ID - CONST , ID - CONST , ID + CONST , CONST )', ' expected  ;  before  printf '], 6950: ['    scanf ( STRING , & char [ ID ] ) ;', ' expected expression before  CHAR '], 6951: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 6952: ['\t            else printf ( STRING , ID )', ' expected  ;  before  }  token'], 6953: ['            ID = ID * ID', ' expected  ;  before  if '], 6954: ['printf ( STRING )', ' expected  ;  before  return '], 6955: ['printf ( STRING )', ' expected  ;  before  return '], 6956: ['\t                    printf ( STRING , ID ) ', ' expected  ;  before  }  token'], 6957: ['\treturn CONST', ' expected  ;  before  }  token'], 6958: ['    ID ++', ' expected  ;  before  return '], 6959: ['if ( ID * ID = ID * ID ) ', ' lvalue required as left operand of assignment'], 6960: ['        if ( ID ( ID [ ID ] ) != CONST ) )', ' expected statement before  )  token'], 6961: ['printf ( STRING )', ' expected  ;  before  return '], 6962: ['\t    ID = getchar ( )', ' expected  ;  before  }  token'], 6963: ['    ID = CONST * ID * ID * ID * ID', ' expected  ;  before  printf '], 6964: ['\t    ID = ID + ID ( ID [ ID ] , ID ) ; }', '  ID  undeclared '], 6965: ['\t ID = ( ID + ID ) * ID + ID', ' expected  ;  before  printf '], 6966: ['\tscanf ( STRING , & ID )', ' expected  ;  before  while '], 6967: ['    ID ++', ' expected  ;  before  for '], 6968: ['    if ( ( ID ( ID -> ID . ID , ID -> ID . ID , ID . ID . ID ) ) && ( ID ( ID -> ID . ID , ID -> ID . ID , ID -> ID . ID ) ) ) ID ++ ;', '  ID  is a pointer; did you mean to use  -> ?'], 6969: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 6970: ['break ; }\t    ', ' break statement not within loop or switch'], 6971: ['   if ( ID == * ID )', ' invalid type argument of unary  *  '], 6972: ['}', ' expected declaration or statement at end of input'], 6973: ['              if ( ID ( ID [ ] [ ID ] , ID , ID , ID , ID ) ) ', ' expected expression before  ]  token'], 6974: ['\t    ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6975: ['\tint  CONST * CONST * CONST * CONST * CONST ;', ' expected identifier or  (  before numeric constant'], 6976: ['ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 6977: ['    for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 6978: ['    break ; }', ' break statement not within loop or switch'], 6979: ['        printf ( STRING , ID [ ID ] ) ; return ID ( ID , ID - CONST ) ;', '  ID  undeclared '], 6980: ['    printf ( STRING , & ID , & ID , & ID )', ' expected  ;  before  }  token'], 6981: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 6982: ['    else if ( ( ID = > CONST ) && ( ID <= CONST ) )', ' expected expression before  >  token'], 6983: ['\tprintf ( STRING , ID - CHARST + CHARST )', ' expected  ;  before  return '], 6984: ['\tprintf ( STRING , CONST * ID * ID )', ' expected  ;  before  return '], 6985: ['\t    ID = ID / CONST', ' expected  ;  before  }  token'], 6986: ['     if ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) == ID * ID = CONST )', ' lvalue required as left operand of assignment'], 6987: ['printf ( STRING )', ' expected  ;  before  return '], 6988: ['     int ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 6989: ['\t  scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 6990: ['\tID = ID ( ID * ID - ID * ID ) / CONST ;', ' called object  ID  is not a function or function pointer'], 6991: ['\tID = ID - CONST', ' expected  ;  before  }  token'], 6992: ['         scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 6993: ['\tint CONST * ID ;', ' expected identifier or  (  before numeric constant'], 6994: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 6995: ['    else ( ID % CONST != CONST )', ' expected  ;  before  {  token'], 6996: ['    ID ( ID [ ] [ ID ] , ID [ ] [ ID ] , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 6997: ['    if ( ID == CONST && ID == CONST ) ID [ ID ] [ ID ] = CONST', ' expected  ;  before  }  token'], 6998: ['  scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 6999: ['    else', '  else  without a previous  if '], 7000: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  printf '], 7001: ['\t        ID [ ID ] = CONST * ID [ ID - CONST ] - ID [ CONST ]', ' expected  ;  before  }  token'], 7002: ['    if ( ID ( ID [ ] [ ID ] , ID ) ) { ID = CONST ; break ; }', ' expected expression before  ]  token'], 7003: ['        ID = ID * CONST + ID', ' expected  ;  before  }  token'], 7004: ['scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 7005: ['    }', ' expected identifier or  (  before  }  token'], 7006: ['                ID ++', ' expected  ;  before  }  token'], 7007: ['\t        scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 7008: ['\tint ID = ID ;', '  ID  undeclared '], 7009: ['   }', ' expected identifier or  (  before  }  token'], 7010: ['\tif ( ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 7011: ['           printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 7012: ['    if ( ID [ ID ] >= ID [ CONST ] && ID [ ID ] = < ID ) {', ' expected expression before  <  token'], 7013: ['\tID = float ( ( ID - ID ) / ID ) ;', ' expected expression before  float '], 7014: ['printf ( STRING , ID ID ID ) ;', ' expected  )  before  ID '], 7015: ['     printf ( STRING , ID )', ' expected  ;  before  return '], 7016: ['        else  if ( CHARST <= ID [ ID ] <= CHARST ) {', '  else  without a previous  if '], 7017: ['}', ' expected declaration or statement at end of input'], 7018: ['           else ( ID % CONST != CONST )', ' expected  ;  before  printf '], 7019: ['\tscanf ( STRING , * ID ) ;', ' invalid type argument of unary  *  '], 7020: ['\t        `', ' stray  `  in program'], 7021: ['\tprintf ( STRING , * ( * ID [ CONST ] + CONST ) ) ;', ' invalid type argument of unary  *  '], 7022: ['    ID = strlen ( ID )', ' expected  ;  before  for '], 7023: ['    return ( ID ( ID + CONST , ID ) )', ' expected  ;  before  }  token'], 7024: ['        else', '  else  without a previous  if '], 7025: ['int main ( ) { printf ( STRING , ID CHAR ID ) ;', ' expected  )  before  \\x5f4d494e '], 7026: ['        ID -> ID = ID', ' expected  ;  before  ID '], 7027: ['    ID == ID / ( ( ID ) ^ ID ) ;', ' invalid operands to binary ^ '], 7028: [' ID = ( int * ) malloc ( ID * sizeof ( int ) ) ;', '  ID  undeclared '], 7029: ['else', '  else  without a previous  if '], 7030: ['       ID = ID + ID + ID ( ID * ID , ID * ID ) ;', ' too many arguments to function  ID '], 7031: ['printf ( STRING ID ID . STRING ) ;', ' expected  )  before  ID '], 7032: ['            if ( ID == CONST || ID = ID ) printf ( STRING , ID ) ;', ' lvalue required as left operand of assignment'], 7033: ['    for ( ID = CONST ; ID [ ID ] != ID [ ID ] ; ID ++ )', '  ID  undeclared '], 7034: ['        printf ( STRING , ID [ ] [ ID ] ) ;    ', ' expected expression before  ]  token'], 7035: ['     printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 7036: ['    ID = ID ( ID ) ;', '  ID  undeclared '], 7037: ['     ID = CONST * ID [ ID ]', ' expected  ;  before  printf '], 7038: ['\t               else', '  else  without a previous  if '], 7039: ['    }', ' expected declaration or statement at end of input'], 7040: ['         ID = CONST', ' expected  ;  before  }  token'], 7041: ['    if ( ID . ID < ID . ID && )', ' expected expression before  )  token'], 7042: ['{ printf ( STRING ) }', ' expected  ;  before  }  token'], 7043: ['\telse if ( ID != ID ! ID ) { printf ( STRING ) ; }', ' expected  )  before  !  token'], 7044: ['        ID = ID ( ID [ ID ] , ID ) ;', '  ID  undeclared '], 7045: ['    while ( ID == CONST && ID < CONST && )', ' expected expression before  )  token'], 7046: ['{   if ( ID >= ID [ ID - CONST ] )', '  ID  undeclared '], 7047: ['    scanf ( STRING , & ID [ CONST ] )', ' expected  ;  before  printf '], 7048: ['    return ( ID ( ID + CONST , ID + ID [ ID ] ) || ID ( ID + CONST , ID ) )', ' expected  ;  before  }  token'], 7049: ['         char [ ID + CONST ] = CHART ;', ' expected identifier or  (  before  [  token'], 7050: ['   printf ( STRING , ID )', ' expected  ;  before  return '], 7051: ['        ID - CONST ;', '  ID  undeclared '], 7052: ['    return ID ( ID , ID + CONST , ID )', ' expected  ;  before  }  token'], 7053: ['            printf ( STRING )', ' expected  ;  before  }  token'], 7054: ['    if ( ID == )', ' expected expression before  )  token'], 7055: ['    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 7056: ['    for ( ID = ID ; ID < ID + CONST ; ID ++ ) {', '  ID  undeclared '], 7057: ['printf ( STRING ID , ID , ID , ID ) ;    ', ' expected  )  before numeric constant'], 7058: ['    ID ( ID , ID [ ] , ID [ ] , ID ) ;', ' expected expression before  ]  token'], 7059: ['\t    int ID [ ID ] = ID ;', ' variable-sized object may not be initialized'], 7060: ['\tID = ID / CONST', ' expected  ;  before  printf '], 7061: ['        ID += CONST', ' expected  ;  before  }  token'], 7062: ['           ( ID [ ID ] == CHART )', ' expected  ;  before  {  token'], 7063: ['            ID [ ID ] = char ( ID [ ID ] + CONST ) ;', ' expected expression before  CHAR '], 7064: ['    ID [ ID ] = ID ;', '  ID  undeclared '], 7065: ['    if ( ( int ) ID > ( int ) ID )', '  ID  undeclared '], 7066: ['    else ( ( ID ( ID [ ID ] , ID ) ) == CONST )', ' expected  ;  before  printf '], 7067: ['\tfor ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 7068: ['    ID [ ID ] = ( ID [ ID ] + ( ID [ ID ] - CONST ) )', ' expected  ;  before  }  token'], 7069: ['    ( ID + ID ) = ( int * * ) malloc ( ID * sizeof ( int * ) ) ;', ' lvalue required as left operand of assignment'], 7070: ['        ID = ID + ID ( CONST , ID - ID ) * ID [ ID ] ;', '  ID  undeclared '], 7071: ['                printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 7072: ['            ID = ID + CONST', ' expected  ;  before  ID '], 7073: ['    printf ( STRING , ID + ID ( ID , CONST , ID ) ) ;', '  ID  undeclared '], 7074: ['    } else { putchar ( ID [ ID ] )', ' expected  ;  before  }  token'], 7075: ['\tif ( ( ID % CONST == CONST && ID % CONST != CONST ) ! ! ( ID % CONST == CONST && ID % CONST != CONST ) ) {                       ', ' expected  )  before  !  token'], 7076: ['\t            printf ( STRING )', ' expected  ;  before  }  token'], 7077: ['    printf ( STRING )', ' expected  ;  before  return '], 7078: ['   } printf ( STRING , ID ) } if ( ID == CONST )', ' expected  ;  before  }  token'], 7079: ['            ID = ID + CONST ;', '  ID  undeclared '], 7080: ['      ID ( ID [ ] , ID [ ] , ID , ID ) ;', ' expected expression before  ]  token'], 7081: ['    printf ( STRING )\t', ' expected  ;  before  return '], 7082: ['ID ( ID , ID )', ' expected  ;  before  {  token'], 7083: ['ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 7084: ['printf ( STRING )', ' expected  ;  before  return '], 7085: ['\tfor ( ID = CONST ; ID < ; ID ++ ) {', ' expected expression before  ;  token'], 7086: [' case CHARST ;', ' expected  :  or  ...  before  ;  token'], 7087: ['\tprintf ( STRING ID [ CONST ] ) ;', ' expected  )  before  ID '], 7088: ['        else ( ID = CONST )                                                            ', ' expected  ;  before  {  token'], 7089: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 7090: ['       for ( ID = CONST , ID < CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 7091: ['        ID ( ID + CONST , ID , ID , ID ) ;', ' too few arguments to function  ID '], 7092: ['      if ( ID [ ID ] == CHART )', '  ID  undeclared '], 7093: ['\tchar ID [ ] , ID ;', ' array size missing in  ID '], 7094: ['    if ( ID * ID = ( ID * ID + ID * ID ) )', ' lvalue required as left operand of assignment'], 7095: ['   while ( ID [ ID ] != CHART && ID [ ID ] = ID ) {\t', ' lvalue required as left operand of assignment'], 7096: ['ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 7097: ['        if ( ID [ ID ] == ID ) {                                                                                    ', '  ID  undeclared '], 7098: ['            scanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 7099: ['\twhile ( ID != )', ' expected expression before  )  token'], 7100: ['for ( ID = CONST ; ID < ( CONST ID - CONST ) ; ID ++ )', ' fixed-point types not supported for this target'], 7101: ['    int ID ;', ' redeclaration of  ID  with no linkage'], 7102: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 7103: ['\t\tprintf ( STRING , & ( ID [ ID ] = ID [ ID ] * ID [ ID ] ) ) ;', ' lvalue required as unary  &  operand'], 7104: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 7105: ['\tprintf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 7106: ['    for ( ID = CONST ; ID < ID ( ID ) , ID ++ ) {', ' expected  ;  before  )  token'], 7107: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 7108: ['printf ( STRING )', ' expected  ;  before  return '], 7109: ['           ID = * ( ID + ID - CONST ) + CONST', ' expected  ;  before  }  token'], 7110: ['    ID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on integer constant'], 7111: ['    printf ( STRING , ID , ID )', ' expected  ;  before  }  token'], 7112: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 7113: ['\t   printf ( STRING ) ', ' expected  ;  before  }  token'], 7114: ['\t       for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 7115: ['    else if { printf ( STRING ) ; }', ' expected  (  before  {  token'], 7116: ['  getchar ( )', ' expected  ;  before  return '], 7117: ['    if ( ID != ID )', ' expected expression before  }  token'], 7118: ['    printf ( STRING )', ' expected  ;  before  return '], 7119: ['        } ID ( ID > ID ) {', ' expected  ;  before  {  token'], 7120: ['        ID ( ID , ID - CONST )', ' expected  ;  before  }  token'], 7121: ['int main ( ) { printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 7122: ['    for ( ID = ID - CONST ; ID >= CONST ; ID -- ) {', '  ID  undeclared '], 7123: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 7124: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 7125: ['int ID , ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  int "], 7126: ['    ID [ ID ] = ID [ ID ] + ID [ ID ] [ ID ]', ' expected  ;  before  }  token'], 7127: ['    switch ( char ) {', ' expected expression before  CHAR '], 7128: ['\tif', ' expected  (  before  return '], 7129: ['for ( ID = ID ; ID <= ID ; ID ++ )', '  ID  undeclared '], 7130: ['    for ( ID = CONST ; ID < ID + CONST ; ID ++ ) {', '  ID  undeclared '], 7131: ['    ID = CHARST', ' expected  ;  before  printf '], 7132: ['    ID * ID ;', ' unknown type name  ID '], 7133: ['    if ( ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) || ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) )', ' expected expression before  else '], 7134: ['    int ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 7135: ['                    ID = ID [ ID ] ID [ ID ] + ID [ ID + ID ] ;', ' expected  ;  before  ID '], 7136: ['    return ID [ ] ;', ' expected expression before  ]  token'], 7137: ['for ( ID = CONST ; ID < )', ' expected expression before  )  token'], 7138: ['     printf ( STRING , ID + CONST )', ' expected  ;  before  }  token'], 7139: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 7140: ['    while ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 7141: ['\tID = ID / ID ;', '  ID  undeclared '], 7142: ['       {   if ( ID = CONST || ID = ID )', ' lvalue required as left operand of assignment'], 7143: ['    ID = ID ( ID [ CONST ] , ID )', ' expected  ;  before  return '], 7144: ['\tfloat ID =  CONST / CONST * ( ID - CONST ) + CONST ) ;', ' expected  ,  or  ;  before  )  token'], 7145: ['\t    ID = ID + ( ( ( ID - ID ) / ID ) * ID ( ID [ ID ] ) ) ;', '  ID  undeclared '], 7146: ['    printf ( STRING , * ( ID + CONST ) )', ' expected  ;  before  return '], 7147: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 7148: ['    while ( ID < CONST && ID [ ID ] != ID )', '  ID  undeclared '], 7149: ['                if ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID )', ' expected identifier before  (  token'], 7150: ['     printf ( STRING ID ) ;', ' expected  )  before  ID '], 7151: ['    ( ( ID > CHARST ) && ( ID < CHARST ) )', ' expected  ;  before  printf '], 7152: ['}', ' expected declaration or statement at end of input'], 7153: ['    printf ( STRING )', ' expected  ;  before  scanf '], 7154: ['    ID = getchar ( )', ' expected  ;  before  for '], 7155: ['    if ( char == % ID )', ' expected expression before  CHAR '], 7156: ['        { ID = ID ( ID - ID , ID - ID )', ' expected  ;  before  for '], 7157: ['            ID ++', ' expected  ;  before  }  token'], 7158: ['printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 7159: ['    {    printf ( STRING )', ' expected  ;  before  }  token'], 7160: ['            break', ' expected  ;  before  }  token'], 7161: ['    }                                                                        printf ( STRING , ID ) ;                                                                                       )', ' expected statement before  )  token'], 7162: ['        if ( ID [ ID ] == ID )', '  ID  undeclared '], 7163: ['\t        printf ( STRING , char ( ID ) ) ;', ' expected expression before  CHAR '], 7164: ['int ( ) {', ' expected identifier or  (  before  )  token'], 7165: ['    ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 7166: ['        if ( ID [ ID ] == CHARST )', '  ID  undeclared '], 7167: ['else { printf ( STRING ) : }', ' expected  ;  before  :  token'], 7168: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 7169: ['        printf ( STRING , ID [ ID ] )                  ', ' expected  ;  before  }  token'], 7170: ['}', ' expected declaration or statement at end of input'], 7171: ['    getchar ( ID ) ;', ' too many arguments to function  getchar '], 7172: ['float ID = CONST', ' expected  ,  or  ;  before  printf '], 7173: ['       else', '  else  without a previous  if '], 7174: ['\t  if ( == CONST )', ' expected expression before  ==  token'], 7175: ['    } * /', ' expected expression before  ID  token'], 7176: ['\t    ID = ID + ID ;', ' assignment to expression with array type'], 7177: ['   if ( ID == ( ID + CONST ) CONST ( ID + CONST ) )', ' expected  )  before numeric constant'], 7178: ['        scanf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 7179: ['    int ID = strlen ( ID [ ] ) ;', ' expected expression before  ]  token'], 7180: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 7181: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 7182: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 7183: ['    int ID = strlen ( ID [ ] ) ;', ' expected expression before  ]  token'], 7184: ['}', ' expected declaration or statement at end of input'], 7185: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 7186: ['                    if ( ID [ ID ] [ ID ] != CONST )', '  ID  undeclared '], 7187: ['} printf ( STRING , ID ( CHAR ) ) ;', ' too few arguments to function  ID '], 7188: ['    if ( ID [ ID ] > ID [ ID ] ) { ID [ ID ] = ID ( ID ( CONST + ID [ ID ] , CONST ) ) ;', ' too few arguments to function  ID '], 7189: ['        ID ( ID , ID , ID - CONST ) ;', ' too few arguments to function  ID '], 7190: ['   +                   ', ' expected expression before  for '], 7191: ['    printf ( STRING , ID . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 7192: ['    else if', ' expected  (  before  {  token'], 7193: ['\t        if ( ID == ID [ ID , ID , ID , ID , ID ] ) printf ( STRING , ID ) ;', ' subscripted value is neither array nor pointer nor vector'], 7194: ['   printf ( STRING , ID )', ' expected  ;  before  }  token'], 7195: ['    if ( ID > ID ) { ID = ID - ID [ ID ] return ID ( ID , ID [ ID + CONST ] ) ; }', ' expected  ;  before  return '], 7196: ['    if ( ID == ID && ID = ID )', ' lvalue required as left operand of assignment'], 7197: [' printf ( STRING )', ' expected  ;  before  return '], 7198: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 7199: ['\twhile ( ID [ ID ] == ) {', ' expected expression before  )  token'], 7200: ['\tscanf ( STRING , & ID [ ID - CONST ] )', ' expected  ;  before  scanf '], 7201: ['  printf ( STRING , ID ( ID , CONST ) ) ;', ' expected declaration or statement at end of input'], 7202: ['\t    else ( )', ' expected expression before  )  token'], 7203: ['scanf ( STRING & ( ID . ID ) ) ;', ' invalid operands to binary & '], 7204: ['      for ( ID = CONST , ID < ID - ID ; ++ )', ' expected expression before  )  token'], 7205: ['    printf ( STRING , ID , ID , ID , ID , ID ( ID ) . ) ;', ' expected identifier before  )  token'], 7206: ['        printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 7207: ['            ID [ ID ] [ ID ] = ID ( * ( ID + ID ) , ID , ID , ID ) ;', ' too many arguments to function  ID '], 7208: ['       ID += CONST', ' expected  ;  before  }  token'], 7209: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 7210: ['# include < stdio.h', ' missing terminating > character'], 7211: ['    else', ' expected expression before  }  token'], 7212: ['    printf ( STRING . , ID , ID , ID , ID , ID ) ;                              ', ' expected identifier before  ,  token'], 7213: [' printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 7214: ['    printf ( STRING , ID ^ CONST - CONST ID ) ;', ' invalid suffix "ac" on integer constant'], 7215: ['\tfor ( ID = CONST , ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 7216: ['    else if ( ID [ ID ] < ID ) { ID ( ID , ID + ID , ID ) ; }', '  ID  undeclared '], 7217: ['\t    if ( ID [ ID ] == ID ) {', '  ID  undeclared '], 7218: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 7219: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 7220: ['    ID ( ) ;', ' too few arguments to function  ID '], 7221: ['\t     ID [ ID ] = ID [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 7222: [' else ( ID < ID - CONST && ID > ID )', ' expected  ;  before  ID '], 7223: ['ID main ( ) {', ' unknown type name  ID ; did you mean  float ?'], 7224: ['\tscanf ( STRING & ID , & ID , & ID , & ID ) ;                           ', ' invalid operands to binary & '], 7225: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7226: ['    if ( ID [ ID + CONST ] < ID [ ID ] && ID < ID - CONST ) ID [ ID + CONST ] = ID [ ID + CONST ] + ID [ ID + CONST ] ;', '  ID  undeclared '], 7227: ['        ID ++', ' expected  ;  before  }  token'], 7228: ['    int ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 7229: ['    if ( ( ID - ID = CONST ) && ( ID = CONST ) ) {', ' lvalue required as left operand of assignment'], 7230: ['        return - CONST', ' expected  ;  before  }  token'], 7231: ['    printf ( STRING . , ID , ID , ID , ID , ID ) ;    ', ' expected identifier before  ,  token'], 7232: ['    ID ++ }', ' expected  ;  before  }  token'], 7233: ['}', ' expected declaration or statement at end of input'], 7234: ['    printf ( STRING , ID * ID ) ;', '  ID  undeclared '], 7235: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7236: ['}', ' expected declaration or statement at end of input'], 7237: ['    if ( ID ( ID ) == CONST && ID ( ID - ID ) == CONST )', '  ID  undeclared '], 7238: ['    while ( ID [ ID ] != CHART )  ID ++ ;', '  ID  undeclared '], 7239: ['ID = CONST * CONST * CONST * CONST * CONST ;', '  ID  undeclared '], 7240: ['          ID = CONST', ' expected  ;  before  ID '], 7241: ['    ( ID + ID ) = ID ;', '  ID  undeclared '], 7242: ['\tfloat ID = CONST , ID = CONST ;                             float ID = ID * ID * ID ;                                    printf ( STRING ID  ) ;                   ', ' expected  )  before  ID '], 7243: ['\tID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 7244: ['       }                       ', ' expected identifier or  (  before  }  token'], 7245: ['\tscanf ( STRING , & ID )', ' expected  ;  before  return '], 7246: ['    ID ++', ' expected  ;  before  }  token'], 7247: ['    ID = CHARST - CHARST + CONST', ' expected  ;  before  printf '], 7248: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 7249: ['    printf ( STRING , ( ID , ID ) , ( ID , ID ) , ID )', ' expected  ;  before  return '], 7250: ['            {   int ID = ID ;', '  ID  undeclared '], 7251: ['    { for ( ID = ID ; ID > CONST ; ID = -- ) {', ' expected expression before  )  token'], 7252: ['            if ( ID [ ID ] != = ID [ ID + ID ] )', ' expected expression before  =  token'], 7253: ['    ID ( ID , CONST ) ;', ' too many arguments to function  ID '], 7254: ['                            ID ++ ;', '  ID  undeclared '], 7255: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 7256: ['            if ( ID [ ID ] [ ID + CONST ] == CHARST || ID [ ID + CONST ] ID [ ID ] == CHARST )                                                                    ', ' expected  )  before  ID '], 7257: ['        if ( ID [ ID ] == CHARST || )', ' expected expression before  )  token'], 7258: ['\tif ( ID == ID )', '  ID  undeclared '], 7259: ['ID ( ID , ID , ID - CONST , ID ) ;', ' too many arguments to function  ID '], 7260: ['\tprintf ( STRING , ID , ID ) ;', '  ID  undeclared '], 7261: ['\t for ( ID = ; ID < CONST ; ID ++ )', ' expected expression before  ;  token'], 7262: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 7263: ['}', ' expected declaration or statement at end of input'], 7264: ['\t        if ( ID % ID == CONST ) break', ' expected  ;  before  }  token'], 7265: ['\t  printf ( STRING )  ', ' expected  ;  before  }  token'], 7266: ['      else if {', ' expected  (  before  {  token'], 7267: ['    scanf ( STRING ID ) ;', ' expected  )  before  ID '], 7268: ['ID ++', ' expected  ;  before  ID '], 7269: ['\t{   for ( int ID = CONST ; ID < ( ID / CONST ) ; ID += CONST )    ', '  ID  undeclared '], 7270: ['int main ( ) { printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 7271: ['    scanf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 7272: ['\tif ( ID == CONST ) printf ( STRING , ID [ ID - CONST ] ) ; ', '  ID  undeclared '], 7273: ['                    ID [ ID ] = ID ;', ' assignment to expression with array type'], 7274: ['                printf ( STRING )', ' expected  ;  before  ID '], 7275: ['            ID [ ID ] = ID ;', ' subscripted value is neither array nor pointer nor vector'], 7276: ['    return ( ID ( ID , ID + CONST , ID ) || ID ( ID , ID , ID + CONST ) )', ' expected  ;  before  }  token'], 7277: ['}', ' expected  ; , identifier or  (  before  int '], 7278: ['\twhile ( ID !=\\ ID )', ' stray  \\  in program'], 7279: ['\t     if ( ID [ ID ] == CHARNST )', ' empty character constant'], 7280: ['    }', ' expected identifier or  (  before  }  token'], 7281: ['        ID = ID + ( ( ( int ) ID [ ID ] ) * ( CONST ^ ( ID - ID ) ) ) ;', ' invalid operands to binary ^ '], 7282: ['\tprintf ( STRING )', ' expected  ;  before  return '], 7283: [' ID = ( ID / CONST ) - CONST', ' expected  ;  before  printf '], 7284: ['\t        ID [ ID ] = ID ;', '  ID  undeclared '], 7285: ['               * ( ID + ID ) = CHARST', ' expected  ;  before  break '], 7286: ['\tID = CONST / CONST * ID ( ID * ID - ID * ID ) ;', ' called object  ID  is not a function or function pointer'], 7287: ['    scanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 7288: ['    scanf ( STRING , & CHARST ) ;', ' lvalue required as unary  &  operand'], 7289: ['    }', ' expected declaration or statement at end of input'], 7290: ['       ID = ID', ' expected  ;  before  while '], 7291: ['\t    scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 7292: ['            if ( ID <= ID )', '  ID  undeclared '], 7293: ['    float ID = CONST * ID * ( ID ^ CONST ) ;', ' invalid operands to binary ^ '], 7294: ['     if ( ID [ ID ] != ID )', '  ID  undeclared '], 7295: ['    }', ' expected declaration or statement at end of input'], 7296: ['\t       ID ++', ' expected  ;  before  }  token'], 7297: ['        printf ( STRING )', ' expected  ;  before  if '], 7298: ['\tprintf ( STRING , ( CONST / CONST ) * ID * ID * ID * ID , CONST * ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 7299: ['  scanf ( STRING , ID [ ID ] ) }', ' expected  ;  before  }  token'], 7300: ['scanf ( STRING , & ID , ) ;', ' expected expression before  )  token'], 7301: ['    scanf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  float '], 7302: ['      if ( ID == ID ) printf ( STRING ) ;', '  ID  undeclared '], 7303: ['\t    ID = ID + ( ID ( ID ) ) * ID', ' expected  ;  before  }  token'], 7304: [' if ( ID != ( ID - CONST ) )', '  ID  undeclared '], 7305: ['                for ( ID = ID ; ID < ID + ID , ID ++ ) {', ' expected  ;  before  )  token'], 7306: ['    break ;', ' break statement not within loop or switch'], 7307: ['\t    ID = ID + ( pow ( ( ID + CONST ) , CONST * ID ) ) / ID ( CONST * ID + CONST ) ;', '  ID  undeclared '], 7308: ['     ID = ID -> ID + ID -> ID ;', '  struct overlap  has no member named  ID ; did you mean  ID ?'], 7309: ['\tscanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 7310: ['            printf ( STRING )', ' expected  ;  before  }  token'], 7311: ['\tgetchar ( ID ) ;', ' too many arguments to function  getchar '], 7312: ['\t        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 7313: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 7314: ['       ID <= ID + ID', ' expected  ;  before  }  token'], 7315: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 7316: ['             if ( ID [ ID ] == ID [ ] )', ' expected expression before  ]  token'], 7317: ['        ID = ID -> ID ;', '  ID  undeclared '], 7318: ['\tID = ID ( ID , ID ) ;', ' too many arguments to function  ID '], 7319: ['printf ( STRING , ID )', ' expected  ;  before  return '], 7320: ['        ID = ID', ' expected  ;  before  }  token'], 7321: ['    printf ( STRING , * ID [ ID ] )', ' expected  ;  before  return '], 7322: ['    if ( ( ID >= CHARST ) && ( ID <= CHARST ) ) {', '  ID  undeclared '], 7323: ['\t     ID = ( ID + ( ( ID - ID ) / ID ) * ID ) * ( ID + ID * ( ( ID - ID ) / ID ) ) * ( ID + ID ( ( ID - ID ) / ID ) ) ;', ' called object  ID  is not a function or function pointer'], 7324: ['\t    if ( ID [ ID ] == CHART )', '  ID  undeclared '], 7325: [' \t    ID = ID [ ID ] + ID [ ID ] - CONST', ' expected  ;  before  if '], 7326: ['    else', '  else  without a previous  if '], 7327: [' while ( ID [ ID ] !=\\ ID )', ' stray  \\  in program'], 7328: ['       printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 7329: ['}', ' expected declaration or statement at end of input'], 7330: [' ID = ID ( ID )', ' expected  ;  before  printf '], 7331: ['} }', ' expected identifier or  (  before  }  token'], 7332: ['             printf ( STRING )', ' expected  ;  before  }  token'], 7333: ['         printf ( STRING ) :', ' expected  ;  before  :  token'], 7334: ['\t    ID [ ID ] = ID', ' expected  ;  before  }  token'], 7335: ['            if ( ID [ ID + ID ] [ ID + ID ] == CONST && ID [ ID ] [ ID + ID ] = ( - CONST ) * ID [ ID + ID ] [ ID ] )', ' lvalue required as left operand of assignment'], 7336: ['if ID [ CONST ] {', ' expected  (  before  ID '], 7337: ['        printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 7338: ['              ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 7339: ['            return ID ( ID + CONST , ID ) ;', '  ID  undeclared '], 7340: ['    for ( ID = CONST ; ( ID <= ID - ID ) && ( ID == CONST || ID <= ID [ ID - CONST ] ) ; ID ++ ) {', '  ID  undeclared '], 7341: ['                    if ( ID [ ID ] [ ID ] == ID [ ID ] [ ID ] ) ID = CONST ; else { ID ++ ; continue } ;', ' expected  ;  before  }  token'], 7342: ['\t    printf ( STRING , ID [ ( ID - CONST ) / ID [ CONST ] ) ;', ' expected  ]  before  )  token'], 7343: ['\t     printf ( STRING , ID [ ID ] )', ' expected  ;  before  break '], 7344: ['\tfor ( ID = CONST ; ID < ID - CONST , ID ++ )', ' expected  ;  before  )  token'], 7345: ['        ID = ID * CONST + ID', ' expected  ;  before  }  token'], 7346: ['}', ' expected declaration or statement at end of input'], 7347: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 7348: ['    char ID = CHARST', ' expected  ,  or  ;  before  if '], 7349: ['    printf', ' expected  ;  before  return '], 7350: ['    ID ( ID , ID + CONST , ID - ID - CONST ) ;', '  ID  undeclared '], 7351: ['                    {   printf ( STRING , ID )', ' expected  ;  before  }  token'], 7352: ['\tfor ( ID = ID - CONST ; ID = > CONST ; ID -- ) {', ' expected expression before  >  token'], 7353: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 7354: ['            ID = ID + CONST', ' expected  ;  before  continue '], 7355: ['\tID ( ID , CHARST , CHARST , CHARST ) ;', ' too many arguments to function  ID '], 7356: ['    int ID ;', ' redeclaration of  ID  with no linkage'], 7357: ['        else ( ID [ ID ] = ID [ ID ] )', ' expected  ;  before  ID '], 7358: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 7359: ['\t      printf ( STRING , void ID ( ID , ID , ID ) ) ;', ' expected expression before  ID '], 7360: ['    else ( ( ( ( ID - ID ) * ( ID - ID ) ) + ( ( ID - ID ) * ( ID - ID ) ) ) == ( ID * ID ) )', ' expected  ;  before  printf '], 7361: ['\tID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 7362: ['   printf ( STRING , ( ( * ID [ CONST ] ) . ID ) ) ;', ' invalid type argument of unary  *  '], 7363: ['    ID ( ) ;', ' too few arguments to function  ID '], 7364: ['                            if ( ID [ ID ] [ ID ] != ID [ ID - CONST + ( ID - ID ) ] [ ID + ( ID - ( ID - CONST ) ] )', ' expected  )  before  ]  token'], 7365: ['    } while ( ID [ ID ] != ID )', ' expected  ;  before  printf '], 7366: ['    char ID [ ID + CONST ] ;', ' redeclaration of  ID  with no linkage'], 7367: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 7368: ['    while ( ID != CHART && ID != CHARST && ID < CONST )', '  ID  undeclared '], 7369: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 7370: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 7371: ['}', ' expected declaration or statement at end of input'], 7372: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 7373: ['    else if', ' expected  (  before  {  token'], 7374: ['printf ( STRING )', ' expected  ;  before  return '], 7375: ['}', ' expected declaration or statement at end of input'], 7376: ['\t    { if ( ID <= ID - ID + ID - CONST && ID >= ID + ID - ID )', '  ID  undeclared '], 7377: ['\tID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on integer constant'], 7378: ['    ID ( ID ) ;                        ', '  ID  undeclared '], 7379: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 7380: ['    printf ( STRING )', ' expected  ;  before  return '], 7381: ['     if ( ID >= ID ) { printf ( STRING )', ' expected  ;  before  if '], 7382: ['            printf ( STRING )', ' expected  ;  before  return '], 7383: ['     printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 7384: ['          ID += ( ID ( CONST + ID + CONST ) * ID ( ID , ID - CONST ) ) * ID [ CONST ] [ ID ] ;', ' too few arguments to function  ID '], 7385: ['\tprintf ( STRING , ID )', ' expected  ;  before  scanf '], 7386: ['}', ' expected  ; , identifier or  (  before  int '], 7387: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 7388: ['\tif ( ( ID == CONST ) && ( ID == CONST ) ) || ( ( ID == CONST ) && ( ID == CONST ) ) {', ' expected expression before  ||  token'], 7389: ['    ID = ID', ' expected  ;  before  ID '], 7390: ['\tif ( ID < ID [ ID - CONST ] ) ID = ID [ ID - CONST ] ;', '  ID  undeclared '], 7391: ['    while ( ID [ ID ] != CHARNST )', ' empty character constant'], 7392: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 7393: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 7394: ['        else if ( ID [ ID ] == ID [ CONST ] || ID [ ID + CONST ] == ID [ ] )', ' expected expression before  ]  token'], 7395: ['            getchar ( ) = ID , ID , ID , ID ;', ' lvalue required as left operand of assignment'], 7396: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 7397: ['    int ID = ID ( CONST , CONST , CONST , CONST , CONST , CONST )', ' expected  ,  or  ;  before  printf '], 7398: ['    { if ( ID == )', ' expected expression before  )  token'], 7399: ['\t { scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 7400: ['\tscanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 7401: ['\tprintf ( STRING , float ( ( ID * ID - ID * ID ) * ID / CONST ) ) ;', ' expected expression before  float '], 7402: ['   if ( CONST / CONST ( ( ID * ID ) + ( ID * ID ) + ( ID * ID ) ) - ( ( ID * ID ) + ( ID * ID ) + ( ID * ID ) ) ) {', ' called object is not a function or function pointer'], 7403: ['    return ( ID == CONST ) ? CONST : CONST', ' expected  ;  before  }  token'], 7404: ['\t        scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 7405: ['                ID = ID + ( ID - ID ) ;                      ', '  ID  undeclared '], 7406: ['        scanf ( STRING , & ( ID [ ID ] . ID ) , & ( ID [ ID ] . ID ) . & ( ID [ ID ] . ID ) ) ;', ' expected identifier before  &  token'], 7407: ['   if ( ID == ID ) ID ( ID , CONST , ID )', ' expected  ;  before  else '], 7408: ['\t    ID [ ID ] = ID [ ID - ( ID / CONST ) ]', ' expected  ;  before  }  token'], 7409: ['    ID = ID - ID ;', '  ID  undeclared '], 7410: ['\tID = getchar ( ) ;', '  ID  undeclared '], 7411: ['    printf ( STRING , ID CHART ) ;', ' expected  )  before  \\xa '], 7412: ['    ID = ID ( ) ;', ' too few arguments to function  ID '], 7413: ['    ID ( ID , ID , ID [ CONST ] )', ' expected  ;  before  printf '], 7414: ['}', ' expected declaration or statement at end of input'], 7415: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7416: ['ID ( ID > ID ) ? ID : ID ;', ' called object  ID  is not a function or function pointer'], 7417: ['        ID [ ID , ID + CONST ] ;', ' subscripted value is neither array nor pointer nor vector'], 7418: ['    printf ( STRING )', ' expected  ;  before  return '], 7419: ['printf ( STRING )', ' expected  ;  before  return '], 7420: ['}', ' expected declaration or statement at end of input'], 7421: ['    for ( ID = ID ; ID < CONST ; ID ++ ) {', '  ID  undeclared '], 7422: ['\tprintf ( STRING . ID ) ;', ' request for member  ID  in something not a structure or union'], 7423: ['\t    putchar ID [ ID ] ;', ' expected  ;  before  ID '], 7424: ['        ID ( ID , ID - ID , ID [ CONST ] , ID )', ' expected  ;  before  }  token'], 7425: ['\t    ID [ ID ] = ID ( ID [ ID - CONST ] , ID [ ID - CONST ] + ID [ ID - CONST ] + ID [ ID ] ) ;', '  ID  undeclared '], 7426: ['    ID = ( int * ) ID ( ID * sizeof ( int ) ) ;', ' invalid operands to binary * '], 7427: ['       printf ( STRING , ID , ID )', ' expected  ;  before  }  token'], 7428: ['\tint ID = ID [ ID - CONST ] , ID ;', '  ID  undeclared '], 7429: ['        if ( ID [ ID ] == CHART ) {', '  ID  undeclared '], 7430: ['    return ( ( ( ID % CONST == CONST ) && ( ID % CONST != CONST ) ) || ( ID % CONST == CONST ) )', ' expected  ;  before  }  token'], 7431: ['\tprintf ( STRING , ID [ ID ] [ CONST ] != ID [ ID ] [ CONST ] ) } }', ' expected  ;  before  }  token'], 7432: ['        return ( ID + CONST , ID - ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 7433: ['             ID = ID + CONST   ', ' expected  ;  before  }  token'], 7434: ['     printf ( STRING , ID )', ' expected  ;  before  return '], 7435: ['    ID = ( CONST / CONST ) ID * ( ID * ID - ID * ID ) ;', ' expected  ;  before  ID '], 7436: ['            ID = ID ( ID , ID - CONST )', ' expected  ;  before  return '], 7437: ['\tif ( ID ( ID ) == ) printf ( STRING ) ;', ' expected expression before  )  token'], 7438: ['        ID [ ID ] = ID                   ', ' expected  ;  before  ID '], 7439: ['        ID = ID + ID [ ID ] * ID ( CONST , ID - ID - CONST ) ;', '  ID  undeclared '], 7440: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ ) {', '  ID  undeclared '], 7441: ['     scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 7442: ['   if ( ID != = CONST )', ' expected expression before  =  token'], 7443: [' printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 7444: ['        printf ( STRING , ID [ CONST ] . ID ) ; ID ++ ; ID ++ ;', '  struct set  has no member named  ID '], 7445: ['    ID =', ' expected expression before  return '], 7446: ['\tID [ CONST ] [ CONST ] = ID ( ID , ID , ID )', ' expected  ;  before  return '], 7447: ['           printf ( STRING , ) ;', ' expected expression before  )  token'], 7448: ['\t            if ( ID )', ' expected expression before  }  token'], 7449: ['           getchar ( * ID ) ;', ' too many arguments to function  getchar '], 7450: ['    int ID ;', ' redeclaration of  ID  with no linkage'], 7451: ['        ID = ID [ ID ] * ID [ ID - ID ] + ID [ ID ] ; }', ' assignment to expression with array type'], 7452: ['int ID ( int ID , int ID , int ID [ ID ] [ ID ] , ) {', ' expected declaration specifiers or  ...  before  )  token'], 7453: ['    ID = ID ( ID )', ' expected  ;  before  if '], 7454: ['     for ( int ID = ID ; ID < CONST ; ID ++ )', '  ID  undeclared '], 7455: ['        ID = * ( ID + ID ) ;', ' incompatible types when assigning to type  BirthData *  {aka  struct birth_data * } from type  ID  {aka  struct birth_data }'], 7456: ['    for ( ID = CONST ; ID >= ID && ID < ID - ID ; ID ++ ) {', '  ID  undeclared '], 7457: ['\tID = ID ( ID , ID ) ;', ' called object  ID  is not a function or function pointer'], 7458: ['       printf ( STRING , ID )', ' expected  ;  before  printf '], 7459: ['\t    ID = ID * ( ID + CONST )', ' expected  ;  before  if '], 7460: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7461: ['    ID = ID [ CONST ] ;', ' expected  )  before  ID '], 7462: ['     ID = ( ID ) / CONST ;', '  ID  undeclared '], 7463: ['        if ( ) { ID = ID + CONST ; }', ' expected expression before  )  token'], 7464: ['void ID ( int ID ) ;', ' expected identifier or  (  before  {  token'], 7465: ['    ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 7466: ['    \t        ID ( ) ;', ' too few arguments to function  ID '], 7467: ['  printf ( STRING , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 7468: ['            ID = ID', ' expected  ;  before  }  token'], 7469: ['    while ( )', ' expected expression before  )  token'], 7470: ['        if ( ID == CONST ) ID [ ID ] = ID [ ID ] ,', ' expected expression before  else '], 7471: ['    int ID = ID', ' expected  ,  or  ;  before  printf '], 7472: ['            return ID', ' expected  ;  before  }  token'], 7473: ['    ( ID - CONST ) = ( ID - CONST ) / CONST ;', ' lvalue required as left operand of assignment'], 7474: ['        else ( ID = ID + CONST ) }', ' expected  ;  before  }  token'], 7475: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 7476: ['    { printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 7477: ['        if ( ID ( int ID ) == CONST )', ' expected expression before  int '], 7478: ['\tprintf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 7479: ['    if ( ID / ID = ID / ID ) {', ' lvalue required as left operand of assignment'], 7480: ['    for ( int ID = CONST ; ID = < ID - ID ; ID ++ )', ' expected expression before  <  token'], 7481: [' break ; }', ' break statement not within loop or switch'], 7482: ['       ID = ID + ID ( ( ID + CONST ) , CONST * ID ) / ID ( CONST * ID + CONST )', ' expected  ;  before  printf '], 7483: ['    printf ( STRING ID [ CONST ] ) ;', ' expected  )  before  ID '], 7484: ['# ID < ID . ID >', ' invalid preprocessing directive #incluce; did you mean #include?'], 7485: ['            break', ' expected  ;  before  }  token'], 7486: ['    printf ( STRING )', ' expected  ;  before  return '], 7487: ['  scanf ( STRING , & ID ) ;', '  ID  undeclared '], 7488: ['            if ( ID [ ID ] . ID > ID )', '  ID  {aka  struct <anonymous> } has no member named  ID '], 7489: ['    float ID = ( CONST / CONST ) * ID * ID ^ CONST ; ', ' invalid operands to binary ^ '], 7490: ['\tprintf ( STRING )', ' expected  ;  before  return '], 7491: ['          printf ( STRING , ( ID - CONST ) )', ' expected  ;  before  }  token'], 7492: ['        ID [ ID + CONST ] = ID [ ID - ( ID == CONST ) ? : , CONST ] ;', ' expected expression before  ,  token'], 7493: ['    else', '  else  without a previous  if '], 7494: ['         { while ( ID <= ( ID - ( ID / CONST ) ) - CONST ) )', ' expected statement before  )  token'], 7495: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 7496: [' printf ( STRING , ) ;', ' expected expression before  )  token'], 7497: ['    ID = - CONST', ' expected  ;  before  if '], 7498: ['while ( ID < ID ) {', '  ID  undeclared '], 7499: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7500: ['    printf ( STRING )', ' expected  ;  before  return '], 7501: ['    printf ( STRING , ID [ CONST ] . ID . ID ) ;', '  struct rank  has no member named  ID '], 7502: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 7503: ['   while ( ID % CONST = CONST ) { ID /= CONST ; }', ' lvalue required as left operand of assignment'], 7504: ['        while ( ( ID [ ID - CONST ] > ID [ ID ] ) && ID = > CONST ) {', ' expected expression before  >  token'], 7505: ['       int ID [ CONST ] ;', ' redeclaration of  ID  with no linkage'], 7506: ['\tprintf ( STRING STRING ID ) ;', ' expected  )  before  ID '], 7507: [' scanf ( STRING , & ID , & ID )', ' expected  ;  before  for '], 7508: ['\tprintf ( STRING ID [ CONST ] ) ;', ' expected  )  before  ID '], 7509: ['        default { printf ( STRING ) ; }', ' expected  :  before  {  token'], 7510: ['    ID ( ID , ID , ID [ ] ) ;', ' expected expression before  ]  token'], 7511: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 7512: ['            ID = CONST', ' expected  ;  before  }  token'], 7513: ['ID = ID ( CONST + ( ID * ID / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 7514: ['            { ID = CONST', ' expected  ;  before  for '], 7515: ['        ID', ' expected  ;  before  }  token'], 7516: [' if else ( ID >= CHART && ID <= CHART ) {', ' expected  (  before  else '], 7517: ['\tfloat ID = CONST * CONST * CONST * CONST * CONST ;', ' redefinition of  ID '], 7518: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 7519: ['    char ID = } ;', ' expected expression before  }  token'], 7520: ['    } printf ( STRING , ID ) ; ', '  ID  undeclared '], 7521: ['printf ( STRING )', ' expected  ;  before  return '], 7522: ['\tfor ( ID = ID - CONST ; ID >= CONST , ID -- ) {', ' expected  ;  before  )  token'], 7523: ['\tprintf ( STRING , ID * ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 7524: ['\t    else', '  else  without a previous  if '], 7525: ['    ID = ID [ ID ] [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 7526: ['}', ' expected declaration or statement at end of input'], 7527: ['         { printf ( STRING ) } ;', ' expected  ;  before  }  token'], 7528: ['\tscanf ( STRING , & ID [ CONST ] )', ' expected  ;  before  for '], 7529: ['       getchar ( ID ) ;', ' too many arguments to function  getchar '], 7530: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 7531: ['        break ;', ' break statement not within loop or switch'], 7532: ['else if ( ID == ID & ( ID + ID ) = ID ) {', ' lvalue required as left operand of assignment'], 7533: ['    } printf ( STRING )', ' expected  ;  before  for '], 7534: ['                ID ( ID , ID + ( ID - CONST ) * ( ID + CONST ) , ID )', ' expected  ;  before  }  token'], 7535: ['        else', '  else  without a previous  if '], 7536: ['ID ++', ' expected  ;  before  return '], 7537: ['           ID [ ID ] = ID [ ID ]', ' expected  ;  before  break '], 7538: ['    else { printf ( STRING ) }', ' expected  ;  before  }  token'], 7539: ['\tprintf ( STRING . ) ;', ' expected identifier before  )  token'], 7540: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 7541: ['    ID = strlen ( ID [ ] ) ;', ' expected expression before  ]  token'], 7542: ['\t            printf ( STRING , ID ( ID , ID , ID ) ) ;', ' invalid use of void expression'], 7543: ['\tprintf ( STRING )', ' expected  ;  before  return '], 7544: ['    if ( ( ( ID % CONST == CONST ) || ( ID % CONST == CONST ) ) && ( ID % CONST ) ) {                  ', '  ID  undeclared '], 7545: ['    return CONST * ID * ( ( CONST * ID + CONST ) / ( ID + CONST ) ) ;', '  ID  undeclared '], 7546: ['        } else { ID = CONST }', ' expected  ;  before  }  token'], 7547: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 7548: ['\t       ID ++', ' expected  ;  before  }  token'], 7549: ['            return CONST', ' expected  ;  before  }  token'], 7550: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 7551: ['    scanf ( STRING , & ID , & ID , & ID , & ID )', ' expected  ;  before  return '], 7552: ['    for ( ID = CONST ; ID > CONST )', ' expected  ;  before  )  token'], 7553: ['}', ' expected declaration or statement at end of input'], 7554: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 7555: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 7556: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7557: ['\tif ( ID == CONST && ID = ID )', ' lvalue required as left operand of assignment'], 7558: ['printf ( STRING , ID )', ' expected  ;  before  return '], 7559: ['if ( ID == ID ID ID == ID ) {', ' expected  )  before  ID '], 7560: ['printf ( STRING , % ID ) ;', ' expected expression before  %  token'], 7561: ['    if ( ( ID % CONST != = CONST ) && ( ID % CONST == CONST ) ) {', ' expected expression before  =  token'], 7562: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 7563: ['    printf ( STRING . , ID , ID , ID , ID , ID ) ;', ' expected identifier before  ,  token'], 7564: ['\tfor ( ID = CONST , ID [ ID ] != CHART ; ID ++ ) {', ' expected  ;  before  )  token'], 7565: ['\tID = ID ( CONST + ( ID * ID / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 7566: ['\tint ID , ID , ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 7567: ['  ID = ID [ ID ] ;', '  ID  undeclared '], 7568: ['}', ' expected declaration or statement at end of input'], 7569: ['printf ( STRING )', ' expected  ;  before  return '], 7570: ['\tID [ ID ] [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 7571: ['\t    for ( ID = CONST ; ID <= ID - CONST ( ID - CONST ) ; ID ++ ) {', ' called object is not a function or function pointer'], 7572: ['    for ( ID = CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 7573: ['        printf ( STRING )', ' expected  ;  before  while '], 7574: ['            printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 7575: [' printf ( STRING )', ' expected  ;  before  return '], 7576: ['int ID = ID ;', ' redeclaration of  ID  with no linkage'], 7577: ['\t{ if ( ID [ CONST ] == CONST || ID [ CONST ] == CONST || ID [ CONST ] == CONST || ID ( CONST ) == CONST )', ' called object  ID  is not a function or function pointer'], 7578: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 7579: ['        scanf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 7580: ['    printf ( STRING , ID [ CONST ] [ CONST ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 7581: ['printf ( STRING )', ' expected  ;  before  return '], 7582: ['        int ID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 7583: ['    printf ( STRING , ID )    ', ' expected  ;  before  return '], 7584: ['\t                for ( ID = ID ; ID < strlen ( ) ; ID ++ )', ' too few arguments to function  strlen '], 7585: ['\t    if ( ID % CONST = CONST )', ' lvalue required as left operand of assignment'], 7586: ['\t    ID = ( ( ID - ID ) * ( ID ) + ( ID - ID + CONST ) * ( ID + CONST ) + ... + ( ID ) * ( ID + CONST ) ) / CONST ;', ' expected expression before  ...  token'], 7587: ['scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 7588: ['}', ' expected declaration or statement at end of input'], 7589: ['printf ( STRING )', ' expected  ;  before  return '], 7590: ['\t   if ( ID ( ID [ ID ] == CONST ) ) {', ' too few arguments to function  ID '], 7591: ['    printf ( STRING )', ' expected  ;  before  return '], 7592: ['\tID = ( int * ) calloc ( ID * sizeof ( int ) ) ;', ' too few arguments to function  calloc '], 7593: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 7594: ['    else return ( ID ( ID - CONST ) + ID ( ID - CONST ) )', ' expected  ;  before  }  token'], 7595: ['    printf ( STRING )', ' expected  ;  before  return '], 7596: ['    ID = ( CONST / CONST * ( ID - CONST ) = CONST ) ;', ' lvalue required as left operand of assignment'], 7597: ['    else if ( )', ' expected expression before  )  token'], 7598: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 7599: ['}', ' expected declaration or statement at end of input'], 7600: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 7601: ['    float ID = CONST , ID = CONST', ' expected  ,  or  ;  before  printf '], 7602: ['        ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 7603: ['\t    for ( int ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 7604: ['    scanf ( STRING , ID , ID , ID )', ' expected  ;  before  printf '], 7605: ['        ID = CONST', ' expected  ;  before  for '], 7606: ['        ID = getchar ( ID ) ;', ' too many arguments to function  getchar '], 7607: ['scanf ( STRING , & ID )', ' expected  ;  before  printf '], 7608: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 7609: ['\tscanf ( STRING , ID . ID ) ;', ' request for member  ID  in something not a structure or union'], 7610: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 7611: ['    ID ( ID , ID )', ' expected  ;  before  if '], 7612: ['}', ' expected declaration or statement at end of input'], 7613: ['( ID % CONST == CONST && ID % CONST != CONST ) ? ( ID = ID + CONST ) : ( ID = ID + CONST )', ' expected  ;  before  printf '], 7614: ['\t    for ( ID = ID ; ID ++ ) {', ' expected  ;  before  )  token'], 7615: ['     gets ( ID [ ] ) ;', ' expected expression before  ]  token'], 7616: ['\tID = ID ( CONST + ( ID * ID / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 7617: ['    int ID = CONST', ' expected  ,  or  ;  before  printf '], 7618: ['    ID ( ID , CONST , CONST ) ;', ' too few arguments to function  ID '], 7619: ['           while ( ( ID [ ID ] == ID [ ID ] ) && ID < ID )', '  ID  undeclared '], 7620: ['  CHART = ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ;', ' lvalue required as left operand of assignment'], 7621: ['        { ID [ ID ] = ID [ ID ] * ( ID - ID ) } ;                              ', ' expected  ;  before  }  token'], 7622: ['    printf ( STRING , % ID [ ID / CONST ] ) ;', ' expected expression before  %  token'], 7623: ['\t        printf ( STRING , ID [ ID -- ] )', ' expected  ;  before  }  token'], 7624: ['    char * ID = & ID [ CONST ] [ CONST ] ;', ' redefinition of  ID '], 7625: ['  ID = CONST * ID * ID * ID * ;', ' expected expression before  ;  token'], 7626: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 7627: ['  ID = ID * ID ^ ID ;', ' invalid operands to binary ^ '], 7628: ['        printf ( STRING , * ( ID + ID ) , * ( ID + ID - ID - CONST ) )', ' expected  ;  before  if '], 7629: ['    ID ( ID , ID , CONST , ID , ID , CONST ) ;', ' too few arguments to function  ID '], 7630: ['    int ID , ID , ID = CONST , ID = CONST , ID , ID ;', ' redeclaration of  ID  with no linkage'], 7631: ['    ID ++    ', ' expected  ;  before  }  token'], 7632: ['    ( ID * ID + ID * ID == ID * ID ) || ( ID * ID + ID * ID == ID * ID ) || ( ID * ID + ID *= = ID * ID )', ' expected expression before  =  token'], 7633: ['        ID ++', ' expected  ;  before  }  token'], 7634: ['    ID = ID % CONST                                                                 ', ' expected  ;  before  for '], 7635: ['       printf ( STRING , ID , ID - ID )', ' expected  ;  before  ID '], 7636: ['    printf ( STRING )', ' expected  ;  before  return '], 7637: ['  { printf ( STRING , ID )', ' expected  ;  before  return '], 7638: ['    ID = ID * ID [ ID ] ;', '  ID  undeclared '], 7639: ['      if ( ID ( ID , ID ( ID ) , ID ) == CONST )', '  ID  undeclared '], 7640: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 7641: ['            if ( * ( ID . ID + ID ) == * ( ID . ID + ID ) )', ' expected expression before  }  token'], 7642: ['        ID = CONST - ID ( ID -> ID ) ;', '  ID  {aka  struct part } has no member named  ID '], 7643: ['\t float ID = CONST * CONST * CONST ;                                                         float ID = CONST  ;     float ID ;    ID = ID * ID ^ CONST ;                                                    printf ( STRING , ID ) ; ', ' invalid operands to binary ^ '], 7644: ['       if ( ID [ ID ] == / CONST )', ' expected expression before  ID  token'], 7645: ['        printf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 7646: ['int ID [ ID * ID ] ;', ' conflicting types for  ID '], 7647: ['    return ID + ID ( ID , ID , ID - CONST ) ;', ' too few arguments to function  ID '], 7648: ['    printf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 7649: ['int ID', ' expected  ;  before  int '], 7650: [' if ( ( ID <= ID ) && ( ID <= ID ) && ( ( ID % CONST ) = CONST ) ) {', ' lvalue required as left operand of assignment'], 7651: ['                    ID ++', ' expected  ;  before  }  token'], 7652: ['    ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 7653: ['          if ( ID [ ID , ID ] == - ID [ ID , ID ] )', ' wrong type argument to unary minus'], 7654: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 7655: ['    printf ( ID ) ;', ' incompatible type for argument 1 of  printf '], 7656: ['\tID ( ID , ID , ) ;', ' expected expression before  )  token'], 7657: ['\t    ID [ ID ] = ID [ ID + CONST ] ;', ' assignment to expression with array type'], 7658: ['       ( int ) ID [ ID ] = ( int ) ID [ ID ] + ( int ) CHARST - CONST ;', ' lvalue required as left operand of assignment'], 7659: ['        if ( ID [ ID ] == CHARNST || ID [ ID ] == CHART || ID [ ID ] == CHART ) {', ' empty character constant'], 7660: ['        else if ( ID ! ID )', ' expected  )  before  !  token'], 7661: ['        ID = getchar ( )', ' expected  ;  before  }  token'], 7662: ['        if ( * ID == ID [ CONST ] ) {', ' invalid operands to binary == '], 7663: ['        return ID || ID                ', ' expected  ;  before  }  token'], 7664: ['printf ( STRING ID , ID , ID , ID , ID , ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 7665: ['    ID = ( ID . ID - ID . ID ) * ( ID . ID - ID . ID ) + ( ID . ID - ID . ID ) * ( ID . ID - ID . ID ) ;', '  ID  undeclared '], 7666: ['         ID = CHARST CHARST ;', ' expected  ;  before  } '], 7667: ['\t            continue ID ;', ' expected  ;  before  ID '], 7668: ['\t        ID [ ID ] = ID [ ID ] ID [ ID ] ;', ' expected  ;  before  ID '], 7669: ['               ID = ID + ID [ ID ] * ID [ ID ]', ' expected  ;  before  break '], 7670: ['    scanf ( STRING , ID )', ' expected  ;  before  for '], 7671: ['               if ( ID [ ID > ID [ ID ] )', ' expected  ]  before  )  token'], 7672: ['\tID ( ID ) ;', ' too few arguments to function  ID '], 7673: ['    scanf ( STRING ID ) ;', ' expected  )  before  ID '], 7674: ['}', ' expected declaration or statement at end of input'], 7675: ['\t    printf ( STRING , ID [ ID ] ID [ ID ] ID [ ID ] ID [ ID ] ID [ ID ] ID [ ID ] ID [ ID ] ) ;', ' expected  )  before  ID '], 7676: ['    ID = ID ( ID ) ;', '  ID  undeclared '], 7677: ['    if ( ID == ID )', '  ID  undeclared '], 7678: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 7679: ['# ID < ID . ID >', ' invalid preprocessing directive #incllude; did you mean #include?'], 7680: ['   if ( ID == ID )', '  ID  undeclared '], 7681: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 7682: [' if ( ID == ID + ID && ID = ID )', ' lvalue required as left operand of assignment'], 7683: ['   gets ( ID )', ' expected  ;  before  ID '], 7684: ['    for                                                      ', ' expected  (  before  {  token'], 7685: ['   return ID ( ( ID + CONST , ID , ID ) || ( ID + CONST , ID , ID ) ) ; }', ' too few arguments to function  ID '], 7686: ['\t   ID [ ID ] = ID ( ID ) ;', ' called object  ID  is not a function or function pointer'], 7687: ['\tif ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST || ID CHARST )', ' expected  )  before  u '], 7688: ['        return ID ( ID + CONST , ID ) ID ;', ' expected  ;  before  ID '], 7689: ['\telse ( ID = CONST ) { ', ' expected  ;  before  {  token'], 7690: ['        scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 7691: [' printf ( STRING , ID , ID )', ' expected  ;  before  return '], 7692: ['        for ( int ID = ID + CONST ; ID ++ )', ' expected  ;  before  )  token'], 7693: ['\tfor ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 7694: ['        while ( ID [ ID ] = < ID [ ID - CONST ] && ID <= ID )', ' expected expression before  <  token'], 7695: ['printf ( STRING ID double ID STRING ) ;', ' expected  )  before  ID '], 7696: ['        return CONST', ' expected  ;  before  }  token'], 7697: ['   for ( int ID = CONST ; ID [ ID ] != CHART , ID ++ ) {', ' expected  ;  before  )  token'], 7698: ['    ID [ ID ] = ID ;', '  ID  undeclared '], 7699: ['    ID = ( char * ) malloc ( sizeof ( char ) * ( CONST ) )', ' expected  ;  before  scanf '], 7700: ['\tif ( ID [ ID ] != char ) {', ' expected expression before  CHAR '], 7701: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 7702: ['        & ID [ ID ] = ( char * ) ID ( sizeof ( char ) * ID ) ;', ' lvalue required as left operand of assignment'], 7703: ['    for ( int ID = CONST ; ID < ID ; ID ++ ) printf ( STRING , ID + ID -> ID ) ;', ' invalid type argument of  ->  '], 7704: ['    ID = ID ( ID , ID , ID ) ;', ' called object  ID  is not a function or function pointer'], 7705: ['        ID ( ID , ID - CONST , ID + CONST ) ', ' expected  ;  before  else '], 7706: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 7707: ['}', ' expected identifier or  (  before  }  token'], 7708: [' int ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 7709: ['      ID ( ID [ ID ] == ID [ CONST ] ) {', ' expected  ;  before  {  token'], 7710: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 7711: ['    else if ( ID . ID - CONST = > CONST && ID [ ( ID . ID ) - CONST ] [ ( ID . ID ) ] == CONST )          ', ' expected expression before  >  token'], 7712: ['    printf ( STRING )', ' expected  ;  before  return '], 7713: ['\t    ID = CONST ID + ( ID % CONST ) ;', ' fixed-point types not supported for this target'], 7714: ['    ID = ( int * ) malloc ( sizeof ( int ) * ID ) ;', '  ID  undeclared '], 7715: ['\tif ( int ID ( CONST ) )', ' expected expression before  int '], 7716: ['    ID', ' expected  ;  before  return '], 7717: ['    printf ( STRING )', ' expected  ;  before  return '], 7718: ['\telse if ( ( ID = CONST ) && ( ID [ CONST ] = CONST ) && ( ) )', ' expected expression before  )  token'], 7719: ['    ID = ID * ID - CONST * ID * ID', ' expected  ;  before  printf '], 7720: ['         break', ' expected  ;  before  case '], 7721: ['    int ID , ID ;', ' redeclaration of  ID  with no linkage'], 7722: ['    if ( ID % CONST = CONST )', ' lvalue required as left operand of assignment'], 7723: ['  struct ID ID = ( ID , ID ) ;', ' invalid initializer'], 7724: ['   ID ID = ID ( ID , ID ) ;', ' unknown type name  ID ; did you mean  int ?'], 7725: ['    for ( ID = CONST ; ID != CONST ; ID ++ ) ID [ ID ] = CHARNST ; ', ' empty character constant'], 7726: ['}', ' expected declaration or statement at end of input'], 7727: ['while ( ID < ID - CONST ) {', '  ID  undeclared '], 7728: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7729: ['\t    ID = ID -> ID', ' expected  ;  before  }  token'], 7730: ['    ID = ( int * ) malloc ( CONST * sizeof ( int ) )', ' expected  ;  before  scanf '], 7731: ['    ID ( ID + CONST , ID + ID [ ID ] , ID )', ' expected  ;  before  ID '], 7732: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 7733: ['     ID ( ID + CONST , ID - CONST ) ;', '  ID  undeclared '], 7734: ['printf ( STRING . ) ;', ' expected identifier before  )  token'], 7735: ['    printf ( STRING )', ' expected  ;  before  return '], 7736: ['\t        printf ( STRING )', ' expected  ;  before  ID '], 7737: ['    ID = ( ID * ID ) - ( CONST * ID ) + CONST', ' expected  ;  before  ID '], 7738: ['    ID = ID ;', '  ID  undeclared '], 7739: ['    ID = ID ( ID + CONST , ID - CONST , ID )', ' expected  ;  before  if '], 7740: ['\tif ( ID == CONST || ID == CONST || ID = CONST ) printf ( STRING ) ;', ' lvalue required as left operand of assignment'], 7741: ['printf ( STRING ID ) ;', ' expected  )  before  ID '], 7742: ['    float ID = ID ( CONST + ID * ID / CONST ) ;                                                     ', ' called object  ID  is not a function or function pointer'], 7743: ['\tchar ID = * ;', ' expected expression before  ;  token'], 7744: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 7745: ['\tID = ID ;', ' assignment to expression with array type'], 7746: ['\twhile ( ID [ ID ] !=\\ CONST ) {', ' stray  \\  in program'], 7747: ['\t} while ( ID [ ID - CONST ] != ID )', ' expected  ;  before  printf '], 7748: ['\tprintf ( STRING , ID , ID , ID , ID , ) ;', ' expected expression before  )  token'], 7749: ['\tprintf ( STRING , ++ ID ++ ) ;', ' lvalue required as increment operand'], 7750: ['\tscanf ( STRING , & ID , & ID & , ID ) ;', ' expected expression before  ,  token'], 7751: ['if ( ID > ID || ID = ID ) {', ' lvalue required as left operand of assignment'], 7752: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID )', ' expected  ;  before  ID '], 7753: ['\t    for ( int ID = CONST ; ID , = ID ; ID ++ )', ' expected expression before  =  token'], 7754: ['\tprintf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 7755: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 7756: ['        else ( ID / CONST == CONST ) {', ' expected  ;  before  {  token'], 7757: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 7758: ['scanf ( STRING , & ID , & ID , & ID , & ID )', ' expected  ;  before  if '], 7759: ['        ID  = - ( ID )', ' expected  ;  before  }  token'], 7760: ['    printf ( STRING , ID , ID , ID , ID , ID )', ' expected  ;  before  return '], 7761: ['    int ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 7762: ['    for ( ID = CONST ; ID = < ID ; ID ++ ) {', ' expected expression before  <  token'], 7763: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 7764: ['    int ID = ID ( ID ) ;', ' redeclaration of  ID  with no linkage'], 7765: ['        ID ++ }', ' expected  ;  before  }  token'], 7766: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 7767: ['    ID ( ID , ID , CONST , ID [ ] ) ;', ' expected expression before  ]  token'], 7768: ['       ID = ID ( ID , ID ) ;', ' void value not ignored as it ought to be'], 7769: ['    }', ' expected declaration or statement at end of input'], 7770: ['        ID [ ] = CHAR;', ' expected expression before  ]  token'], 7771: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 7772: ['        ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 7773: ['    ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 7774: ['    float ID = ID ( ID ) ;', '  ID  undeclared '], 7775: ['    printf ( STRING )', ' expected  ;  before  return '], 7776: ['{ printf ( STRING , STRING )', ' expected  ;  before  return '], 7777: ['     int ID = ID ( ID , ID , ID )', ' expected  ,  or  ;  before  {  token'], 7778: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 7779: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 7780: ['    ID = ID ( CONST , CONST , ID , ID )', ' expected  ;  before  printf '], 7781: ['   int ID = ID ( ID ) ;', ' void value not ignored as it ought to be'], 7782: ['        if ( * ( ID + ID ) >= CHARST ) && ( * ( ID + ID ) <= CHARST )', ' expected identifier before  (  token'], 7783: ['    ID ++', ' expected  ;  before  while '], 7784: ['    ID [ ] = ID ;', ' expected expression before  ]  token'], 7785: ['\t    while ( ID = CHARST && ID = CHART ) {', ' lvalue required as left operand of assignment'], 7786: ['if ( ID % CONST != = CONST )          ', ' expected expression before  =  token'], 7787: ['                        { ID ++ }', ' expected  ;  before  }  token'], 7788: ['    ID = ID ;', " incompatible types when assigning to type  struct snake *  from type 'struct snake'"], 7789: ['     {  scanf ( STRING , ID . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 7790: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 7791: ['     if ( CONST = < ID && ID <= CONST )', ' expected expression before  <  token'], 7792: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 7793: ['\tID [ CONST ] = ID ;', '  ID  undeclared '], 7794: ['ID = CONST * CONST ^ CONST ;', ' invalid operands to binary ^ '], 7795: ['    break ;', ' break statement not within loop or switch'], 7796: ['\tID ( ID ) ;', ' too few arguments to function  ID '], 7797: ['    ID = CONST', ' expected  ;  before  ID '], 7798: ['        ID = ID -> ID ;', '  struct node  has no member named  ID '], 7799: ['}', ' expected declaration or statement at end of input'], 7800: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 7801: ['    printf ( STRING\\ ) ;', ' stray  \\  in program'], 7802: ['    gets ( ) ;', ' too few arguments to function  gets '], 7803: ['ID = ID ( CONST )', ' expected  ;  before  printf '], 7804: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 7805: ['\t    else { ID ++ }', ' expected  ;  before  }  token'], 7806: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 7807: ['\telse ( ID >= CONST && ID >= CONST ) {', ' expected  ;  before  {  token'], 7808: ['    int ID ;', ' redeclaration of  ID  with no linkage'], 7809: ['        break', ' expected  ;  before  }  token'], 7810: ['\tif ', ' expected  (  before  return '], 7811: [' for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 7812: ['        break ;', ' break statement not within loop or switch'], 7813: ['     getchar ( ID ) ;', ' too many arguments to function  getchar '], 7814: ['            { printf ( STRING , ) ; return ; }', ' expected expression before  )  token'], 7815: ['\t        printf ( STRING , ID [ ] ) ; }', ' expected expression before  ]  token'], 7816: ['    printf ( STRING , ID , ID )', ' expected  ;  before  }  token'], 7817: ['    ID = ( int * ) malloc ( ID * sizeof ( int ) ) ;', ' invalid operands to binary * '], 7818: ["\tID [ CONST ] = CHARST ; ID [ CONST ] = '\\';", " missing terminating ' character"], 7819: ['    if ( ( ID * ID ) + ( ID * ID ) = ( ID * ID ) ) {', ' lvalue required as left operand of assignment'], 7820: ['\tint ID , ID , ID [ CONST ] ; ID [ CONST ] ;', '  ID  undeclared '], 7821: ['    ID = ID * ID ;    ', '  ID  undeclared '], 7822: ['    for ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 7823: ['    int ID = CONST ID , ID = CONST , ID ;', ' invalid suffix "x" on integer constant'], 7824: ['            if ( ( ID == ( ID * ( ID - CONST ) ) / ) && ( ID >= ID ) )                                                                     ', ' expected expression before  )  token'], 7825: ['\tfor ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 7826: ['\t    for ( ID = ID ; ID < ID + ID ; ID ++ ) {', '  ID  undeclared '], 7827: ['    ID ( ID , ID )', ' expected  ;  before  for '], 7828: ['   `    {', ' stray  `  in program'], 7829: ['\tID = ( ID != CONST || ID != CONST || ID != CONST )', ' expected  ;  before  if '], 7830: ['    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 7831: ['    ID = ID ( CONST + ( ( ID * ID ) / CONST ) ) ;                              ', ' called object  ID  is not a function or function pointer'], 7832: ['\tprintf ( STRING , ID ( ID - CONST ) == CONST ? STRING : STRING ) ;', ' too few arguments to function  ID '], 7833: ['# define CONST CONST', ' macro names must be identifiers'], 7834: ['  if ( ID == ID ) {', '  ID  undeclared '], 7835: ['    ID = ID ;', '  ID  undeclared '], 7836: ['    puts ( ID )', ' expected  ;  before  return '], 7837: ['      }', ' expected identifier or  (  before  }  token'], 7838: ['        if ( ( ID [ ID ] == ID [ ID ] ) ) && ( ID [ ID - CONST ] != ID [ ID ] ) {', ' expected identifier before  (  token'], 7839: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7840: ['                if ( ID == CONST )', ' expected expression before  }  token'], 7841: ['    printf ( STRING , ID CHARST ) ;', ' expected  )  before  ID '], 7842: ['            for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 7843: ['        for ( ID = CONST , ID = ID ; ( ID + ID ) = ID , ID <= ID , ID <= ID ; ID ++ , ID -- )', ' lvalue required as left operand of assignment'], 7844: ['    ID = ID', ' expected  ;  before  for '], 7845: ['            {   ID = ( ID [ ID ] - ID [ ID ] ) / ( ID [ ID ] - ID [ ID ] )', ' expected  ;  before  if '], 7846: ['\t        if ( ID [ ID ] > ID [ ID ] && ID [ ID ] != CONST && ID [ ID ] != = CONST )', ' expected expression before  =  token'], 7847: ['\tint ID , ID , ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 7848: ['}', ' expected declaration or statement at end of input'], 7849: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 7850: ['\t    ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 7851: ['\tprintf ( STRING )', ' expected  ;  before  for '], 7852: ['}', ' expected declaration or statement at end of input'], 7853: ['printf ( STRING )', ' expected  ;  before  }  token'], 7854: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7855: ['\t    ID = pow ( CONST , ID - ID )', ' expected  ;  before  printf '], 7856: ['\tID ( ID [ ] , ID [ ] ) ;', ' expected expression before  ]  token'], 7857: ['    scanf ( STRING , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 7858: ['     } ID [ ID , ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 7859: ['    return CONST * ( CONST ID - CONST ) * ID ( ID - CONST ) / ID + CONST ;', ' invalid suffix "n" on integer constant'], 7860: ['    ID ( ID , ID , CONST ) ;', ' too few arguments to function  ID '], 7861: ['    case CONST : printf ( STRING )', ' expected  ;  before  return '], 7862: ['        if ( ID % ID == CONST )', '  ID  undeclared '], 7863: ['        for ( ID = CONST ; ID < ID )', ' expected  ;  before  )  token'], 7864: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7865: ['printf ( STRING )', ' expected  ;  before  return '], 7866: ['       putchar ( ID [ ID ] )', ' expected  ;  before  }  token'], 7867: ['scanf ( STRING )', ' expected  ;  before  ID '], 7868: ['\twhile ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 7869: ['    if ( ( ID * ID ) + ( ID * ID ) = ( ID * ID ) || ( ID * ID ) + ( ID * ID ) = ( ID * ID ) || ( ID * ID ) + ( ID * ID ) = ( ID * ID ) )', ' lvalue required as left operand of assignment'], 7870: ['    while ( ID [ ID ] == CHARNST ) {', ' empty character constant'], 7871: ['printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 7872: ['    if ( ID == ( ID - CONST ) && ID == CONST ) {', '  ID  undeclared '], 7873: ['    for ( ID = CONST ; ID <= ID || ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 7874: ['  printf ( STRING ID , ID ) ;  ', ' expected  )  before numeric constant'], 7875: ['    scanf ( STRING , ID )', ' expected  ;  before  scanf '], 7876: ['scanf ( STRING , & ID , & ID & ID ) ;', ' invalid operands to binary & '], 7877: ['    for ( ID = CONST ; ID < ; ID ++ )', ' expected expression before  ;  token'], 7878: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 7879: ['                * ( ID + ID ) = * ( ID + ID ) ; ID ++ ; ID ++ ; printf ( STRING , * ( ID + ID ) , * ( ID + ID ) )', ' expected  ;  before  }  token'], 7880: ['    char ID [ ] = STRING', ' expected  ,  or  ;  before  printf '], 7881: ['        if ( * ( ID ) < * ( ID [ ID ] ) )', ' invalid type argument of unary  *  '], 7882: ['        printf ( STRING )', ' expected  ;  before  }  token'], 7883: ['           printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 7884: ['\t        printf ( STRING )     ', ' expected  ;  before  }  token'], 7885: ['    int ID = ID', ' expected  ,  or  ;  before  while '], 7886: ['\tprintf ( STRING )', ' expected  ;  before  return '], 7887: ['\t  printf ( STRING , CONST ID ) ;  ', ' invalid suffix "Gg4Aa" on integer constant'], 7888: ['      else if ( ID * ID + ID * ID = ID * ID ) {', ' lvalue required as left operand of assignment'], 7889: ['\t        ID [ ID ] = ID', ' expected  ;  before  }  token'], 7890: ['        ID = ID * ( ID - CONST )', ' expected  ;  before  ID '], 7891: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 7892: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 7893: ['    printf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 7894: ['\t    scanf ( STRING )', ' expected  ;  before  }  token'], 7895: ['     printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 7896: ['       ID = ID [ ID ] ;', ' incompatible types when assigning to type  int  from type  ID  {aka  struct birth_data }'], 7897: ['        ` printf ( STRING , ID [ ID ] ) ;', ' stray  `  in program'], 7898: ['    for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 7899: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 7900: ['}', ' expected declaration or statement at end of input'], 7901: ['ID = ID', ' expected  ;  before  printf '], 7902: ['\tint ID = CONST ;', ' conflicting types for  ID '], 7903: ['}', ' expected declaration or statement at end of input'], 7904: ['    ID = CONST', ' expected  ;  before  {  token'], 7905: ['\t            printf ( STRING ID [ ID ] . ID ) ;', ' expected  )  before  ID '], 7906: ['       printf ( STRING , ID )', ' expected  ;  before  }  token'], 7907: ['}', ' expected declaration or statement at end of input'], 7908: ['\tprintf ( STRING , ID ( ID , STRING ) ) ;', '  ID  undeclared '], 7909: ['        ID = ID ( ID , ID - CONST , ID ) ;', ' too many arguments to function  ID '], 7910: ['    float ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 7911: ['          { if ID [ ID ] == ID [ ID ] { ID = ID + CONST ; }', ' expected  (  before  ID '], 7912: ['int ID = ID * ID - CONST ID * ID ;', ' invalid suffix "a" on integer constant'], 7913: ['            ID ( ( ID + ID - CONST , ID + ID ) ) ;', ' too few arguments to function  ID '], 7914: ['                        ID ++', ' expected  ;  before  }  token'], 7915: ['\t  printf ( STRING )', ' expected  ;  before  return '], 7916: ['  printf ( STRING , ID )', ' expected  ;  before  for '], 7917: ['    printf ( STRING , * ID [ CONST ] ) ;', ' invalid type argument of unary  *  '], 7918: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 7919: ['            printf ( STRING ID + ID + CONST ) ;', ' expected  )  before  ID '], 7920: ['        printf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 7921: ['    int ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 7922: ['\t    ID = ID + ID [ ID ] ;', '  ID  undeclared '], 7923: ['    printf ( STRING\\ ) ;', ' stray  \\  in program'], 7924: ['    char ID = ID ;', '  ID  undeclared '], 7925: ['            ( * ID [ ID ] . ID ) = & ID [ ID + CONST ] ;', ' incompatible types when assigning to type  struct node  from type  struct node * '], 7926: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 7927: [' printf ( STRING , ID )', ' expected  ;  before  break '], 7928: ['      printf ( STRING , ID , ID + CONST , ID + CONST ) ;', '  ID  undeclared '], 7929: ['\tfor ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 7930: ['    scanf ( STRING , & ID , & ID , & ID ) :', ' expected  ;  before  :  token'], 7931: ['        ID ( ID , ID ) ;', ' too few arguments to function  ID '], 7932: ['        ID = ( ID * CONST )', ' expected  ;  before  ID '], 7933: ['\tif ( ID >= CONST && ID <= CONST )', '  ID  undeclared '], 7934: ['    }  ', ' expected identifier or  (  before  }  token'], 7935: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 7936: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 7937: ['\tfloat ID = ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ;', ' expected  ,  or  ;  before  )  token'], 7938: ['   printf ( STRING , ID [ ID ] . ID . ID ) ;                                                        ', '  list_entries[i].head  is a pointer; did you mean to use  -> ?'], 7939: ['    ID ( ID - CONST )', ' expected  ;  before  }  token'], 7940: ['\tID + ID = ID ;', ' lvalue required as left operand of assignment'], 7941: ['}', ' expected  ; , identifier or  (  before  int '], 7942: ['          printf ( STRING )', ' expected  ;  before  }  token'], 7943: ['\tif ( ID % CONST == CONST )  && ( ( CHAR- CHAR) = ( CHARST - CHARST ) ) ,                                                                                                                 ', ' expected identifier before  (  token'], 7944: ['    ID = ID - CONST', ' expected  ;  before  }  token'], 7945: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 7946: ['      { printf ( STRING )', ' expected  ;  before  }  token'], 7947: ['  ID = ( ID - ID ) / ( ID - ID ) ;', '  ID  undeclared '], 7948: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 7949: ['   ID [ ID ] ++ ; ID ( ID , ID - CONST , ++ ID ) ;', '  ID  undeclared '], 7950: ['     if ( ID ( ID , ID ) )', ' too few arguments to function  ID '], 7951: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 7952: ['\t        printf ( STRING )', ' expected  ;  before  printf '], 7953: ['                if ( ID [ ID + ID ] == ID [ ID ] )', ' expected expression before  else '], 7954: ['\t    ID [ ID ] = ID ;', '  ID  undeclared '], 7955: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 7956: ['    else', ' expected expression before  }  token'], 7957: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 7958: ['        ID ++', ' expected  ;  before  }  token'], 7959: ['    printf ( STRING , ID - ( ID - CONST ) , ID , ID ) ;', '  ID  undeclared '], 7960: ['    if (  ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) && ( ID [ ID + CONST ] >= CHARST && ID [ ID + CONST ] <= CHARST ) && ( ID [ ID + CONST ] >= CHARST && ID [ ID + CONST ] <= CHARST ) && ID [ ID + CONST ] == ID ( ID [ ID + CONST ] ) ) )', ' expected statement before  )  token'], 7961: ['    int ID , ID , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 7962: ['     ID = CONST', ' expected  ;  before  while '], 7963: ['      if ( ( ID [ CONST * ID ] == ID ) && ( ID [ CONST * ID + CONST ] == ID ) && ( ID [ CONST * ID + CONST ] == ) )', ' expected expression before  )  token'], 7964: ['            if ( * ( ID + ID ) == * ( ID + ID ) ) )', ' expected statement before  )  token'], 7965: ['                 ID ( * ( ID + ID ) , * ( ID + ID + CONST ) ) ;', ' too few arguments to function  ID '], 7966: ['\tscanf ( STRING ID , & ID , & ID ) ;', ' expected  )  before  ID '], 7967: ['    printf ( STRING )', ' expected  ;  before  return '], 7968: ['    ID ( ID , ID , ID , CONST , CONST )', ' expected  ;  before  return '], 7969: ['     ID [ ID ] = ID ;', '  ID  undeclared '], 7970: ['\tfor ( ID = CONST ; ID < ID ; ID + )', ' expected expression before  )  token'], 7971: ['        scanf ( STRING , & ( ID + ID ) ) ;', ' lvalue required as unary  &  operand'], 7972: ['    ID = ID -> ID', ' expected  ;  before  }  token'], 7973: ['    else if ( ( ID > ID ) && && ( ID > ID ) )', ' expected identifier before  (  token'], 7974: ['   ID = ID * ID', ' expected  ;  before  printf '], 7975: ['scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 7976: ['    ID = ( CONST * ID ) / CONST ;', '  ID  undeclared '], 7977: ['    ID = calloc ( CONST , sizeof ( double ) ) ; ', ' incompatible types when assigning to type  double  from type  void * '], 7978: ['    scanf ( STRING & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 7979: ['        ++ ID', ' expected  ;  before  }  token'], 7980: ['\t    if ( CONST <= ( ID [ CONST * ID ] ) <= CONST && CONST <= ( ID [ ( CONST * ID ) + CONST ] ) <= CONST )  )', ' expected statement before  )  token'], 7981: ['    printf ( STRING )', ' expected  ;  before  return '], 7982: ['\t   scanf ( STRING & ID [ ID ] ) ;   ', ' invalid operands to binary & '], 7983: ['\tscanf ( STRING , & ID [ ID ] )', ' expected  ;  before  scanf '], 7984: ['\tID ( ID , ID , CONST )', ' expected  ;  before  printf '], 7985: ['    printf ( STRING , sizeof ID / sizeof int ) ;', ' expected expression before  int '], 7986: ['    for ( ID = CONST , ; ID < ID ; ID ++ )', ' expected expression before  ;  token'], 7987: ['    return CHARNST ;', ' empty character constant'], 7988: ['    return ID * ID ;', '  ID  undeclared '], 7989: ['\t        ID = ID + CONST', ' expected  ;  before  }  token'], 7990: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 7991: ['    char ID [ ID ] ;', ' redeclaration of  ID  with no linkage'], 7992: ['    scanf ( STRING , & ID , & ID , & ID )', ' expected  ;  before  ID '], 7993: ['\t        { ID [ ID ] = ID [ ID ] ; ID ++ }', ' expected  ;  before  }  token'], 7994: ['            if ( ID [ ID ] != CONST ) { ID ( ID ) } ;', ' expected  ;  before  }  token'], 7995: ['      printf ( STRING )', ' expected  ;  before  return '], 7996: ['    printf * ( STRING , ID ) ;', ' invalid operands to binary * '], 7997: ['    ID ( STRING , CONST )', ' expected  ;  before  }  token'], 7998: ['    for ( ID = > ID ; ID <= ID ; ID = ID + CONST )', ' expected expression before  >  token'], 7999: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ ) {', '  ID  undeclared '], 8000: ['    ID = ID ( char ID [ CONST ] ) ;', ' expected expression before  CHAR '], 8001: ['           ID ++', ' expected  ;  before  }  token'], 8002: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 8003: ['    * ( ID + ID ) == * ( ID + CONST + ID ) ;', ' invalid operands to binary * '], 8004: ['                                    ID ( STRING ) } }', ' expected  ;  before  }  token'], 8005: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8006: ['\tID', ' expected  ;  before  return '], 8007: ['    ID', ' expected  ;  before  return '], 8008: ['}', ' expected declaration or statement at end of input'], 8009: ['            ID = CONST ;', '  ID  undeclared '], 8010: ['\tfor ( ID = CONST ; ID != CHART , ID ++ ) {', ' expected  ;  before  )  token'], 8011: ['\twhile ( )', ' expected expression before  )  token'], 8012: ['}', ' expected  ; , identifier or  (  before  int '], 8013: ['\t        printf ( STRING , ID [ ID + ID ] ) ;', '  ID  undeclared '], 8014: ['{ printf ( STRING ) }', ' expected  ;  before  }  token'], 8015: ['         printf ( STRING )', ' expected  ;  before  }  token'], 8016: ['int ID ;', ' redeclaration of  ID  with no linkage'], 8017: ['} }', ' expected identifier or  (  before  }  token'], 8018: ['        if ( ID [ ID ] == )', ' expected expression before  )  token'], 8019: ['\tint ', ' expected identifier or  (  before  return '], 8020: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 8021: ['           continue :', ' expected  ;  before  :  token'], 8022: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 8023: ['printf ( STRING CHARST ) ;', ' expected  )  before  ID '], 8024: ['int ID = CONST ; ID = CONST ;', '  ID  undeclared '], 8025: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 8026: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 8027: ['\t    if ( ID [ ID ] < CHARST || ID [ ID ] > CHARST ) { ID ++ }', ' expected  ;  before  }  token'], 8028: ['scanf ( STRING & ID , & ID , & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 8029: ['    if ( ID > ID )', '  ID  undeclared '], 8030: ['  for ( ID = CONST ; ID < ( ID - ID + CONST ) ; ID ++ ) ) {', ' expected statement before  )  token'], 8031: ['    float ID = ID * ( ( ID ) ^ CONST - ( ID ) ^ CONST ) / CONST ;', ' invalid operands to binary ^ '], 8032: ['    struct ID', ' expected identifier or  (  before  return '], 8033: ['\tscanf ( STRING , & ID )', ' expected  ;  before  if '], 8034: ['\t        ID [ ID ] = ID [ ID ] + ID [ ID - CONST ]', ' expected  ;  before  }  token'], 8035: ['       if ( ID [ ID ] = CHARST || ID [ ID ] = ID )', ' lvalue required as left operand of assignment'], 8036: ['  printf ( STRING ID [ CONST ] . ID . ID ) ;', ' expected  )  before  ID '], 8037: [' printf ( STRING , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 8038: ['    printf ( STRING , ( ID , ID ) ID ( ID , ID ) , ID ) ;                  ', ' expected  )  before  ID '], 8039: [' ID ( ID , ID )', ' expected  ;  before  return '], 8040: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 8041: ['     printf ( STRING )', ' expected  ;  before  }  token'], 8042: ['\t    if ( ( ID ) == = ( ID [ ID ] ) ) {', ' expected expression before  =  token'], 8043: ['      if ( ID [ ID ] [ ID ] == CONST )', ' expected expression before  }  token'], 8044: ['    if (  CHARCHARCHAR CHARCHARCHAR CHARCHARCHAR    {', ' lvalue required as left operand of assignment'], 8045: ['   scanf ( STRING ID ) ;', ' expected  )  before  ID '], 8046: ['    if ( ID >= ID >= ID >= ID ) || ( ID >= ID >= ID >= ID )', ' expected expression before  ||  token'], 8047: ['    else printf ( STRING , ID )', ' expected  ;  before  return '], 8048: ['\t if   printf ( STRING ) ;', ' expected  (  before  printf '], 8049: ['ID [ ID + CONST ] = CHART ;', '  ID  undeclared '], 8050: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 8051: ['    if ID = CONST ;', ' expected  (  before  ID '], 8052: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 8053: ['printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 8054: ['}', ' expected declaration or statement at end of input'], 8055: ['   int ID , ID = CONST , ID = CONST , ID , ID ;', ' redeclaration of  ID  with no linkage'], 8056: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 8057: ['\t    if ( ID = ID ) { printf ( STRING ) : } }', ' expected  ;  before  :  token'], 8058: ['\telse printf ( STRING ) ;', '  else  without a previous  if '], 8059: [' return ( ID ( ID , ID , ++ ID ) || ID ( ID , ID , ) ) ;   ', ' expected expression before  )  token'], 8060: ['        if ( ( ID [ ID ] == CHARNST ) || ( ID [ ID ] == CHART ) )', ' empty character constant'], 8061: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 8062: ['            ID = ID + ID [ ID ] [ ID ] ;', '  ID  undeclared '], 8063: ['\t    ID [ ID ] = ID ;', '  ID  undeclared '], 8064: ['    if ( ID % CONST == CONST ID ID % CONST == CONST ) {', ' expected  )  before  ID '], 8065: ['    printf ( STRING )', ' expected  ;  before  return '], 8066: ['    ID [ CONST ] [ CONST ] = CONST ;', ' subscripted value is neither array nor pointer nor vector'], 8067: ['\t    ID = ID ( ID [ ID ] ) ;', ' too few arguments to function  ID '], 8068: ['ID = CONST / CONST * ID ( ID * ID - ID * ID ) ;', ' called object  ID  is not a function or function pointer'], 8069: ['float ID = ID * ID * ;', ' expected expression before  ;  token'], 8070: ['                               else if', ' expected  (  before  {  token'], 8071: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 8072: ['       else', '  else  without a previous  if '], 8073: ['    } break ;    ', ' break statement not within loop or switch'], 8074: ['       ID = ID ( ID , ID ) ;', '  ID  undeclared '], 8075: ['\t        printf ( STRING , ID [ ID ] , ID [ ID ] ) ;', '  ID  undeclared '], 8076: ['\tID ( ID , ID , ID ) ;', '  ID  undeclared '], 8077: ['printf ( STRING ID , ID ) ;    ', ' expected  )  before  ID '], 8078: ['\t    ID ++', ' expected  ;  before  }  token'], 8079: ['    ID ( ID + CONST , ID + ID [ ID ] )', ' expected  ;  before  }  token'], 8080: ['            ID [ ID ] = CHART ;    ID [ ID ] = CHART ; ID = ID + CONST ; ID ++ ;', '  ID  undeclared '], 8081: ['\t   ID = ID + ID * pow ( CONST , ) ;', ' expected expression before  )  token'], 8082: ['}', ' expected declaration or statement at end of input'], 8083: [' for ( ID = CONST ; ID <= ID / CONST ; ID ++ )', '  ID  undeclared '], 8084: ['   if ( ( ID < ID ) || ( ID < ID ) ) , ', ' expected expression before  ,  token'], 8085: ['ID struct ID * ID', ' expected  ;  before  int '], 8086: ['     for ( ID = ; ID <= ID ; ID ++ ) {', ' expected expression before  ;  token'], 8087: ['        printf ( STRING )', ' expected  ;  before  }  token'], 8088: ['\t    if ( ID [ ID ] == ) {', ' expected expression before  )  token'], 8089: ['       if ( ID [ * ( ID + ID ) ] == CONST )', ' expected expression before  }  token'], 8090: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 8091: ['        scanf ( STRING & ID [ ID ] , & ID ) ;', ' invalid operands to binary & '], 8092: ['    for ( ID = CONST ; ID [ ID ] !=\\ ID ; ID + ID + CONST )', ' stray  \\  in program'], 8093: ['        scanf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 8094: ['printf ( STRING )', ' expected  ;  before  return '], 8095: ['\t\t    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 8096: ['    printf ( STRING , ID [ ] ) ; }', ' expected expression before  ]  token'], 8097: ['\tprintf ( STRING , )', ' expected expression before  )  token'], 8098: ['            if ( ID == ID - CONST && ID = CONST )', ' lvalue required as left operand of assignment'], 8099: ['           printf ( STRING )', ' expected  ;  before  }  token'], 8100: ['\t        printf ( STRING , ID [ ID ] [ ] ) ;', ' expected expression before  ]  token'], 8101: ['\t      ID = ID + CONST', ' expected  ;  before  }  token'], 8102: ['             ID = CONST  ', ' expected  ;  before  }  token'], 8103: ['    while ( ID !=\\ CONST )', ' stray  \\  in program'], 8104: ['        printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 8105: ['}', ' expected declaration or statement at end of input'], 8106: ['    int ID = ID ( ID , CONST ) ;', ' too few arguments to function  ID '], 8107: ['    scanf ( STRING ID ) ;', ' expected  )  before  ID '], 8108: ['       while ( ID [ ID ] == ID [ ID ] ) {', '  ID  undeclared '], 8109: ['    printf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 8110: ['                ID [ ID ] [ ID ] = CONST + ID ( ID [ ID - CONST ] [ ID ] , ID [ ID ] [ ID - CONST ] , ID [ ID - CONST ] [ ID - CONST ] )', ' expected  ;  before  if '], 8111: ['    printf ( STRING )', ' expected  ;  before  return '], 8112: ['    printf ( STRING )', ' expected  ;  before  return '], 8113: ['\t    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 8114: ['\t    ID = ID + CONST', ' expected  ;  before  }  token'], 8115: ['    }                                                                        printf ( STRING ID ) ;', ' expected  )  before  ID '], 8116: ['        for ( ID = CONST ; ID < ID ; ID ++ )', ' expected expression before  }  token'], 8117: ['\t            printf ( STRING ID ) ;', ' expected  )  before  ID '], 8118: [' ID [ CONST ] = ID [ ] ;', ' expected expression before  ]  token'], 8119: ['\t        printf ( STRING ) ; continue', ' expected  ;  before  }  token'], 8120: ['      ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 8121: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 8122: ['    ID = CONST * ID * ID * ID * ID ;', '  ID  undeclared '], 8123: ['    if ( ID == CONST )', '  ID  undeclared '], 8124: ['}', ' expected declaration or statement at end of input'], 8125: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  if '], 8126: ['    ID = ( ID % CONST == CONST && ID % CONST != CONST + ID % CONST == CONST && ID % CONST != CONST + ID % CONST == CONST && ID % CONST != CONST + ID % CONST == CONST && ID % CONST != CONST + ID % CONST == CONST && ID % CONST != CONST + ) ;', ' expected expression before  )  token'], 8127: ['\t    ID = ID - ID / CONST + CONST ;', '  ID  undeclared '], 8128: ['\tID ( ID , ID ) ;', '  ID  undeclared '], 8129: ['    scanf ( STRING STRING STRING STRING STRING STRING , & ID & ID & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 8130: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 8131: ['                    break', ' expected  ;  before  }  token'], 8132: ['\tchar * ID = ( char * ) malloc ( ID * sizeof ( char ) ) ;', '  ID  undeclared '], 8133: [' { scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 8134: ['   char ID [ ] [ ID ] ;   ', ' array size missing in  ID '], 8135: ['\t    free ( ID [ ID ] )', ' expected  ;  before  }  token'], 8136: ['    float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 8137: ['\t  ID ++ ;     ', '  ID  undeclared '], 8138: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 8139: ['\t    for ( ID = ID ; ID <= CONST ; ID ++ )', '  ID  undeclared '], 8140: ['    if ( ID == { STRING } && ID == { STRING } ) {', ' expected expression before  {  token'], 8141: ['                printf ( STRING )', ' expected  ;  before  }  token'], 8142: ['    printf ( STRING ID , ID ) ;', ' expected  )  before numeric constant'], 8143: [' printf ( STRING , ID )', ' expected  ;  before  return '], 8144: ['        for ( ID = ID ; ID < ID ; ID = ID + ( ID ++ ) ++ )', ' lvalue required as increment operand'], 8145: ['    int ID = ( ID + ID ) / CONST', ' expected  ,  or  ;  before  if '], 8146: ['\t    ID [ ID ] = ( ID / ( ID ( CONST , ( ID - CONST ) ) ) ) ;', '  ID  undeclared '], 8147: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 8148: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 8149: ['    ID = ( int * ) malloc ( ID * ( sizeof ( int ) ) ) ;', ' assignment to expression with array type'], 8150: ['printf ( / ID ) ;', ' expected expression before  ID  token'], 8151: ['    printf ( STRING , sizeof ( long float ) ) ;', ' both  long  and  float  in declaration specifiers'], 8152: ['\t    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 8153: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 8154: ['    else', '  else  without a previous  if '], 8155: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 8156: ['    ID = ( struct ID ) malloc ( ID * sizeof ( struct ID ) ) ;', ' conversion to non-scalar type requested'], 8157: ['        ID = ID - CONST + ( ID % CONST ) ;', '  ID  undeclared '], 8158: ['        else printf ( STRING , ID )', ' expected  ;  before  ID '], 8159: ['    ID = ID + ID [ CONST ] CONST - CONST ;', ' expected  ;  before numeric constant'], 8160: ['        scanf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 8161: ['printf ( STRING . ) ;\t', ' expected identifier before  )  token'], 8162: ['    ID [ CONST ] = getchar ( ) ;', '  ID  undeclared '], 8163: ['    for ( ID = CONST ; ID <= ID - CONST ; ID ++ ) printf ( CHARST ) :', ' expected  ;  before  :  token'], 8164: ['    ID ( ID , ID , ID [ ID ] [ ID ] ) ;', ' too many arguments to function  ID '], 8165: ['        ID = ID + ( ID - CONST ) ;', '  ID  undeclared '], 8166: ['\tID = ID ( int ID ) ;', ' expected expression before  int '], 8167: ['            return ID ( ID , ID - ID / CONST , ID + ID / CONST )', ' expected  ;  before  }  token'], 8168: ['        for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 8169: ['\tID [ CONST ] = CONST ; ID [ CONST ] = CONST ; ID = CONST', ' expected  ;  before  while '], 8170: ['         { if ( ID [ ID ] > ID [ ID ] )', '  ID  undeclared '], 8171: ['\telse ( ID > CONST )', ' expected  ;  before  {  token'], 8172: ['\tfor ( ID = CONST ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 8173: ['  return ID ( ID , ID ) ;', ' too few arguments to function  ID '], 8174: ['        ID = ID + ( ID ( ID ) == CONST && ID ( ID ) == CONST )', ' expected  ;  before  ID '], 8175: ['    ID == CONST', ' expected  ;  before  return '], 8176: ['      printf ( STRING )', ' expected  ;  before  }  token'], 8177: ['    scanf ( STRING , & ID , % ID , & ID , & ID ) ;', ' expected expression before  %  token'], 8178: ['        if ( ID [ ID ] != CHARNST )', ' empty character constant'], 8179: ['      if ( ID ( ID , ID ) )', '  ID  undeclared '], 8180: [' { return ( ID ) }', ' expected  ;  before  }  token'], 8181: ['     ID = - ID ;', '  ID  undeclared '], 8182: ['       free ( ( ID + ID ) -> ID = ( int * ) ) ;', ' expected expression before  )  token'], 8183: ['     printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 8184: ['\tint ID = CONST ;', ' redefinition of  ID '], 8185: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 8186: ['if ( ID < CONST && ID = ( - CONST ) * ID )', ' lvalue required as left operand of assignment'], 8187: ['printf ( STRING , ID ( ID ) )', ' expected  ;  before  return '], 8188: ['    break ( ) ;', ' expected  ;  before  (  token'], 8189: ['\t  printf ( STRING , ID )', ' expected  ;  before  }  token'], 8190: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 8191: ['    { ID += CONST ; ID += CONST }', ' expected  ;  before  }  token'], 8192: ['printf ( STRING , ID )', ' expected  ;  before  return '], 8193: ['    int ID [ CONST ] [ CONST ] ;', '  ID  redeclared as different kind of symbol'], 8194: ['\t        { ID ; }', '  ID  undeclared '], 8195: ['\tprintf ( STRING              ID , ID , ID , ID , ID ) ;                                                                                                 ', ' expected  )  before  ID '], 8196: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 8197: ['\t        scanf ( STRING & ID [ ID ] [ ID ] ) ;', ' invalid operands to binary & '], 8198: ['scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8199: ['    scanf ( STRING , ID )', ' expected  ;  before  ID '], 8200: ['printf ( STRING )\t', ' expected  ;  before  return '], 8201: ['\telse if ( ID < ID )', '  ID  undeclared '], 8202: ['                if ( ID == ID - CONST ) { printf ( STRING ) ; ID }', ' expected  ;  before  }  token'], 8203: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 8204: ['\tfor ( ID = CONST ; ID [ ID ] != CHARST ; ID ++ )', '  ID  undeclared '], 8205: ['\t    ID [ ID ] = ID [ ID ] ;    ', ' subscripted value is neither array nor pointer nor vector'], 8206: ['   if ', ' expected  (  before  printf '], 8207: ['        ID = ID + ID % CONST ;', ' invalid operands to binary % '], 8208: ['        printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 8209: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 8210: ['    if else ( ID == CONST ) {', ' expected  (  before  else '], 8211: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 8212: ['if ID < CONST', ' expected  (  before  ID '], 8213: ['    printf ( STRING )', ' expected  ;  before  return '], 8214: ['\tif ( ( ID ) == CONST )', '  ID  undeclared '], 8215: ['  for ( ID = ID ; ID != CHARST ; ID ++ ) {', '  ID  undeclared '], 8216: ['        printf ( STRING ) :', ' expected  ;  before  :  token'], 8217: ['\t    else if ', ' expected  (  before  printf '], 8218: ['}', ' expected declaration or statement at end of input'], 8219: ['    ID ID * ID ;', ' unknown type name  ID '], 8220: ['}', ' expected declaration or statement at end of input'], 8221: ['\tID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 8222: ['            ID ++', ' expected  ;  before  }  token'], 8223: ['    return ID ( ID , ID - CONST , ID + CONST )', ' expected  ;  before  }  token'], 8224: ['return CONST', ' expected  ;  before  }  token'], 8225: ['    char * ID ;', '  ID  redeclared as different kind of symbol'], 8226: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8227: ['\t        if ( ID == ID . pow ( - CONST , ID ) * ID [ ID ] || ID == ID [ ID ] )', '  ID  undeclared '], 8228: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 8229: ['  printf ( STRING , ID )  ', ' expected  ;  before  return '], 8230: ['\tfor ( ID = CONST ; ID < ID ; ID = ( ID * ( ID + CONST ) ) )', '  ID  undeclared '], 8231: ['    char CHARST ;', ' expected identifier or  (  before  x '], 8232: ['\t    ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 8233: ['                ID = CONST', ' expected  ;  before  break '], 8234: ['`', ' stray  `  in program'], 8235: ['}', ' expected declaration or statement at end of input'], 8236: ['        ID = ( ( ID + CONST ) * ( ID + CONST ) ) / ( CONST * ID + CONST ) ( CONST * ID ) ;', ' called object is not a function or function pointer'], 8237: ['   char ID = getchar ( )', ' expected  ,  or  ;  before  if '], 8238: ['    int ID = ID ( ID , ID , ID )', ' expected  ,  or  ;  before  if '], 8239: ['    while ( )    ', ' expected expression before  )  token'], 8240: ['    printf ( STRING )', ' expected  ;  before  return '], 8241: ['     return ID ( ID - CONST , ID , ID ) ;', '  ID  undeclared '], 8242: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8243: ['    printf ( STRING ID * ID ) ;', ' expected  )  before  ID '], 8244: [' float ID = CONST * ID * ID * ID * ID', ' expected  ,  or  ;  before  printf '], 8245: ['    ID = ID ^ CONST - CONST ID ;', ' invalid suffix "ac" on integer constant'], 8246: ['ID ++ ;', ' increment of read-only variable  ID '], 8247: ['       * ( ID + ID ) = ID ;', ' invalid operands to binary * '], 8248: ['        { printf ( STRING , & ID )', ' expected  ;  before  return '], 8249: ['void ID ( int ID )', ' redefinition of  ID '], 8250: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 8251: ['\t  for ( ; )', ' expected expression before  )  token'], 8252: ['    float ID , ID , ID , ID ; .                                                       ', ' expected expression before  .  token'], 8253: ['        printf ( STRING , & ) ;', ' expected expression before  )  token'], 8254: ['\t    if ( CHARST = < ID [ ID ] && ID [ ID ] <= CHARST )', ' expected expression before  <  token'], 8255: ['ID == CONST', ' expected  ;  before  for '], 8256: ['\tchar ID [ ] ;', ' array size missing in  ID '], 8257: ['           printf ( STRING )', ' expected  ;  before  }  token'], 8258: ['        ID = ID + CONST', ' expected  ;  before  else '], 8259: ['        ID = CONST', ' expected  ;  before  ID '], 8260: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 8261: ['\tif ID = CONST { ID ID CONST , } ;', ' expected  (  before  ID '], 8262: ['        if ( CHARST <= ID [ ID ] <= CHARST ) && ( CHARST <= ID [ ID + CONST ] <= CHARST ) && ( CHARST <= ID [ ID + CONST ] <= CHARST ) {', ' expected identifier before  (  token'], 8263: ['\t    ID [ ID ] = ID + CONST', ' expected  ;  before  }  token'], 8264: ['\tID ( ID , CONST ) ;', ' too few arguments to function  ID '], 8265: ['          char ID = ID [ ID ] ;', '  ID  undeclared '], 8266: ['         ID ( ID , ID ) ;', ' too few arguments to function  ID '], 8267: ['float ID = CONST / CONST * ID * ID', ' expected  ,  or  ;  before  printf '], 8268: ['float ID ; int ID ;', ' conflicting types for  ID '], 8269: ['    ID = ( char * ) malloc ( ID + CONST , sizeof ( char ) ) ;', ' too many arguments to function  malloc '], 8270: ['    scanf ( STRING , & ID . ID [ ID ] )', ' expected  ;  before  for '], 8271: ['    ID ( STRING )', ' expected  ;  before  }  token'], 8272: ['    while ( ID < CONST && ID [ ID ] = getchar != ID ) {', ' lvalue required as left operand of assignment'], 8273: ['      { ID ID ; * ID = * ( ID + ID ) ; * ( ID + ID ) = * ( ID + ID ) ; * ( ID + ID ) = ID ; }', ' invalid type argument of unary  *  '], 8274: ['    scanf ( STRING , & ID )', ' expected  ;  before  }  token'], 8275: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 8276: ['  ID [ ID ] = ID', ' expected  ;  before  ID '], 8277: ['    scanf ( STRING , ID )', ' expected  ;  before  for '], 8278: ['\t   ID = ( CONST / CONST ) * ID * ID', ' expected  ;  before  printf '], 8279: ['\t      scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  printf '], 8280: ['     printf ( STRING ) :', ' expected  ;  before  :  token'], 8281: ['    ID [ ID ] = CONST', ' expected  ;  before  for '], 8282: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 8283: ['        return CONST', ' expected  ;  before  }  token'], 8284: ['    for ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 8285: ['    printf ( STRING , ID ( ID ) )', ' expected  ;  before  return '], 8286: ['scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8287: ['    ID = ( CONST / CONST ) * CONST * ID ^ CONST ;', ' invalid operands to binary ^ '], 8288: ['      if ( ID < ID + ID ) && ( ID < ID + ID ) && ( ID < ID + ID )', ' expected identifier before  (  token'], 8289: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 8290: ['    ID *= ( int * * ) malloc ( ID * sizeof ( int * ) ) ;', ' invalid operands to binary * '], 8291: ['\t        ID ;', '  ID  undeclared '], 8292: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 8293: ['\tfor ( ID = CONST ; ID < ID + ID ; ID ++ ) ID [ ID ] = CONST', ' expected  ;  before  printf '], 8294: ['\tint ID = ID % CONST ;', ' redeclaration of  ID  with no linkage'], 8295: ['            else ( ID [ ID ] >= ID [ ID ] ) {', ' expected  ;  before  {  token'], 8296: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 8297: ['                printf ( STRING , * ( ID + ID ) )', ' expected  ;  before  }  token'], 8298: ['\t       else { ID [ ID ] = CONST }', ' expected  ;  before  }  token'], 8299: ['\twhile ( ID != = ( CHART ) )', ' expected expression before  =  token'], 8300: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 8301: ['    printf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 8302: ['    int ID = ;', ' expected expression before  ;  token'], 8303: ['        printf ( STRING , ID )', ' expected  ;  before  if '], 8304: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  ID '], 8305: ['    printf ( STRING , ID [ ID ] . ID , ID [ ID ] . ID , ID [ ID ] . ID ) ;', '  ID  undeclared '], 8306: ['    printf ( STRING , ID ( ID , ID , ID , ID ) ) ;', ' invalid use of void expression'], 8307: ['        if ( ID [ ID ] < CONST || ID [ ID ] % CONST = CONST ) {', ' lvalue required as left operand of assignment'], 8308: ['      printf ( STRING , ID )', ' expected  ;  before  return '], 8309: ['    if ( ID ( ID [ ID ] , ID . ID . ID , ID . ID . ID ) + ID ( ID , ID . ID . ID , ID . ID . ID ) + ID ( ID , ID . ID . ID , ID . ID . ID ) + ID ( ID , ID . ID . ID , ID . ID . ID ) ) {', '  ID  undeclared '], 8310: ['    else ', '  else  without a previous  if '], 8311: ['\t             printf ( STRING ) ; else printf ( STRING , ID + ID + CONST ) }', ' expected  ;  before  }  token'], 8312: ['\t    ID ++', ' expected  ;  before  }  token'], 8313: ['    { printf ( STRING ,` ID ) ; }', ' stray  `  in program'], 8314: ['    printf ( STRING )', ' expected  ;  before  return '], 8315: ['    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 8316: ['        while ( ID <= ID && ID [ ID ] <= ID )  ID ++ ;', '  ID  undeclared '], 8317: ['        for ( ID = CONST ; ID < CONST ) {', ' expected  ;  before  )  token'], 8318: ['printf ( STRING ID ( ID , CONST , CONST , CONST ) ) ;', ' expected  )  before  ID '], 8319: ['\tID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 8320: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 8321: ['    return CONST ; }', ' expected declaration or statement at end of input'], 8322: ['    printf ( CHART STRING ) ;', ' expected  )  before string constant'], 8323: ['}', ' expected declaration or statement at end of input'], 8324: ['}', ' expected declaration or statement at end of input'], 8325: ['\tID = ( int ) ( ID * CONST ) / CONST', ' expected  ;  before  ID '], 8326: ['  printf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 8327: [' else', '  else  without a previous  if '], 8328: ['    { for ( ID = CONST ; ID < ID + ID && ID <= ID ; ID = ID + CONST && ID = ID + CONST ) ;', ' lvalue required as left operand of assignment'], 8329: ['     { int ID [ ID ] = CONST ;', ' variable-sized object may not be initialized'], 8330: ['     if ( ID == CONST ) printf ( STRING )', ' expected  ;  before  }  token'], 8331: ['\t} else if ( ( ID == ID ) && ( ID != ID ) && ( ID != ID ) ) || ( ( ID == ID ) && ( ID != ID ) && ( ID != ID ) ) || ( ( ID == ID ) && ( ID != ID ) && ( ID != ID ) ) {', ' expected expression before  ||  token'], 8332: ['}', ' expected declaration or statement at end of input'], 8333: ['    else ( ( ID > ID > ID > ID ) || ( ID > ID > ID > ID ) || ( ID > ID > ID > ID ) || ( ID > ID > ID > ID ) || ( ID > ID > ID > ID ) || ( ID > ID > ID > ID ) ) {', ' expected  ;  before  {  token'], 8334: ['            printf ( STRING , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] ) ;', '  ID  undeclared '], 8335: ['\t        else ( ID == CONST && ID == ID )', ' expected  ;  before  {  token'], 8336: ['if ( ID < CONST ) ID ;', '  ID  undeclared '], 8337: ['       printf ( STRING , ID ) ;', '  ID  undeclared '], 8338: ['        else ', ' expected expression before  }  token'], 8339: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 8340: ['}', ' expected declaration or statement at end of input'], 8341: ['    if ( ID [ ID ] != CONST )', '  ID  undeclared '], 8342: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 8343: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 8344: ['int ID = CONST , ID , ID ;', '  ID  redeclared as different kind of symbol'], 8345: ['printf ( STRING )', ' expected  ;  before  return '], 8346: ['\t    ID += ID [ ID ] ;', '  ID  undeclared '], 8347: ['    ID = CONST * ID * ID', ' expected  ;  before  printf '], 8348: ["    char ID = '\\';", " missing terminating ' character"], 8349: ['                            \tfor ( ID = CONST ; ID <= ID - ID ; ID ++ )', '  ID  undeclared '], 8350: ['        printf ( STRING )', ' expected  ;  before  }  token'], 8351: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 8352: ['    printf ( STRING )', ' expected  ;  before  return '], 8353: ['    ID [ ID ] = CONST ;', '  ID  undeclared '], 8354: ['    ID = ( ID - ID ) / CONST', ' expected  ;  before  if '], 8355: ['}', ' expected declaration or statement at end of input'], 8356: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 8357: ['        ID [ ] = ID ;', ' expected expression before  ]  token'], 8358: ['\tID = CONST', ' expected  ;  before  ID '], 8359: ['}', ' expected declaration or statement at end of input'], 8360: [' printf ( STRING , CHARST )', ' expected  ;  before  return '], 8361: ['}', ' expected declaration or statement at end of input'], 8362: ['\t{ ID [ ID ] = getchar ( )', ' expected  ;  before  }  token'], 8363: ['             ID = ( ID ( * ID [ ID ] , ID ) ) ? ID [ ID ] : ID ;', ' incompatible type for argument 2 of  ID '], 8364: ['if ( ID [ ID ] != ID [ ID + CONST ] && ( ID [ ID ] > ID [ ID + CONST || ID [ ID ] < ID [ ID + CONST ] ) )', ' expected  ]  before  )  token'], 8365: ['    else', '  else  without a previous  if '], 8366: ['\tID = CONST', ' expected  ;  before  ID '], 8367: ['\tif ( ( int ) ID = CONST ) {', ' lvalue required as left operand of assignment'], 8368: ['for ( int ID = CONST ; ID <= CONST , ID ++ ) {', ' expected  ;  before  )  token'], 8369: ['\t    ID = ID / ID ;', '  ID  undeclared '], 8370: ['                ID [ ID ] [ ID ] = ID ( ID , ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 8371: ['    ID', ' expected  ;  before  return '], 8372: ['\t    if ID [ ID ] = CONST {', ' expected  (  before  ID '], 8373: [' }', ' expected identifier or  (  before  }  token'], 8374: ['\t float ( ID % ID == CONST ) ;', ' expected  )  before  %  token'], 8375: ['    else if ( ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) = ID )', ' lvalue required as left operand of assignment'], 8376: ['            continue }', ' expected  ;  before  }  token'], 8377: ['        ID = ID ( ID , ID - CONST )', ' expected  ;  before  ID '], 8378: ['          ID = ID ( ID , ID ) ;', ' incompatible types when assigning to type  struct point  from type  int '], 8379: ['                ID ( ) ;', ' too few arguments to function  ID '], 8380: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 8381: ['    scanf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 8382: ['\tscanf', ' expected  ;  before  return '], 8383: ['    ID [ ] = getchar ( ) ;', ' expected expression before  ]  token'], 8384: ['    else ', '  else  without a previous  if '], 8385: ['    else return ID ( ID [ ID - CONST ] ) ;', ' too few arguments to function  ID '], 8386: ['            if', ' expected  (  before  ID '], 8387: ['    ID [ CONST ] . ID = ( struct ID * ) malloc ( struct ID ) ;', ' expected expression before  struct '], 8388: ['        return printf ( STRING , ID ( ID , ID , ID + CONST ) ) ;', ' invalid use of void expression'], 8389: ['\tint ID [ ] ;', ' array size missing in  ID '], 8390: ['    if ( CONST >= ID && ID = < CONST )', ' expected expression before  <  token'], 8391: ['\t    scanf ( STRING , & )', ' expected expression before  )  token'], 8392: ['\tID ( ID , ID , ID [ ] ) ;', ' expected expression before  ]  token'], 8393: ['    if ( ( ID = ID - CONST ) && ID = ID - CONST ) {', ' lvalue required as left operand of assignment'], 8394: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8395: ['\t    else if ( ID == CONST )', '  else  without a previous  if '], 8396: ['\t                ID [ ID ] = ID [ ID - ID - CONST ]', ' expected  ;  before  ID '], 8397: ['\tprintf ( STRING , * ID )', ' expected  ;  before  return '], 8398: ['    scanf ( STRING , & ID ) ;                                                           else                                                                   printf ( STRING ) ;', '  else  without a previous  if '], 8399: ['\tscanf ( STRING , & ID & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 8400: ['int main {', " expected  = , ',',  ; ,  asm  or  __attribute__  before  {  token"], 8401: ['\t    if ( ID [ ID ] == CHARST && ID [ ID + CONST ] != CHARST && )', ' expected expression before  )  token'], 8402: ['    ID [ CONST ] = ID [ ID - CONST ]', ' expected  ;  before  while '], 8403: ['            printf ( STRING ID ) ;', ' expected  )  before  ID '], 8404: ['\tif ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST ) ) {', ' expected statement before  )  token'], 8405: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 8406: ['    return ( ID / CONST ) % CONST ;', '  ID  undeclared '], 8407: ['    ID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 8408: ['\tID ( ID ) ;', ' too many arguments to function  ID '], 8409: ['    ID = ( struct ID * ) malloc ( ID * sizeof ( struct ID ) ) ;', ' invalid application of  sizeof  to incomplete type  struct BirthData '], 8410: ['\t            if ( ID = CONST || ID = ID - CONST )', ' lvalue required as left operand of assignment'], 8411: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 8412: ['  ID = ID + ID + sqrt ( ID * ID + ID * ID )', ' expected  ;  before  printf '], 8413: ['    } while ( ID == CONST )', ' expected  ;  before  if '], 8414: ['        break', ' expected  ;  before  }  token'], 8415: ['\twhile ( ID [ ID ] != )', ' expected expression before  )  token'], 8416: ['\t        scanf ( STRING & ID [ ID ] [ ID ] ) ;', ' invalid operands to binary & '], 8417: ['                    ID [ ID ] [ ID ] = ID [ ID ] ; ID -- ; ID ++ ;', '  ID  undeclared '], 8418: ['int ID ( ) ;', ' expected identifier or  (  before  {  token'], 8419: ['for ( int ID = ID [ ID - ID ] ; ID <= ID ; ID ++ )', '  ID  undeclared '], 8420: ['    ID = ( CONST / CONST ) * ID * ID ^ CONST ;', '  ID  undeclared '], 8421: ['    else', '  else  without a previous  if '], 8422: ['printf ( STRING )', ' expected  ;  before  return '], 8423: ['for ( int ID = CONST ; ID <= CONST , ID = ID + CONST )', ' expected  ;  before  )  token'], 8424: ['         printf ( STRING )', ' expected  ;  before  }  token'], 8425: ['printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 8426: ['    ID ( CONST , CONST ) ;', ' too many arguments to function  ID '], 8427: ['    scanf ( STRING , & ID , & ID , & ID , & ID )               ', ' expected  ;  before  if '], 8428: ['int main ( ) { printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 8429: ['          while ( ID <= ID && ID >= ) {', ' expected expression before  )  token'], 8430: ['        ID += CONST * ID', ' expected  ;  before  }  token'], 8431: ['    printf ( ) ;', ' too few arguments to function  printf '], 8432: ['    if ( ID ( * ID , * ID , ID ) = CONST ) {', ' lvalue required as left operand of assignment'], 8433: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 8434: ['        scanf ( STRING & ID [ ID + CONST ] ) ;', ' invalid operands to binary & '], 8435: ['        for ( ID = CONST ; ID <= ID ; ID ++ ) printf ( STRING , ID )', ' expected  ;  before  printf '], 8436: ['    printf ( STRING )', ' expected  ;  before  }  token'], 8437: ['}', ' expected declaration or statement at end of input'], 8438: ['     printf ( STRING )', ' expected  ;  before  scanf '], 8439: ['    scanf ( STRING , & ( ID [ ID ] ) )', ' expected  ;  before  for '], 8440: ['            ID = ID ;', '  ID  undeclared '], 8441: ['    ID [ CONST ] . ID = ( int * ) ID ( sizeof ( int ID ) ) ;', ' expected  )  before  ID '], 8442: ['        printf ( STRING )', ' expected  ;  before  }  token'], 8443: ['    } for ( ID = ID - CONST ; ID > ( ID * ID ) ) {', ' expected  ;  before  )  token'], 8444: [' { ID = ID % ID ;', '  ID  undeclared '], 8445: ['    printf ( STRING , ID , ID , ID , ID , ID ) ;', '  ID  undeclared '], 8446: ['    if', ' expected  (  before  return '], 8447: ['{   int ID = ID / CONST', ' expected  ,  or  ;  before  if '], 8448: ['        while ( ID != )', ' expected expression before  )  token'], 8449: ['    ID = ID ( ( ID * ID ) + ( ID * ID ) )                                                                                     ', ' expected  ;  before  scanf '], 8450: ['     if ( * ID [ ID ] == ID )', ' invalid type argument of unary  *  '], 8451: ['        for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 8452: ['    char * ID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 8453: ['}', ' expected identifier or  (  before  }  token'], 8454: ['   int ID = ( ID * ID - CONST * ID * ID ) ;', ' redeclaration of  ID  with no linkage'], 8455: ['if ( ID == ID )', '  ID  undeclared '], 8456: ['}', ' expected declaration or statement at end of input'], 8457: ['            if ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID )  ', ' expected identifier before  (  token'], 8458: ['\t    printf ( STRING )    ', ' expected  ;  before  }  token'], 8459: ['        if ID [ ID ] = ID', ' expected  (  before  ID '], 8460: ['        ID = ID + ID [ ID ] ;', '  ID  undeclared '], 8461: ['    float ID = ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) ;            ', ' redeclaration of  ID  with no linkage'], 8462: ['                    if ( ID ( ID [ ID ] [ ID ] ) == CONST )', ' too few arguments to function  ID '], 8463: ['    scanf ( STRING , ID [ ID ] , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 8464: ['    if ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) = ID * ID )', ' lvalue required as left operand of assignment'], 8465: ['            else', '  else  without a previous  if '], 8466: ['             printf ( STRING )', ' expected  ;  before  }  token'], 8467: ['            {   ID = CONST', ' expected  ;  before  for '], 8468: ['\tscanf ( STRING , & ID )', ' expected  ;  before  puts '], 8469: ['} printf ( STRING , * ( ID ) )', ' expected  ;  before  for '], 8470: ['    printf ( STRING , ID [ ID - CONST ] , ID [ ID - CONST ] )', ' expected  ;  before  return '], 8471: ['    scanf ( STRING , & ID , & ID , & ID , & ID & ID ) ;', ' invalid operands to binary & '], 8472: ['    int ID = ID % CONST ;', '  ID  undeclared '], 8473: ['printf ( STRING )', ' expected  ;  before  return '], 8474: ['        ID = ID ( ID )', ' expected  ;  before  for '], 8475: ['        printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 8476: ['\tscanf', ' expected  ;  before  return '], 8477: ['\t    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8478: ['\tfor ( ID = CONST , ID > CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 8479: ['\tif ( ID != CONST ) { printf', ' expected  ;  before  }  token'], 8480: ['                ID = ID + ID', ' expected  ;  before  }  token'], 8481: ['\t    } ID ( STRING , ID )', ' expected  ;  before  }  token'], 8482: ['         ID [ ID ] = ID ;', '  ID  undeclared '], 8483: ['\t        ID ++', ' expected  ;  before  }  token'], 8484: ['\tfor ( ID = CONST ; ID [ ID ] != CHART ; ID ++ ) ;', '  ID  undeclared '], 8485: ['\t   printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 8486: ['    { if ID = CONST', ' expected  (  before  ID '], 8487: ['\t  ID ++', ' expected  ;  before  }  token'], 8488: ['        return ID ( ID , ID + CONST , ID )', ' expected  ;  before  }  token'], 8489: ['\t    for ( ID = ID ; ID < CONST = ( ID + ID ) ; ID ++ )', ' lvalue required as left operand of assignment'], 8490: ['        ID --', ' expected  ;  before  }  token'], 8491: ['    if ( ID % ID == CONST ) { ID = CONST ; break }', ' expected  ;  before  }  token'], 8492: [' ID = CONST * CONST ^ CONST ;', ' invalid operands to binary ^ '], 8493: ['printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 8494: ['\tprintf ( STRING , CONST )', ' expected  ;  before  return '], 8495: ['}', ' expected  ; , identifier or  (  before  int '], 8496: ['\t       else printf ( STRING , CHARST + ID + ID - CONST )', ' expected  ;  before  }  token'], 8497: ['}', ' expected declaration or statement at end of input'], 8498: ['    ID -> ID = ID :', ' expected  ;  before  :  token'], 8499: ['\t     { printf ( STRING , ID ( ID , ID , ID [ ID ] ) )', ' expected  ;  before  if '], 8500: ['\tif ( ( ID == CONST ) || ID == CONST ) )           printf ( STRING , ID ) ;', ' expected statement before  )  token'], 8501: ['\t       { continue } ;', ' expected  ;  before  }  token'], 8502: ['}', ' expected declaration or statement at end of input'], 8503: ['    for ( int ID = ID ; ID >= CONST , ID -- )', ' expected  ;  before  )  token'], 8504: ['\twhile ( ID != CONST )', ' expected  ;  before  printf '], 8505: ['\t      ID ++ }', ' expected  ;  before  }  token'], 8506: ['\t    for ( ID = ( ID + ID ) , ID >= ID ; ID -- )', ' expected  ;  before  )  token'], 8507: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 8508: ['\tif ( ID > ID )', '  ID  undeclared '], 8509: ['        ID ++', ' expected  ;  before  }  token'], 8510: ['\tif ( ID * ID != ID * & ID ) {', ' invalid operands to binary * '], 8511: ['        ID ++', ' expected  ;  before  }  token'], 8512: ['    for ( ID = CONST ; ID > CONST ; ID = ( ID * CONST ) + ID % CONST ) { ID = ID / CONST } ; printf ( STRING , ID , ID ) ;', ' expected  ;  before  }  token'], 8513: ['        char ID [ ID ] ;', ' redeclaration of  ID  with no linkage'], 8514: ['      ID ++', ' expected  ;  before  }  token'], 8515: ['    printf ( STRING , ID ( CONST , CONST ) )', ' expected  ;  before  return '], 8516: ['    while ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 8517: ['    if ( ( ID * ID + ID * ID ) = ID * ID )', ' lvalue required as left operand of assignment'], 8518: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 8519: ['        ID ++', ' expected  ;  before  }  token'], 8520: ['    ID = ID ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;', ' invalid operands to binary ^ '], 8521: ['         else ( ) ID = ID ;', ' expected expression before  )  token'], 8522: ['                    ID += CONST', ' expected  ;  before  if '], 8523: ['int main ( ) {', ' two or more data types in declaration specifiers'], 8524: ['        ID [ ID ] = ID ( ID [ ] , ID , ID [ ID ] ) ;                           ', ' expected expression before  ]  token'], 8525: ['        if ( ID ( int ID ) == CONST ) {', ' expected expression before  int '], 8526: ['\tint ID [ CONST ] , ID = CONST , ID , ID , ID = ;', ' expected expression before  ;  token'], 8527: ['\tfor ( ID = CONST ; ID ++ )', ' expected  ;  before  )  token'], 8528: ['int ID = ID ( ID [ ] , ID [ ] , ID ) ;', ' expected expression before  ]  token'], 8529: ['            if ( ( ID > ID ) || ( ID > CONST && ID = ID ) ) {', ' lvalue required as left operand of assignment'], 8530: ['\tif ( ( ID * ID ) = ( ID * ID ) )', ' lvalue required as left operand of assignment'], 8531: ['\tfloat ID = ID ( CONST + ( ( ID * ID ) / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 8532: ['    ID = ID * ID - CONST * ID * ID', ' expected  ;  before  printf '], 8533: ['        for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 8534: ['    scanf ( STRING , & ID . ID & ID . ID & ID . ID & ID . ID ) ;', ' invalid operands to binary & '], 8535: ['    scanf ( STRING , & ID , & ID )', ' expected  ;  before  for '], 8536: ['  if ( ID * ID = ID * ID + ID * ID ) {', ' lvalue required as left operand of assignment'], 8537: ['           ID = ID - CONST', ' expected  ;  before  }  token'], 8538: ['\tprintf ( STRING )', ' expected  ;  before  return '], 8539: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 8540: ['\tprintf ( STRING , ID + CONST ) ;', '  ID  undeclared '], 8541: ['   ID ++ }', ' expected  ;  before  }  token'], 8542: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 8543: ['    ID = ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) ( ID - ID ) ) ;                      ', ' called object is not a function or function pointer'], 8544: ['\t        ID = ID [ ID ] [ CONST ] - ID [ ID ] [ CONST ] ;', ' subscripted value is neither array nor pointer nor vector'], 8545: ['            ID = ID -> ID', ' expected  ;  before  free '], 8546: ['\tscanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 8547: ['       else ID -= ID ( ID + ID , ID - CONST )', ' expected  ;  before  }  token'], 8548: ['    ID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on integer constant'], 8549: ['        ID [ ID ] = ID ( ID % ID ) ;', ' called object  ID  is not a function or function pointer'], 8550: ['     ID = getchar ( ) :', ' expected  ;  before  :  token'], 8551: ['\t        ID = ID + ID [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 8552: ['\tif ( ( ID [ ID ] [ ID ] > ID [ ID - CONST ] [ ID ] && ID [ ID ] [ ID ] > ID [ ID + CONST ] [ ID ] ) && ID <= ID - CONST && >= CONST )', ' expected expression before  >=  token'], 8553: ['    printf ( STRING , ID ( ID [ CONST ] ) ) ;', ' too few arguments to function  ID '], 8554: ['    ID . ID . ID = ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 8555: ['    ID ( ID , ID , CONST )', ' expected  ;  before  return '], 8556: ['                        else if ( ID != ID ID [ ID ] [ ID ] != CONST )', ' expected  )  before  ID '], 8557: ['\t        for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 8558: ['           printf ( STRING ID STRING )  ;  ', ' expected  )  before  ID '], 8559: ['\t    ID = ID + ID * pow ( CONST , ID - CONST )', ' expected  ;  before  ID '], 8560: ['        if ( ID [ ID ] >= CHARST && <= CHARST )', ' expected expression before  <=  token'], 8561: ['                ID ++', ' expected  ;  before  ID '], 8562: ['    else if ( ID * ID == ID * ID && ID != ID ) ;', '  else  without a previous  if '], 8563: ['\tID = CONST', ' expected  ;  before  printf '], 8564: ['        else if ( ID == ID / CONST && ID = ID / CONST )', ' lvalue required as left operand of assignment'], 8565: ['printf ( STRING ID , ) ;', ' expected  )  before  ID '], 8566: ['\t    printf ( STRING , ) ;', ' expected expression before  )  token'], 8567: ['    } printf ( STRING ) }', ' expected  ;  before  }  token'], 8568: ['\t    scanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 8569: ['    ID ( CONST , CONST , CONST , CONST , ID ) ;', ' too many arguments to function  ID '], 8570: ['        ID = ID [ ID ] ;', '  ID  undeclared '], 8571: ['            for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ ) {', '  ID  undeclared '], 8572: ['    printf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 8573: ['if ( ID == ID )', '  ID  undeclared '], 8574: ['    ID = ( ( CONST / CONST ) * ( ID - CONST ) + CONST )', ' expected  ;  before  printf '], 8575: [' ID = ID', ' expected  ;  before  ID '], 8576: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 8577: ['\t            break ;', ' break statement not within loop or switch'], 8578: ['        ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 8579: ['\t    ID [ ID ] = ID ;', '  ID  undeclared '], 8580: ['                ID = ID', ' expected  ;  before  ID '], 8581: ['                    ID = CONST', ' expected  ;  before  break '], 8582: ['        printf ( STRING . ID [ ID ] ) ;', ' request for member  ID  in something not a structure or union'], 8583: ['\t   if ( ID % CONST != CONST ) { printf ( STRING ) } ;', ' expected  ;  before  }  token'], 8584: ['\tfloat ID = / ( ID * ID ) / CONST ;', ' expected expression before  ID  token'], 8585: ['printf ( STRING )', ' expected  ;  before  return '], 8586: ['\tif ( ID == ( ID ) % CONST ) ) {', ' expected statement before  )  token'], 8587: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 8588: ['                      main .', ' expected identifier before  }  token'], 8589: ['        ID == CONST', ' expected  ;  before  }  token'], 8590: ['    ID = ID', ' expected  ;  before  while '], 8591: ['    int ID , ID , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 8592: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 8593: ['else break ;', ' break statement not within loop or switch'], 8594: ['    scanf ( STRING , & ID . ID )', ' expected  ;  before  ID '], 8595: ['    printf ( STRING )', ' expected  ;  before  }  token'], 8596: ['\tprintf ( STRING , ( CONST ) % ( pow ( CONST , CONST ) ) ) ;', ' invalid operands to binary % '], 8597: ['        if ( ( ID ( ID [ ID ] ) ) == CONST && ( ID ( ID [ ID + CONST ] ) == CONST ) ) && ( CONST <= ID [ ID + CONST ] ) {', ' expected identifier before  (  token'], 8598: ['\t    for ( int ID = CONST ; ID < ID - ID ; ID ++ ) {', '  ID  undeclared '], 8599: ['    if ( ID % ID = ID )', ' lvalue required as left operand of assignment'], 8600: ['    ID ( char * ( ID - CONST ) ) ;', ' expected expression before  CHAR '], 8601: ['\tID ( CONST , ID , CONST , CONST , ID ) ;', '  ID  undeclared '], 8602: ['         for ( ID = CONST ; ID <= ID ; ID + ) {', ' expected expression before  )  token'], 8603: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 8604: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 8605: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 8606: ['\tif ( ID = ID && ID = ID )', ' lvalue required as left operand of assignment'], 8607: ['          printf ( STRING , * ( ID . ID ) + ID ) ;', ' invalid type argument of unary  *  '], 8608: ['        else if ( ( ID [ ID ] = CONST && ID [ ID ] = CONST ) ) {', ' lvalue required as left operand of assignment'], 8609: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8610: ['    ID = ( ID * ) malloc ( ID * sizeof ( int ) ) ;', ' expected expression before  )  token'], 8611: ['\tfor ( ID = CONST ; ID < ID - CONST ; ID ++ ) {', '  ID  undeclared '], 8612: ['printf ( STRING * , ID ) ;', ' expected expression before  ,  token'], 8613: ['printf ( STRING )', ' expected  ;  before  return '], 8614: ['    ID ++ ; printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 8615: ['  else if ( ID == ID )', '  else  without a previous  if '], 8616: ['        ID = ( ( ID [ ID + CONST ] >= ( CHARST - CONST ) ) && ( ID [ ID + CONST ] <= ( CHARST + CONST ) ) )', ' expected  ;  before  ID '], 8617: ['     ID = ID [ ID ] + ID [ ID + CONST ] ;', '  ID  undeclared '], 8618: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 8619: ['    for ( ID = CONST ; ID < ( ID . ID ) ; ID ++ )', '  struct node  has no member named  ID '], 8620: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 8621: ['        ID ++', ' expected  ;  before  ID '], 8622: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 8623: ['    printf ( STRING )', ' expected  ;  before  return '], 8624: ['\tscanf ( STRING ID ) ;', ' expected  )  before  ID '], 8625: ['for ( ID = CONST ; ID = ID - CONST ; ID ++ ) ', '  ID  undeclared '], 8626: ['  printf CHARrn CONST ;', ' expected  ;  before  \\x6e652229 '], 8627: ['float ID = ( CONST / CONST ) * ( ID - CONST ) + CONST ;', ' redeclaration of  ID  with no linkage'], 8628: ['    static int ID = ID [ CONST ] ;', ' initializer element is not constant'], 8629: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 8630: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 8631: ['        ID [ ID ] . ID = ID -> ID ;', '  struct node  has no member named  ID '], 8632: ['        printf ( STRING )', ' expected  ;  before  }  token'], 8633: ['\t        if ( CHARST + ID + ID - CONST >= CHARST ) printf ( STRING , CONST * CHARST + ID + ID - CONST - ID ) ;', '  ID  undeclared '], 8634: ['\t    for ( ID = ID ; ID < ID - ID + ID ) {', ' expected  ;  before  )  token'], 8635: ['\t    CHARST - CHARST + ID = ID ;', ' lvalue required as left operand of assignment'], 8636: ['     printf ( STRING , CHARNST ) ;', ' empty character constant'], 8637: ['            ID ++ ; break', ' expected  ;  before  }  token'], 8638: ['    for ( int ID = CONST ; )', ' expected expression before  )  token'], 8639: ['    while ( ID != ID && int ID <= ID ) {', ' expected expression before  int '], 8640: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 8641: ['        printf ( STRING )', ' expected  ;  before  }  token'], 8642: ['    printf ( STRING , ID , ID , ID , ID , )                                         ', ' expected expression before  )  token'], 8643: ['}', ' expected declaration or statement at end of input'], 8644: ['} }', ' expected identifier or  (  before  }  token'], 8645: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 8646: ['     ID = ( ID - ID ) / ( ID * ID - ID ) ;', '  ID  undeclared '], 8647: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 8648: ['printf ( STRING , ) ;   ', ' expected expression before  )  token'], 8649: ['float ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 8650: ['    getchar ( ) = ID [ CONST ] ;', ' lvalue required as left operand of assignment'], 8651: ['              for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 8652: ['\t   printf ( STRING , ID ID [ ID ] ) ;', ' expected  )  before  ID '], 8653: ['\t        ID ++', ' expected  ;  before  }  token'], 8654: ['        else', '  else  without a previous  if '], 8655: ['        else ( ID != ID ) {', ' expected  ;  before  {  token'], 8656: ['            printf ( STRING , ID [ ID - ID ] )', ' expected  ;  before  }  token'], 8657: ['    `               ID = ID + CONST ;', ' stray  `  in program'], 8658: ['        if ( ID - ID == ID - ID ) { int ID = ID [ ID ] [ ID ] ;', '  ID  undeclared '], 8659: ['    int ID , ID = CONST , ID [ ] ;', ' array size missing in  ID '], 8660: ['\tint', ' expected identifier or  (  before  return '], 8661: ['  printf ( STRING , ID ) ;', '  ID  undeclared '], 8662: ['printf ( STRING , ID [ CONST ] )', ' expected  ;  before  for '], 8663: ['    else continue ;', ' continue statement not within a loop'], 8664: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 8665: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 8666: ['}', ' expected declaration or statement at end of input'], 8667: ['                ID [ ID ] = ID [ ID - ID ]', ' expected  ;  before  }  token'], 8668: ['  printf ( STRING , CONST ID ) ;', ' invalid suffix "c3" on integer constant'], 8669: ['\t    if ( ( ID >= ID ) && ( ID <= = ID + CONST ) ) {', ' expected expression before  =  token'], 8670: ['        ID += ID [ ID ] ;', '  ID  undeclared '], 8671: ['\tscanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 8672: ['\treturn ID ;', '  ID  undeclared '], 8673: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 8674: ['            if ( * ( * ID [ ID ] + ID ) )', ' invalid type argument of unary  *  '], 8675: ['    printf ( STRING , ID [ CONST ] )  ', ' expected  ;  before  return '], 8676: ['          printf ( STRING , ) ;', ' expected expression before  )  token'], 8677: ['    else if ( ID > ID )', ' expected expression before  int '], 8678: ['                break ;', ' break statement not within loop or switch'], 8679: ['    ID . ID = ( int * ) malloc ( ID . ID * sizeof ( int ) ) ;', '  ID  undeclared '], 8680: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 8681: ['\twhile ( ID [ ] != CHART ) {', ' expected expression before  ]  token'], 8682: ['\t        ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 8683: ['\tfloat ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 8684: ['struct ID { int ID ; int ID ; }', ' expected  ; , identifier or  (  before  struct '], 8685: ['\tfloat ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 8686: ['        if ( ID [ ID ] . ID == ID [ ID + CONST ] . ID && ID [ ID ] . ID = ID [ ID + CONST ] . ID )', ' lvalue required as left operand of assignment'], 8687: ['scanf ( STRING , & ID )', ' expected  ;  before  return '], 8688: ['\t    for ( ID = ID ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 8689: ['        return ID ( ID ( ID , CONST , ID ) * ID ( ID , CONST , ID ) ) ;', ' too few arguments to function  ID '], 8690: ['if ( ( ID [ CONST ] ) == ( ID [ CONST ] ) ) || ( ID [ CONST ] ) {', ' expected expression before  ||  token'], 8691: ['\tdouble ID = CONST ;                                          double ID = CONST ;                                 float ID = ID * ID * ID ;                                    float ID ;                                   ', ' redeclaration of  ID  with no linkage'], 8692: ['if ( ID % CONST == CONST || ( ID % CONST = CONST && ID % CONST == CONST ) )', ' lvalue required as left operand of assignment'], 8693: ['}', ' expected declaration or statement at end of input'], 8694: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 8695: ['                ID = CONST ;', ' assignment to expression with array type'], 8696: ['\tprintf ( STRING , ID [ ID ] ) ', ' expected  ;  before  }  token'], 8697: ['\t    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 8698: ['        return ID ;', '  ID  undeclared '], 8699: ['    ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 8700: ['\t            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 8701: ['        if ( ID ( ID [ ID ] , ID ) ) {', ' incompatible type for argument 2 of  ID '], 8702: ['    printf ( STRING , , ID , ID ) ;', ' expected expression before  ,  token'], 8703: ['    ID = ID + CONST', ' expected  ;  before  else '], 8704: ['       else if ( ID [ ID ] = ! ID && ID = ! ID - CONST )', ' lvalue required as left operand of assignment'], 8705: ['}', ' expected  ; , identifier or  (  before  int '], 8706: ['    int * ID = ( int ) ID ( ID * sizeof ( int ) ) ;', " expected  : , ',',  ; ,  }  or  __attribute__  before  =  token"], 8707: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 8708: ['        ID ;', '  ID  undeclared '], 8709: ['            printf ( STRING )', ' expected  ;  before  }  token'], 8710: ['    while ( ( ID - ID ) != CONST )                                                                                                                 ', '  ID  undeclared '], 8711: ['for ( ID = CONST ; ID <= ID ; ID = ++ ) {', ' expected expression before  )  token'], 8712: ['}', ' expected declaration or statement at end of input'], 8713: ['    scanf ( STRING , & ID , & ID ) ;', '  ID  undeclared '], 8714: ['    ID [ ID ] = CHART', ' expected  ;  before  printf '], 8715: ['\t       else if ( ID < ID [ ID ] || ID = ! ID [ ID ] ) {', ' lvalue required as left operand of assignment'], 8716: ['     else ( ID > ID )', ' expected  ;  before  printf '], 8717: ['    ID ( ID , ID , ID ) ;', '  ID  undeclared '], 8718: ['\t    if ( ID [ ID + CONST ] == CHARNST || ID [ ID + CONST ] == CHART )', ' empty character constant'], 8719: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 8720: ['    ID = pow ( ID - ID , CONST ) + pow ( ID - ID , CONST ) - pow ( ID , CONST ) ;', '  ID  undeclared '], 8721: ['\t    ID [ ID ] = getchar ( )', ' expected  ;  before  }  token'], 8722: ['}', ' expected declaration or statement at end of input'], 8723: ['        while ( ID [ ID ] != CHART ) {', '  ID  undeclared '], 8724: ['        return ID [ ID ] ;', ' incompatible types when returning type  ID  {aka  struct birth_data } but  int  was expected'], 8725: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 8726: ['      for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 8727: ['\tchar ID [ ] ;', ' array size missing in  ID '], 8728: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 8729: ['    for ( ID = CONST ; ID < ID , ID = ID + CONST )', ' expected  ;  before  )  token'], 8730: ['    ID ( ID . ID , CONST , ID - CONST ) ;', '  (struct sub *)&a  is a pointer; did you mean to use  -> ?'], 8731: ['    for ( ID = CONST ; ID <= ( ID - ID ) )', ' expected  ;  before  )  token'], 8732: ['            break ;', ' break statement not within loop or switch'], 8733: ['        if ( ID [ ID ] >= [ ID ] )', ' expected expression before  [  token'], 8734: ['    ID ( ID , ID , ID + CONST , ID [ ] ) ;', ' expected expression before  ]  token'], 8735: ['        for ( int ID = ID ; ID = < ID + ID - ID ; ID ++ )', ' expected expression before  <  token'], 8736: ['    if ( ID % CONST = CONST )', ' lvalue required as left operand of assignment'], 8737: ['        ID = ID / CONST', ' expected  ;  before  }  token'], 8738: ['\t        ID = ID - ( CHARST - ID )', ' expected  ;  before  ID '], 8739: ['    if ( - CONST = < ID && ID <= CONST ) {', ' expected expression before  <  token'], 8740: ['        printf', ' expected  ;  before  if '], 8741: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 8742: ['        ID = CONST -- ;', ' lvalue required as decrement operand'], 8743: ['        ID [ ID ++ ] [ ID ++ ] = CONST', ' expected  ;  before  }  token'], 8744: ['    printf ( STRING )', ' expected  ;  before  return '], 8745: ['         int * ID [ ID ] = ( int * ) malloc ( ID * sizeof ( int ) ) ; ID ++ ;', ' variable-sized object may not be initialized'], 8746: ['    float ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 8747: ['    if ( ID == ID [ CONST ] )', '  ID  undeclared '], 8748: ['            if ( ( ( CHARST <= ID [ ID ] ) && ( ID [ ID ] <= CHARST ) ) || ( ( CHARST <= ID [ ID ] ) && ( ID [ ID ] <= CHARST ) ) ) {', '  ID  undeclared '], 8749: ['    ID ( ID , CONST , ID )', ' expected  ;  before  ID '], 8750: ['       if ( ID [ ID ] > ID )', '  ID  undeclared '], 8751: ['          if ( ID ! % CONST == CONST ) {', ' expected  )  before  !  token'], 8752: ['\t    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 8753: [' ID = ( float * ) malloc ( * sizeof ( float ) ) ;', ' invalid type argument of unary  *  '], 8754: ['        if ( ( ID = ID ) && ( ID [ ID ] [ ID ] != CONST ) ) {', '  ID  undeclared '], 8755: ['         ID = ID - ( CONST + CONST / CONST ( ID - CONST ) ) ;', ' called object is not a function or function pointer'], 8756: ['\t    { printf ( STRING , ID )', ' expected  ;  before  }  token'], 8757: ['\tfor ( ID = ID ; ID < ID , ID -- )', ' expected  ;  before  )  token'], 8758: ['       ID ++', ' expected  ;  before  }  token'], 8759: ['}', ' expected declaration or statement at end of input'], 8760: ['        }   ', ' expected identifier or  (  before  }  token'], 8761: ['        ID = - CONST , ID = , CONST ;', ' expected expression before  ,  token'], 8762: ['\tfloat ID = ID ( CONST + ( ID * ID ) / CONST ) ;         ', ' called object  ID  is not a function or function pointer'], 8763: ['    ID ( ID + ID , ID ) ;', ' too few arguments to function  ID '], 8764: ['    int ID = ID ( * ID , ID , * ID , ID )', ' expected  ,  or  ;  before  return '], 8765: ['\tfor ( ID = ( ID - CONST ) / CONST ; ID = > CONST ; ID -- ) {', ' expected expression before  >  token'], 8766: ['        ID ( ID , ID , ID , ID )', ' expected  ;  before  ID '], 8767: ['printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 8768: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 8769: ['\tint ID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 8770: ['          printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 8771: ['        if ( [ ID ] >= CHARST && ID [ ID ] <= CHARST ) {', ' expected expression before  [  token'], 8772: ['         else', ' expected expression before  int '], 8773: ['     for ( ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 8774: ['   ID = ID [ CONST ] ;', ' subscripted value is neither array nor pointer nor vector'], 8775: ['    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 8776: ['    printf ( STRING , * ( * ( ID [ ID ] [ ID ] ) ) ) ;', ' invalid type argument of unary  *  '], 8777: ['\t          ID ( & ID [ ID ] , & ID [ ID ] ) ;', '  ID  undeclared '], 8778: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 8779: ['    ID ID ;', ' unknown type name  ID ; did you mean  float ?'], 8780: ['\twhile ( ID != \\ CHART ) {', ' stray  \\  in program'], 8781: ['    printf ( STRING , ( ID + ID + CONST ) )', ' expected  ;  before  ID '], 8782: ['\tID = int ( ID ) ;', ' expected expression before  int '], 8783: ['        ID = int ( ID / CONST ) ;', ' expected expression before  int '], 8784: ['\tscanf ( STRING , ID ID ID ID ) ;', ' expected  )  before  ID '], 8785: ['}', ' expected declaration or statement at end of input'], 8786: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 8787: ['    ID [ ID ] ;', ' array subscript is not an integer'], 8788: ['    if ( return ID )', ' expected expression before  return '], 8789: ['      if  for ( ID = ID + CONST ; ID < ID ; ID ++ )', ' expected  (  before  for '], 8790: ['scanf ( STRING , & ID )', ' expected  ;  before  ID '], 8791: ['            scanf ( STRING , ( * ( ID + ID ) + ID ) ) ;', '  ID  undeclared '], 8792: ['    ID = ( CONST * ( sqrt ( CONST ) ) ) / ID ;', '  ID  undeclared '], 8793: ['    return ( ID < CONST ) ? - ID : ID', ' expected  ;  before  }  token'], 8794: ['\tID = ID ( ID * ID - ID * ID ) / CONST ;', ' called object  ID  is not a function or function pointer'], 8795: ['\t        if ( ( ID [ ID ] = CHART ) )', '  ID  undeclared '], 8796: ['\t    scanf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 8797: ['            if ( ID > ID ) && ( ID <= ( ID + pow ( CONST , ID - ID ) ) )', ' expected identifier before  (  token'], 8798: ['\tfloat = ID * ID * ID ;', ' expected identifier or  (  before  =  token'], 8799: ['        if ( ID [ ID ] == ID [ ID ] ) ID ++ ', ' expected  ;  before  }  token'], 8800: ['        scanf ( STRING , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 8801: ['} }', ' expected identifier or  (  before  }  token'], 8802: ['    printf ( STRING , ID + ID - CONST * ID ) ;', ' invalid operands to binary * '], 8803: ['     if ( pow ( ( ID - ID ) , CONST ) + pow ( ( ID - ID ) , CONST ) - pow ( ( ID , CONST ) ) < CONST )', ' too few arguments to function  pow '], 8804: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 8805: ['\tID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 8806: ['    for ( ID = CONST ; ID <= ID , ID = ID + CONST )', ' expected  ;  before  )  token'], 8807: ['                ID ++ ;', '  ID  undeclared '], 8808: ['        else', ' expected expression before  }  token'], 8809: ['        printf ( STRING , ID )', ' expected  ;  before  ID '], 8810: ['\tprintf ( STRING ) ; break ;', ' break statement not within loop or switch'], 8811: ['        ID [ ID ] = int ( ID [ ID ] ) - CONST ;', ' expected expression before  int '], 8812: ['\tscanf ( STRING , & ID )', ' expected  ;  before  if '], 8813: ['    ID = float ( ID * ID ) ;', ' expected expression before  float '], 8814: ['    scanf ( STRING , & ID , & ID , & ID , % ID ) ;', ' expected expression before  %  token'], 8815: ['\tfor ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 8816: ['    return CONST ;', ' expected declaration or statement at end of input'], 8817: ['    int ID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 8818: ['    scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 8819: ['{ printf ( STRING ) : }', ' expected  ;  before  :  token'], 8820: ['\tprintf ( STRING , ID )  ', ' expected  ;  before  return '], 8821: ['printf = ( STRING , ID ) ;', ' lvalue required as left operand of assignment'], 8822: ['    ID ( ID , ID , ID ) ; }', ' too few arguments to function  ID '], 8823: ['    ID ++ }', ' expected  ;  before  }  token'], 8824: ['    ID = int ID [ CONST ] ;', ' expected expression before  int '], 8825: ['    \tfor ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 8826: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 8827: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8828: ['       else if ( ( ID > ID && ID > ID ) && ( ID * ID > ID + ID * ID ) )', '  ID  undeclared '], 8829: ['}', ' expected declaration or statement at end of input'], 8830: ['    ID = ID - CONST', ' expected  ;  before  ID '], 8831: ['    printf ( STRING )', ' expected  ;  before  return '], 8832: ['      else if ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) = ID * ID ) {', ' lvalue required as left operand of assignment'], 8833: ['\treturn ID [ ] ;', ' expected expression before  ]  token'], 8834: ['\tID ( ID [ ID ] [ ] , ID , ID ) ;', ' expected expression before  ]  token'], 8835: ['        while ( ID < ID ) {', '  ID  undeclared '], 8836: ['\tfor ( int ID = CONST ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 8837: ['\t    ID [ ID ] = ID + ID * ( ID - ID ) / ID', ' expected  ;  before  }  token'], 8838: ['    printf ( STRING )', ' expected  ;  before  return '], 8839: ['}', ' expected declaration or statement at end of input'], 8840: ['        ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 8841: ['        ID = ID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 8842: ['        putchar ID [ ID ] ;', ' expected  ;  before  ID '], 8843: ['    ID = CONST * ID / CONST ;', '  ID  undeclared '], 8844: ['            putchar ( ID )', ' expected  ;  before  return '], 8845: ['\tID = ID', ' expected  ;  before  for '], 8846: ['    for ( ID = CONST ; ID <= ; ID ++ )', ' expected expression before  ;  token'], 8847: ['    if ( ( ID == CONST && ID == CONST ) || ( ID == CONST && ID = CONST ) )', ' lvalue required as left operand of assignment'], 8848: ['\tprintf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  return '], 8849: ['    printf ( STRING )', ' expected  ;  before  return '], 8850: ['printf ( STRING )', ' expected  ;  before  return '], 8851: ['ID * ID + ID * ID == ;', ' expected expression before  ;  token'], 8852: ['                ID = CONST', ' expected  ;  before  break '], 8853: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 8854: ['\t    if ( ID [ ID ] == CHARST ) { break }', ' expected  ;  before  }  token'], 8855: ['    printf ( STRING , ID , ID , ID , CONST , CONST , ID ID ID ) ;', ' expected  )  before  ID '], 8856: ['    float ID = ( CONST / CONST ) ID ( ID * ID - ID * ID ) ;', ' expected  ,  or  ;  before  ID '], 8857: ['        for ( ID = CONST ; ID < CONST ) {', ' expected  ;  before  )  token'], 8858: ['\tfor ( int ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 8859: ['        else break ;                           ', ' break statement not within loop or switch'], 8860: ['            ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 8861: ['}', ' expected declaration or statement at end of input'], 8862: ['\tprintf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 8863: ['    printf ( STRING STRING STRING STRING STRING STRING ID  ) ;', ' expected  )  before  ID '], 8864: ['    int ID = CONST ;', '  ID  redeclared as different kind of symbol'], 8865: ['}', ' expected declaration or statement at end of input'], 8866: ['\t    ID = ID ; for ( ID = CONST ; ID <= ID / CONST ; ++ ID ) {', '  ID  undeclared '], 8867: ['    if', ' expected  (  before  for '], 8868: ['\t           break', ' expected  ;  before  }  token'], 8869: ['    while ( ID != ID = ID ) {', ' lvalue required as left operand of assignment'], 8870: ['     ( ID + ID ) = ( int ) malloc ( ID * sizeof ( int ) ) ;  ', ' lvalue required as left operand of assignment'], 8871: ['            ID = ID + ID [ ID ] [ ID - ID - CONST ] ;', ' subscripted value is neither array nor pointer nor vector'], 8872: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 8873: ['    printf ( STRING , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] , )', ' expected expression before  )  token'], 8874: ['            * ID = CONST * ( * ID ) + ID', ' expected  ;  before  }  token'], 8875: ['}', ' expected declaration or statement at end of input'], 8876: ['    if ( ( ID - * ID >= ID ) )', '  ID  undeclared '], 8877: ['        ID [ ID ] = ID * ( ID + CONST )', ' expected  ;  before  }  token'], 8878: ['    if ( ID [ ID ] ==\\ ID )', ' stray  \\  in program'], 8879: ['        ID = int ( ID ) ;', ' expected expression before  int '], 8880: ['                    for ( int ID = CONST ; ID < ; ID ++ )', ' expected expression before  ;  token'], 8881: ['\t    if ( ID [ ID ] % CONST == CONST && ID [ ID ] = ID [ ID - CONST ] + CHARST - CHARST )', ' lvalue required as left operand of assignment'], 8882: ['\t    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 8883: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 8884: ['ID = ID % ID ;', '  ID  undeclared '], 8885: ['        putchar', ' expected  ;  before  if '], 8886: ['     ID = ID / CONST', ' expected  ;  before  }  token'], 8887: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 8888: ['    ID . ID = ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 8889: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 8890: ['printf ( STRING )', ' expected  ;  before  return '], 8891: ['    int ID = getchar ( )', ' expected  ,  or  ;  before  printf '], 8892: ['                ID ++', ' expected  ;  before  }  token'], 8893: ['     printf ( STRING )', ' expected  ;  before  }  token'], 8894: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 8895: ['        if ( ( ID [ CONST ] = < ID [ ID ] ) && ( ID [ ID ] <= ID [ CONST ] + CONST ) ) {', ' expected expression before  <  token'], 8896: ['     ID = ID + CONST', ' expected  ;  before  ID '], 8897: ['    printf ( STRING )', ' expected  ;  before  return '], 8898: ['\t    printf ( STRING , ID ( ID ) ) ;', ' too few arguments to function  ID '], 8899: ['    printf ( STRING )', ' expected  ;  before  return '], 8900: ['    int ID = ID . ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 8901: ['\t    printf ( STRING , ID [ ID ] - CONST )', ' expected  ;  before  if '], 8902: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 8903: ['    printf ( STRING , ID )    ', ' expected  ;  before  }  token'], 8904: ['     if ( ID [ ID ] == CONST && ID [ ID ] == CONST && ID [ ID ] == CONST )', ' subscripted value is neither array nor pointer nor vector'], 8905: ['}', ' expected  ; , identifier or  (  before  struct '], 8906: ['        for ( ID = CONST , ID = ID - ID ; ID ++ , ID ++ ) {', ' expected  ;  before  )  token'], 8907: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 8908: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 8909: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 8910: ['                if ( ID [ ID ] == ID [ ID + ID ] )', '  ID  undeclared '], 8911: ['\tprintf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 8912: ['    int ID ;', ' redeclaration of  ID  with no linkage'], 8913: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 8914: ['    int ID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 8915: ['\tif ( ID == CHARST || ID == CHART || )', ' expected expression before  )  token'], 8916: [' int = CONST ;', ' expected identifier or  (  before  =  token'], 8917: ['ID = CONST * ID * ID * ID * ID', ' expected  ;  before  printf '], 8918: ['\tif ( ( ( ID == CONST ) || ( ID == CONST ) ) && ( ( ( ID >= CONST ) && ( ID <= CONST ) ) || ( ID == CONST ) ) && ( ID == ID ) && ( ( ID >= CONST ) && ( ID <= CONST ) ) && ( ID == CHARST ) )', '  ID  undeclared '], 8919: ['\t        else if ( ( * ( ID + ID ) == CHARST ) && * ( ( ID + ID ) == CHARST ) )', ' invalid type argument of unary  *  '], 8920: ['float ID = ID * ID * ID * ID * ID * ;', ' expected expression before  ;  token'], 8921: ['    printf ( STRING , ) ;                          ', ' expected expression before  )  token'], 8922: ['scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 8923: ['\tfloat  ID = CONST * ID * ID ^ CONST - CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 8924: ['    for ( int ID = CONST ; ID < ID = CONST ; ID ++ ) {', ' lvalue required as left operand of assignment'], 8925: ['\tfloat ID = CONST ID / CONST ;', ' invalid suffix "a" on integer constant'], 8926: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 8927: ['\tint ID = ID', ' expected  ,  or  ;  before  printf '], 8928: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 8929: ['    if ( * ID [ ID ] == ID ) {', ' invalid type argument of unary  *  '], 8930: ['    for ( ID = ID ; ID >= CONST ; ID + -- )', ' expected expression before  )  token'], 8931: ['    { ID = CONST ', ' expected  ;  before  printf '], 8932: ['                printf ( STRING , ID , ID , ID )', ' expected  ;  before  if '], 8933: ['     ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 8934: ['            getchar ( ID ) ;', ' too many arguments to function  getchar '], 8935: ['        if ( ID != CONST && ID [ ID - CONST ] < ID )', '  ID  undeclared '], 8936: ['\t    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 8937: ['\t                if ( ID >= CONST && ID = ID - ID )', ' lvalue required as left operand of assignment'], 8938: ['        if ( ID [ ID ] ==\\ ID )', ' stray  \\  in program'], 8939: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 8940: ['    printf ( STRING )', ' expected  ;  before  return '], 8941: ['printf ( STRING )', ' expected  ;  before  return '], 8942: ['\tint ID = ( ( ID ) % CONST ) + ID ) ;', ' expected  ,  or  ;  before  )  token'], 8943: ['    scanf ( STRING , & ID & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 8944: ['    double ID = ( CONST * ID ( ID ( ID ) , CONST ) - CONST * ID ( ID ) ) ;', ' redefinition of  ID '], 8945: ['            else ( ID == CONST ) {', ' expected  ;  before  {  token'], 8946: ['printf ( STRING )', ' expected  ;  before  return '], 8947: ['    ID = ( CONST / CONST ) ID ( ID ) * ID ( ID ) ;', ' expected  ;  before  ID '], 8948: ['    scanf ( STRING , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 8949: ['\twhile ( ID >= ID ) {', '  ID  undeclared '], 8950: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 8951: ['\tint ID , ID , ;', ' expected identifier or  (  before  ;  token'], 8952: ['    printf ( STRING , ID , ) ;', ' expected expression before  )  token'], 8953: ['    if ( ID . ID < CONST ID )', ' invalid suffix "year" on floating constant'], 8954: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 8955: ['\t    if ( ID [ ID ] ==\\ CONST ) {', ' stray  \\  in program'], 8956: [' int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 8957: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 8958: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 8959: ['    ID = CHARST - ID + CHARST', ' expected  ;  before  return '], 8960: ['            scanf ( STRING , & ID )', ' expected  ;  before  for '], 8961: ['            ID . ID += CONST ;', '  ID  undeclared '], 8962: ['    printf ( STRING , ID ID % ID ) ;', ' expected  )  before  ID '], 8963: ['\t      ID , ID ID , ID ID , ID , ID ) ;', ' expected  )  before  ID '], 8964: ['\t{ if ( ID == ID ) { continue ; }', '  ID  undeclared '], 8965: ['\tif ( ( ID == ID == ID ) || ( ID == ID == ID == ID ) ) {', '  ID  undeclared '], 8966: ['\tID = int ID ( int ID [ ID ] ) ;                   ', ' expected expression before  int '], 8967: ['\twhile ( ID [ ID ] == CHARST ) {', '  ID  undeclared '], 8968: ['\tID ( CONST , ID )', ' expected  ;  before  return '], 8969: ['}', ' expected declaration or statement at end of input'], 8970: ['\tprintf ( STRING )', ' expected  ;  before  scanf '], 8971: ['              ID = CONST', ' expected  ;  before  }  token'], 8972: ['        for ( ID > ID && ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 8973: ['    printf ( STRING , ( CONST % CONST ) * ID * ID * ID * ID , CONST * ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 8974: ['int ID ( int  ) ', ' parameter name omitted'], 8975: ['            printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 8976: ['\t    if ( ( ID [ ID + CONST ] >= CHARST ) && ( ID [ ID + CONST ] <= ID ) ) ID = ID + CONST ;', '  ID  undeclared '], 8977: ['    while ( ( char ) ID != CHARNST && ID < CONST ) {', ' empty character constant'], 8978: ['}', ' expected declaration or statement at end of input'], 8979: ['    printf ( ID ) ;', ' incompatible type for argument 1 of  printf '], 8980: ['\t    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 8981: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 8982: ['    printf ( STRING , ID ( ID , ID , CONST ) ) ;', '  ID  undeclared '], 8983: ['    ID = ID + CONST', ' expected  ;  before  printf '], 8984: ['\t    ID = ID ( CONST - ( ID / ID ) ) ;', ' called object  ID  is not a function or function pointer'], 8985: ['\tprintf ( STRING STRING , ID STRING ) ;', ' expected  )  before string constant'], 8986: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 8987: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 8988: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 8989: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 8990: ['ID = ID * ID', ' expected  ;  before  printf '], 8991: ['\t            ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 8992: ['                 printf ( STRING )', ' expected  ;  before  ID '], 8993: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 8994: ['for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 8995: ['ID = ID = CONST * ID * ID * ID * ID', ' expected  ;  before  printf '], 8996: ['ID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on integer constant'], 8997: ['    for ( CONST = CONST ; ID <= ID ; ++ ID )', ' lvalue required as left operand of assignment'], 8998: ['            if ( ID [ ID ] [ ID ] == ID [ ID ] [ ID ] )', ' expected expression before  }  token'], 8999: ['    printf ( STRING , ID , , ) ;', ' expected expression before  ,  token'], 9000: ['\tfloat ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 9001: ['}', ' expected declaration or statement at end of input'], 9002: ['    if ( ID / ID = ID / ID )', ' lvalue required as left operand of assignment'], 9003: ['printf ( STRING ID ID / STRING ) ;', ' expected  )  before  ID '], 9004: ['    printf ( STRING , ID ( ID [ ] [ CONST ] , CONST , CONST , CONST ) ) ;', ' expected expression before  ]  token'], 9005: ['\twhile ( ID != ( ID + ID ) )', '  ID  undeclared '], 9006: ['        scanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 9007: ['\t    if ( )', ' expected expression before  )  token'], 9008: ['\tfloat ID = CONST / CONST * ID * ID * ID * ;', ' expected expression before  ;  token'], 9009: ['        for ( ID = CONST ; ID <= ID - CONST ; ID ++ )', '  ID  undeclared '], 9010: ['    printf ( STRING , ID ( ID ) ) ;', '  ID  undeclared '], 9011: ['ID = CONST * ID + CONST * ID + CONST * ID + CONST * ID + CONST * ID + CONST * ID', ' expected  ;  before  printf '], 9012: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 9013: ['        scanf ( STRING , & ID [ ID ] . ID , & ID [ ID ] . ID , & ID [ ID ] . ID )', ' expected  ;  before  }  token'], 9014: ['\tprintf ( " ID ID ID \\ ( % ID , % ID\\ ) ID \\ ( % ID , % ID\\ ) ID % ID " , ID , ID , ID , ID , ID )', ' expected  ;  before  return '], 9015: ['\tprintf ( STRING , ID STRING STRING , ID ) ;', ' expected  )  before string constant'], 9016: ['}', ' expected declaration or statement at end of input'], 9017: ['   printf ( STRING , ID )', ' expected  ;  before  return '], 9018: ['    printf ( STRING )', ' expected  ;  before  return '], 9019: ['    int ID = ID ^ CONST - CONST ID ;', ' invalid suffix "ac" on integer constant'], 9020: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 9021: ['    ID = ( CONST * ID + CONST ) / CONST', ' expected  ;  before  for '], 9022: ['\tint ID = ID ( ID , ID + CONST , ID ) ;', '  ID  undeclared '], 9023: ['        for ( ID = CONST ;\x01 ID <= ID ; ID ++ )', ' stray  \\1  in program'], 9024: ['    ID = ID', ' expected  ;  before  for '], 9025: ['\t    if ( ID [ ID ] == CHART ) {', '  ID  undeclared '], 9026: ['      scanf ( STRING , & [ ID ] ) ;', ' expected expression before  [  token'], 9027: ['    int ID = ID / CONST ;', '  ID  undeclared '], 9028: ['\t            if ( ( ID + CONST ) / CONST - ID <= ID <= ( ID + CONST ) / CONST ) + ID {', ' expected  ;  before  {  token'], 9029: ['    return CONST ; }', ' expected declaration or statement at end of input'], 9030: ['        getchar ( ID [ ID ] ) ;', ' too many arguments to function  getchar '], 9031: ['        ID = ID [ ID ]', ' expected  ;  before  for '], 9032: ['          ID = ID + ( ( ID + ID > ID ) && ( ID + ID > ID ) && ( ID + ID > ID ) )', ' expected  ;  before  }  token'], 9033: ['\tint ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  printf "], 9034: ['    void ID ( int ID [ CONST ] [ CONST ] , int CONST ) ;', " expected  ; , ',' or  )  before numeric constant"], 9035: ['        if ( ID [ ID ] [ ID ] == CONST )', '  ID  undeclared '], 9036: ['\t    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 9037: ['        for ( int ID = ID ; ID < ID , ++ ID )', ' expected  ;  before  )  token'], 9038: ['    ID ( ID ) ;', '  ID  undeclared '], 9039: ['    scanf ( STRING , & ID )', ' expected  ;  before  while '], 9040: ['}', ' expected  ; , identifier or  (  before  int '], 9041: ['}', ' expected  ; , identifier or  (  before  struct '], 9042: ['printf ( STRING )', ' expected  ;  before  printf '], 9043: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 9044: ['\t   for ( ID = CONST ; CONST = < ID <= ID ; ID ++ )', ' expected expression before  <  token'], 9045: ['    for ( ID = CONST , ID <= ID - CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 9046: ['        ID ++', ' expected  ;  before  }  token'], 9047: ['    printf ( STRING , ID ( ID - CONST ) ) ;                                 ', '  ID  undeclared '], 9048: ['    printf ( STRING , ID )    ', ' expected  ;  before  }  token'], 9049: ['    ID = ID', ' expected  ;  before  for '], 9050: [' }', ' expected identifier or  (  before  }  token'], 9051: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 9052: ['\tif ( ID == ID ) { for ( ID = CONST ; ID < ID ; ID ++ ) { printf ( STRING ) } ; return CONST ; }', ' expected  ;  before  }  token'], 9053: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 9054: ['scanf ( STRING , & ID ) ;', '  ID  undeclared '], 9055: ['    else', '  else  without a previous  if '], 9056: ['        ID = ID ( ID )', ' expected  ;  before  if '], 9057: ['  printf ( STRING , * ID + CONST ) ;', '  ID  undeclared '], 9058: ['        if ( ( ( ID % CONST ) == CONST && ( ID % CONST ) != CONST ) ! ! ( ID % CONST == CONST ) )', ' expected  )  before  !  token'], 9059: ['             ID ( ID , ID + CONST , ID ) ;', ' too few arguments to function  ID '], 9060: ['     else', '  else  without a previous  if '], 9061: ['}', ' expected declaration or statement at end of input'], 9062: ['        if ( ID [ ID ] == ID ) return ID', ' expected  ;  before  if '], 9063: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 9064: ['        ID ++', ' expected  ;  before  }  token'], 9065: ['\tscanf ( STRING , & ID [ CONST ] )', ' expected  ;  before  for '], 9066: ['       ID = ID % ID = CONST ;', ' lvalue required as left operand of assignment'], 9067: ['    for ( ; ID < ID ; ID ++ )                                                  ', '  ID  undeclared '], 9068: [' if ( ID >= CONST && ID <= CONST , ID = ID + CONST )', '  ID  undeclared '], 9069: ['    ID = ID % ID', ' expected  ;  before  for '], 9070: ['\t        printf ( STRING . ID [ ID ] ) ;', ' request for member  ID  in something not a structure or union'], 9071: ['    printf ( STRING , ID - CONST ) ;', '  ID  undeclared '], 9072: ['        if ( ID % ID == CONST )', ' expected expression before  else '], 9073: ['\tID = ID', ' expected  ;  before  for '], 9074: ['}', ' expected declaration or statement at end of input'], 9075: ['            if ( ID [ ID ] . ID > ID )', '  ID  {aka  struct <anonymous> } has no member named  ID '], 9076: [' ID [ ID ] = ID [ ID - CONST - ID ] ;', '  ID  undeclared '], 9077: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 9078: ['\t\t    ID ( ID [ ] [ CONST ] , ID , ID ) ;', ' expected expression before  ]  token'], 9079: ['    printf ( STRING )', ' expected  ;  before  return '], 9080: ['        for ( ID = CONST ; ID <= ID ; ID ++ CONST ) {', ' expected  )  before numeric constant'], 9081: ['\tID = ID', ' expected  ;  before  if '], 9082: ['    printf ( STRING )', ' expected  ;  before  return '], 9083: ['    int ID , ID = ;', ' expected expression before  ;  token'], 9084: ['            if ( ID >> ID ) , printf ( STRING , ID ) ;', ' expected expression before  ,  token'], 9085: ['}', ' expected declaration or statement at end of input'], 9086: ['        printf ( STRING , ( ID > ID ) ) ;', '  ID  undeclared '], 9087: ['\tint ID , ID , ID , ID = CONST ;', ' redefinition of  ID '], 9088: ['\t    if ( ID [ ID ] = ( / CONST ) ) {', ' expected expression before  ID  token'], 9089: ['    if ( ID % ID != CONST )', ' expected expression before  else '], 9090: ['\t{ ID = ID % CONST ;', '  ID  undeclared '], 9091: ['    for ( ID = ID ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 9092: ['    while ( ID [ ID ] != ID )', '  ID  undeclared '], 9093: ['        if ( ( ID ( char ID [ ID ] ) == CONST ) && ( ID ( ID [ ID + CONST ] ) == CONST ) && ( ID ( ID [ ID + CONST ] ) == CONST ) )', ' expected expression before  CHAR '], 9094: ['if ( ID == CONST ) { return CONST }', ' expected  ;  before  }  token'], 9095: ['        printf ( STRING , ID , ID )', ' expected  ;  before  for '], 9096: ['    ID = ID + CONST', ' expected  ;  before  printf '], 9097: ['\tfloat ID = ID ( CONST + ( ID * ID ) / CONST ) ;', ' called object  ID  is not a function or function pointer'], 9098: ['     scanf ID ;', ' expected  ;  before  ID '], 9099: ['    ID ( ID , ID , CONST , ID ) ;', ' too few arguments to function  ID '], 9100: ['        * ID + ID = ( char * ) malloc ( ID * sizeof ( char ) ) ;', ' lvalue required as left operand of assignment'], 9101: ['                printf ( STRING , ID , ID )', ' expected  ;  before  ID '], 9102: ['        while ( ID [ ID ] == ID ) {', '  ID  undeclared '], 9103: ['        if ( ID - CONST < ID - ID + ID )', '  ID  undeclared '], 9104: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 9105: ['\tID = ID ( STRING ) ;', ' incompatible type for argument 1 of  ID '], 9106: ['       ID = CONST', ' expected  ;  before  while '], 9107: ['\t    ID = getchar ( )', ' expected  ;  before  }  token'], 9108: ['    ID = ID + ID ;', '  ID  undeclared '], 9109: ['\tscanf ( STRING , & ID ) }', ' expected  ;  before  }  token'], 9110: ['\tscanf ( STRING , ID [ * ] ) ;', ' expected expression before  ]  token'], 9111: ['\t    scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 9112: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 9113: ['                           ID ( ID != ID && ID [ ID + ID ] [ ID + ID ] == CONST )', ' expected  ;  before  ID '], 9114: ['    printf ( STRING )', ' expected  ;  before  }  token'], 9115: ['    printf ( STRING , ID , ID ID ) ;', ' expected  )  before numeric constant'], 9116: ['\t         printf ( STRING , * ) ;', ' expected expression before  )  token'], 9117: ['        printf ( STRING )', ' expected  ;  before  }  token'], 9118: ['     { if ( ( ID [ ID ] >= CONST && ID [ ID ] = < CONST ) && ID [ ID ] != ID )', ' expected expression before  <  token'], 9119: ['\tint ID [ ID ] , ID [ ID ] = { CONST } ;', ' variable-sized object may not be initialized'], 9120: ['ID = ID ( ID [ ID ] )', ' expected  ;  before  return '], 9121: ['\t for ( ID = CONST ; ID < ID - ID ; ID ++ )', '  ID  undeclared '], 9122: ['                    if ( ID > ID ) { ID = ID ; ID = ID + CONST }', ' expected  ;  before  }  token'], 9123: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 9124: ['    ID . ID = ID + CONST ;', '  ID  is a pointer; did you mean to use  -> ?'], 9125: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 9126: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 9127: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 9128: ['    else if ( ID > CONST ) { printf ( STRING ) ; }', '  else  without a previous  if '], 9129: ['    ID = CONST', ' expected  ;  before  ID '], 9130: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 9131: ['    ID = ( int * ) malloc ( sizeof ( int ) * ( ID + CONST ) ) ;', ' assignment to expression with array type'], 9132: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 9133: ['    int ID = ID [ CONST ] * ID [ CONST ] + ID [ CONST ] * ID [ CONST ] - ID [ CONST ] * ID [ CONST ] ;', ' redeclaration of  ID  with no linkage'], 9134: ['\twhile ( ID != CHART ) )', ' expected statement before  )  token'], 9135: ['                  ID = ID [ ID ]', ' expected  ;  before  }  token'], 9136: ['    ID = ID - ID', ' expected  ;  before  }  token'], 9137: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 9138: ['    int ID = sqrt ( ID ) + CONST ;', '  ID  undeclared '], 9139: ['}', ' expected declaration or statement at end of input'], 9140: ['     scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 9141: ['    for ( ID = CONST ; ID < ID , ID ++ ) ID [ ID ] = ( int * ) ( malloc ( sizeof ( int ) * ID ) ) ;', ' expected  ;  before  )  token'], 9142: ['    printf STRING , ID , ID , ID ;', ' expected  ;  before string constant'], 9143: ['\tprintf ( STRING , ID [ CONST ] [ CONST ] , ID [ CONST ] [ CONST ] )', ' expected  ;  before  return '], 9144: ['    for ( ID = CONST ; ID <= CONST ; ++ ID ) {', ' lvalue required as increment operand'], 9145: ['    ID = ( ID % ID ) ;', ' invalid operands to binary % '], 9146: ['  ID = CONST ;', '  ID  undeclared '], 9147: ['\t        ID = getchar ( )', ' expected  ;  before  }  token'], 9148: ['        scanf ( STRING , & ID )', ' expected  ;  before  }  token'], 9149: ['            printf ( STRING , ID [ ID ] [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 9150: ['    printf ( STRING , ID ( ID , CONST ) )', ' expected  ;  before  return '], 9151: ['    for ( ID = CONST ; ID < ID - CONST ; ID ++ ) {', '  ID  undeclared '], 9152: ['            printf ( STRING , ID [ CONST ] , ID [ CONST ] )', ' expected  ;  before  }  token'], 9153: ['\tID = ID ( ID [ ID ] , ID , ID [ ID ] , ID ) ;', ' too many arguments to function  ID '], 9154: ['\tfor ( ID = CONST ; ID <= ( ID - ID ) ; ID ++ )', '  ID  undeclared '], 9155: ['ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 9156: ['        ID [ ID ] = ID ( ID [ ] , ID , ID [ ID ] ) ;', ' expected expression before  ]  token'], 9157: ['                ID [ ID ] [ CONST ] = ID ( ID , ID , ID , ID ) ;', '  ID  undeclared '], 9158: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 9159: ['    scanf ( STRING , & ID ) ', ' expected  ;  before  ID '], 9160: ['    printf ( STRING , ID ( ID ) ) ;', '  ID  undeclared '], 9161: ['   printf ( STRING , ( ID * ID ) - CONST ID ) ;', ' invalid suffix "ac" on integer constant'], 9162: ['         { ID [ ID ] [ ID ] = CONST', ' expected  ;  before  for '], 9163: ['}', ' expected declaration or statement at end of input'], 9164: ['    struct ID * ID = ;', ' expected expression before  ;  token'], 9165: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 9166: ['     ID = [ ID ] ;', ' expected expression before  [  token'], 9167: ['    ID', ' expected  ;  before  return '], 9168: ['            printf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 9169: ['    if ( ID == CONST && ID == CONST ) || ( ID == CONST && ID == CONST ) {', ' expected expression before  ||  token'], 9170: ['\tID = float ( CONST / CONST ) * ID * ID ;', ' expected expression before  float '], 9171: ['\tscanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 9172: ['\t    ( ID - CONST ) = ID ;', ' lvalue required as left operand of assignment'], 9173: ['        printf ( STRING , ID ( CONST , CONST , CONST , ID ) ) ;', ' invalid use of void expression'], 9174: [' if ( sqrt [ ( ID . ID - ID . ID ) * ( ID . ID - ID . ID ) + ( ID . ID - ID . ID ) * ( ID . ID - ID . ID ) ] <= ( ID . ID + ID . ID ) )', ' subscripted value is neither array nor pointer nor vector'], 9175: ['\tID = CONST * ID ( ID * ID - ID * ID ) ;', ' called object  ID  is not a function or function pointer'], 9176: ['}', ' expected  ; , identifier or  (  before  int '], 9177: ['\t    ID [ ID ] += ID ;', '  ID  undeclared '], 9178: ['        printf ( STRING , ( ( ID - CONST ) % CONST - CONST + CONST ) )', ' expected  ;  before  }  token'], 9179: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 9180: ['\tint ID , ;', ' expected identifier or  (  before  ;  token'], 9181: ['    float ID = ( ( CONST * ( ID - CONST ) / CONST ) + CONST ) ;', '  ID  undeclared '], 9182: ['    ID -> ID = ID', ' expected  ;  before  ID '], 9183: ['    printf ( STRING )', ' expected  ;  before  return '], 9184: ['    int ID = ID ( ID , ID ) ;', ' conflicting types for  ID '], 9185: ['        ID ++', ' expected  ;  before  }  token'], 9186: ['     printf ( STRING )    ', ' expected  ;  before  }  token'], 9187: ['    if ( ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 9188: ['\tID [ ] = STRING ;', ' expected expression before  ]  token'], 9189: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 9190: ['\t        if ( ID = CONST && ID = CONST )', ' lvalue required as left operand of assignment'], 9191: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 9192: ['\t            printf ( STRING , ID )', ' expected  ;  before  }  token'], 9193: ['  ID = ID ( ID ) ,', ' expected expression before  for '], 9194: ['    float ID = CONST * ID * ID * ID * ID', ' expected  ,  or  ;  before  printf '], 9195: ['\t{ printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 9196: ['\tfor ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 9197: ['                    if ( ID % ID == CONST )', ' expected expression before  }  token'], 9198: ['    ID = ID - ID', ' expected  ;  before  ID '], 9199: ['     if ( ID [ ID ] = ID [ ID ] && ID [ ID ] = ID [ ID ] )', ' lvalue required as left operand of assignment'], 9200: ['    ID = ID ; int ID = CONST ; printf ( STRING , ID ) ; printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 9201: ['    scanf ( STRING )', ' expected  ;  before  return '], 9202: ['        int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 9203: ['\t printf ( STRING )', ' expected  ;  before  if '], 9204: ['    else ( ID >= ID )', ' expected  ;  before  {  token'], 9205: ['    int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 9206: ['                if ( ( ID - ID ) == ( ( ID - CONST ) / CONST ) )', '  ID  undeclared '], 9207: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9208: ['\tscanf ( STRING , & ID , & , & ID ) ;', ' expected expression before  ,  token'], 9209: ['    for ( ID = ID - CONST ; ID >= CONST ; -- ) {', ' expected expression before  )  token'], 9210: ['{ ID + ID = ID + ID - CONST - ID ; }', ' lvalue required as left operand of assignment'], 9211: ['}', ' expected declaration or statement at end of input'], 9212: ['        ID = ID [ ID ] + ID', ' expected  ;  before  }  token'], 9213: ['        } printf ( STRING , ID -> ID ) ;', '  ID  undeclared '], 9214: ['        return ID [ ID ] ;', '  ID  undeclared '], 9215: ['    int ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 9216: ['    ID ( ID , ID )', ' expected  ;  before  for '], 9217: ['            ID ++', ' expected  ;  before  }  token'], 9218: ['    int ID = ID [ CONST ] + ID [ CONST ]                                                     ', ' expected  ,  or  ;  before  if '], 9219: ['          printf ( STRING , ID )', ' expected  ;  before  printf '], 9220: ['                 printf ( STRING , ID )', ' expected  ;  before  }  token'], 9221: ['ID = ( CONST / CONST ) * ID * ( ID * ID - ID * ID ) ;', '  ID  undeclared '], 9222: ['        printf ( STRING )', ' expected  ;  before  }  token'], 9223: ['\tint ID = int ( ID ) ;', ' expected expression before  int '], 9224: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 9225: ['ID = ID [ ID ] + ID [ CONST ]', ' expected  ;  before  printf '], 9226: ['\t    if ( ID [ ID ] >= CONST && ID [ ID ] <= CONST && ID [ ID + CONST ] = ID [ ID ] + CONST )', ' lvalue required as left operand of assignment'], 9227: ['            case CONST : printf ( STRING )', ' expected  ;  before  }  token'], 9228: ['    if ( ID [ ID ] = ID [ ] ) {', ' expected expression before  ]  token'], 9229: ['int ID ( int ID [ ] [ ] , int ID , int ID )', ' array type has incomplete element type  int[] '], 9230: ['        { for ( ID = ID ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 9231: ['         scanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 9232: ['    return ( ID ( ID = ID ) ) ;', ' too few arguments to function  ID '], 9233: ['    printf ( STRING , ID STRING STRING , ID ) ;', ' expected  )  before string constant'], 9234: ['    ID = CONST ; ID = CONST', ' expected  ;  before  for '], 9235: ['    struct ID * ID = ( struct ID * ) malloc ( ID * sizeof ( struct ID ) )', ' expected  ,  or  ;  before  printf '], 9236: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 9237: ['            break', ' expected  ;  before  }  token'], 9238: ['    for ( ID = CONST ; ID < ID - ; ID ++ ) {', ' expected expression before  ;  token'], 9239: ['         printf ( STRING , ID )', ' expected  ;  before  return '], 9240: ['            printf ( STRING , ID [ ID ] [ ID + CONST ] , ID [ ID + CONST ] , [ ID ] ) ;', ' expected expression before  [  token'], 9241: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 9242: ['}', ' expected declaration or statement at end of input'], 9243: ['\t           ID ++', ' expected  ;  before  if '], 9244: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 9245: ['    printf ( STRING , ID + ID )', ' expected  ;  before  return '], 9246: ['\t printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 9247: ['    if', ' expected  (  before  {  token'], 9248: ['    ID = CHART', ' expected  ;  before  return '], 9249: ['ID main ( ) {', ' unknown type name  ID ; did you mean  int ?'], 9250: ['}', ' expected declaration or statement at end of input'], 9251: ['    int ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 9252: ['char ID', ' expected  ;  before  CHAR '], 9253: ['int ID ( int ID , int ID ) ; {', ' expected identifier or  (  before  {  token'], 9254: ['\tscanf ( STRING , & ID )', ' expected  ;  before  return '], 9255: ['\t    scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 9256: ['     ID = ( ID - ID ) / ( ID * ID - ID ) ;', '  ID  undeclared '], 9257: ['# ID < ID . ID >', ' invalid preprocessing directive #incldue; did you mean #include?'], 9258: ['                     printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 9259: ['\tprintf ( STRING , ID [ CONST ] [ CONST ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 9260: ["\t'", " missing terminating ' character"], 9261: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 9262: ['\t   { ID = ID + CONST', ' expected  ;  before  continue '], 9263: ['            ID [ ID ] = CONST', ' expected  ;  before  break '], 9264: ['# include < stdlib.h >', ' expected identifier or  (  before  }  token'], 9265: ['    int ID = int ID [ CONST ] + int ID [ CONST ] + int ID [ CONST ] + int ID [ CONST ] + int ID [ CONST ] + int ID [ CONST ] + int ID [ CONST ] + int ID [ CONST ] + int ID [ CONST ] ;', ' expected expression before  int '], 9266: ['        ID = ID ( ID , ID )', ' expected  ;  before  }  token'], 9267: ['                 continue', ' expected  ;  before  }  token'], 9268: ['    ID ( ID , ID , ID - CONST , CONST )', ' expected  ;  before  return '], 9269: ['\t    if ( ID ( ID [ ] , ID [ ] , ID ) == CONST ) {', ' expected expression before  ]  token'], 9270: ['printf ( STRING STRING STRING )', ' expected  ;  before  return '], 9271: ['\tscanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 9272: ['ID = CONST / CONST * ID * { ( ID * ID ) - ( ID * ID ) } ;', ' expected expression before  {  token'], 9273: ['\t    ID [ ID ] = ID + ID ;', '  ID  undeclared '], 9274: ['          if ( ID == CONST && ( ID [ CONST ] = CHARST || ID [ CONST ] = CHARST || ID [ CONST ] = CHARST || ID [ CONST ] = CHARST ) ) {', ' lvalue required as left operand of assignment'], 9275: ['\tID ( ID , ID , ID )', ' expected  ;  before  printf '], 9276: ['\t} ID [ ID + CONST ] = CHART ;                  ', '  ID  undeclared '], 9277: ['if ( ID == ID ( ID ) )', '  ID  undeclared '], 9278: ['    if ( ID ( ID , ID , ID ) == CONST )', ' too few arguments to function  ID '], 9279: ['\tprintf ( STRING , ID , ID , ID , ID , ID )', ' expected  ;  before  return '], 9280: ['   { if ( ID <= ID )', '  ID  undeclared '], 9281: ['            } printf ( STRING )', ' expected  ;  before  }  token'], 9282: ['            ID [ ID ] [ ID ] = ID ( ID , ID , ID [ ] [ ID ] , ID , ID ) ;', ' expected expression before  ]  token'], 9283: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 9284: ['    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 9285: ['    if ( ID < ( ID + ID - ID * ID ) / ID ) {', '  ID  undeclared '], 9286: ['{   printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 9287: ['\tint ID = ID ( ID [ ] , ID , ID [ ] , ID ) ;', ' expected expression before  ]  token'], 9288: ['while ( ) {', ' expected expression before  )  token'], 9289: ['\t   printf ( STRING , ) ;', ' expected expression before  )  token'], 9290: ['scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 9291: ['\tint ID , ID ; for ( ID = CONST ; ID <= CONST ) {', ' expected  ;  before  )  token'], 9292: ['                break', ' expected  ;  before  }  token'], 9293: ['\t        break', ' expected  ;  before  }  token'], 9294: ['    if ( ID == CONST || ID = CONST ) {', ' lvalue required as left operand of assignment'], 9295: ['\tfor ( ID = ID - ID ; ID <= ID && ID >= CONST && ; ID -- ) {', ' expected expression before  ;  token'], 9296: ['\tprintf ( STRING , ) ;', ' expected expression before  )  token'], 9297: ['        else', ' expected expression before  }  token'], 9298: ['}', ' expected declaration or statement at end of input'], 9299: ['    if ( ID [ ID ] ==\\ CONST )', ' stray  \\  in program'], 9300: ['           if ( ( ID [ ID ] == CONST && ID [ ID ] == CONST ) || ( ID [ ID ] = CONST && ID [ ID ] = CONST ) ) {', ' lvalue required as left operand of assignment'], 9301: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 9302: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 9303: ['        if ( ID + ID = CONST )', ' lvalue required as left operand of assignment'], 9304: ['    printf ( STRING , ID , ID , ID , ID ) ,', ' expected expression before  return '], 9305: ['\tprintf ( STRING )', ' expected  ;  before  return '], 9306: ['  scanf ( STRING , & ID . ID . ID , & ID . ID . ID , & ID . ID . ID , & ID . ID . ID )', ' expected  ;  before  return '], 9307: ['    scanf ( STRING , & ID [ ID ] ) }', ' expected  ;  before  }  token'], 9308: ['      else printf ( STRING ) ;', '  else  without a previous  if '], 9309: ['\tprintf ( STRING , ID ( ID ) ) ;', ' too few arguments to function  ID '], 9310: ['\tprintf ( STRING )', ' expected  ;  before  return '], 9311: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 9312: ['        ID = - ( ID ) ; }', '  ID  undeclared '], 9313: ['    ID = ID ( CONST + ( ( ID * ID ) / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 9314: ['        { putchar ( ID ) ;', '  ID  undeclared '], 9315: ['\t  printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 9316: ['    if ( ID % CONST == CONST && ID % CONST != CONST ) || ( ID % CONST == CONST && ID % CONST == CONST )', ' expected expression before  ||  token'], 9317: ['    int ID = ID ^ CONST - CONST ID ;', ' invalid suffix "ac" on integer constant'], 9318: ['    scanf ( STRING , & CHART ) ;', ' lvalue required as unary  &  operand'], 9319: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9320: ['           ID ( ID - CONST ) ;', ' too few arguments to function  ID '], 9321: ['    for ( ID >= ID ; ID <= ID ) {', ' expected  ;  before  )  token'], 9322: ['    ID = ( int * ) malloc ( ID * sizeof ( int ) ) ;', '  ID  undeclared '], 9323: ['scanf ( STRING , & ID )', ' expected  ;  before  for '], 9324: ['\tprintf ( STRING )', ' expected  ;  before  return '], 9325: ['    ID = ( CONST / CONST ) * ID * ( ID * ID - ID * ID ) ;', '  ID  undeclared '], 9326: ['\tID = ID + CONST', ' expected  ;  before  }  token'], 9327: ['          ID [ ID - CONST - ID ] = & ID [ ID ]', ' expected  ;  before  printf '], 9328: ['printf ( STRING )', ' expected  ;  before  return '], 9329: ['\tfor ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 9330: ['\tprintf ( STRING , ) ;', ' expected expression before  )  token'], 9331: ['    if ( ID < ID )', '  ID  undeclared '], 9332: ['    printf ( STRING , || CONST ) ;', ' expected expression before  ||  token'], 9333: ['    ID = getchar ( )', ' expected  ;  before  for '], 9334: ['    getchar ( ID ) ;', ' too many arguments to function  getchar '], 9335: ['    ID ID = { ( CONST CONST ) } ;', ' expected  )  before numeric constant'], 9336: ['\t    ID = ID * ID ( ID , ID ) ;', '  ID  undeclared '], 9337: ['\t        for ( ID = CONST ; ID <= ( CONST * ( ID - CONST ) + CONST ) , ID ++ ) {', ' expected  ;  before  )  token'], 9338: ['            scanf ( STRING , & ID [ ID [ ID ] ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 9339: ['    if ( ID [ ID ] == ID ) { ID = ID ; break ; }', ' break statement not within loop or switch'], 9340: ['   if ( ( ID + ID > ID ) && ( ID + ID > ID ) ) && ( ID + ID > ID )', ' expected identifier before  (  token'], 9341: ['\tfor ( ID = ; ID < ID + ID ; ID ++ )', ' expected expression before  ;  token'], 9342: ['if ( ID ( & ID , ID [ ID ] ) == CONST ) {', ' incompatible type for argument 2 of  ID '], 9343: ['}', ' expected declaration or statement at end of input'], 9344: ['            ID = ID', ' expected  ;  before  ID '], 9345: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 9346: ['    ID = ID * ID ;', ' invalid operands to binary * '], 9347: ['    printf ( STRING )', ' expected  ;  before  return '], 9348: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 9349: ['    printf ( STRING , ID [ CONST ] ) ,', ' expected expression before  return '], 9350: ['            ID = CONST', ' expected  ;  before  ID '], 9351: ['        printf ( STRING , ID + CONST , ID )', ' expected  ;  before  }  token'], 9352: ['int main {', " expected  = , ',',  ; ,  asm  or  __attribute__  before  {  token"], 9353: ['\t    for ( int ID = ID + CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 9354: ['         if ( ID [ ID ] = > ID ) {', ' expected expression before  >  token'], 9355: ['    char ID [ CONST [ ] ] ;', ' expected expression before  ]  token'], 9356: ['\tID = ID * ID * ID', ' expected  ;  before  printf '], 9357: ['} } }', ' expected identifier or  (  before  }  token'], 9358: ['\twhile ( ID <= ID - ID + CONST )', '  ID  undeclared '], 9359: ['\tscanf ( STRING , ID , ID ) ;', '  ID  undeclared '], 9360: ['\tscanf ( * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 9361: ['    for ( int ID = CONST ; ID < ID - CONST ; ID ++ )', '  ID  undeclared '], 9362: [' float ID = ( CONST / CONST ) * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 9363: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 9364: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID )', ' expected  ;  before  ID '], 9365: ['\tprintf ( STRING )', ' expected  ;  before  return '], 9366: ['    for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 9367: ['ID = ( CONST / CONST ) * ID * ID * ID * ID', ' expected  ;  before  printf '], 9368: ['             printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 9369: ['        ID = ID * CONST + ID % CONST ;', '  ID  undeclared '], 9370: ['     else ( ID + ID < ID ) {', ' expected  ;  before  {  token'], 9371: ['    else printf ( STRING ) ;', '  else  without a previous  if '], 9372: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 9373: ['    else if', ' expected  (  before  printf '], 9374: ['    while ( ID != CONST ) ) {', ' expected statement before  )  token'], 9375: ['   if ( ID [ ID ] == ID [ ID ] )', '  ID  undeclared '], 9376: ['\tfor ( ID = CONST ; ID < CONST ; CONST ++ ) {', ' lvalue required as increment operand'], 9377: ['        printf ( STRING , ID , ID )', ' expected  ;  before  break '], 9378: ['            ID = CONST', ' expected  ;  before  }  token'], 9379: ['\t            if ( ID >= ID && ID <= ID - ID + CONST )  printf ( STRING ) ;', '  ID  undeclared '], 9380: ['\t        ID = ID + ( ID / ID )', ' expected  ;  before  }  token'], 9381: ['\tprintf ( STRING , CONST * CONST * CONST )', ' expected  ;  before  return '], 9382: ['            ID [ ID ] [ ID ] = CONST', ' expected  ;  before  for '], 9383: ['void ID ( int ID , ID [ ] )', ' unknown type name  ID '], 9384: ['    ID = strlen ( ID )', ' expected  ;  before  for '], 9385: ['         if ( ( ( ID [ CONST ] <= ID [ ID ] ) || ( ID [ CONST ] >= ID [ ID ] ) ) && ( [ ID ] <= ID [ CONST ] + CONST ) )', ' expected expression before  [  token'], 9386: ['        else printf ( STRING , ID )', ' expected  ;  before  }  token'], 9387: ['       if ( ID == CONST ) (                                     )', ' expected expression before  )  token'], 9388: ['    ID = abs ;', '  abs  undeclared '], 9389: ['\tfor ( ID = ID ; ID = < - CONST ; ID = ID + ID ) {', ' expected expression before  <  token'], 9390: ['    ID = CONST ID * ID ;', ' fixed-point types not supported for this target'], 9391: ['\t        printf ( STRING , ID [ ID - ID - CONST ] )', ' expected  ;  before  }  token'], 9392: ['     for ( ID = CONST ; ID <= CONST ID = ID + CONST ) {', ' expected  ;  before  ID '], 9393: ['\t    for ( ID = CONST ; ID < ; ID ++ )', ' expected expression before  ;  token'], 9394: ['}', ' expected declaration or statement at end of input'], 9395: ['    for ( int ID = CONST ; ID < ; ID ++ ) {', ' expected expression before  ;  token'], 9396: ['        for ( int ID = ; ID <= ID / CONST ; ID ++ ) {', ' expected expression before  ;  token'], 9397: ['\t       for ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 9398: ['            printf ( STRING )', ' expected  ;  before  else '], 9399: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 9400: ['    for ( ID = ID ; ID = > CONST ; ID -- ) {', ' expected expression before  >  token'], 9401: ['printf ( STRING )', ' expected  ;  before  return '], 9402: ['    printf ( STRING , float ( CONST * CONST * CONST ) ) ;', ' expected expression before  float '], 9403: ['            ID [ ID ] [ ID ] = ID [ ID ] ID [ ID ] ;', ' expected  ;  before  ID '], 9404: ['\t    else {', '  else  without a previous  if '], 9405: ['                if ( ( ID = CONST ) || ( ID = ID ) || ( ( ID % ID ) = CONST ) ) ;', ' lvalue required as left operand of assignment'], 9406: ['scanf ( STRING , & ID , & ID )', ' expected  ;  before  return '], 9407: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 9408: ['    scanf ( STRING , & ID -> ID , & ID -> ID , & ID -> ID , & ID -> ID ) ;', '  ID  undeclared '], 9409: ['}', ' expected declaration or statement at end of input'], 9410: ['                        ID = ID + ID [ ID ] ;', '  ID  undeclared '], 9411: ['        ID ++', ' expected  ;  before  }  token'], 9412: ['    exit', ' expected  ;  before  }  token'], 9413: ['    int ID = ID ( ID , CONST , CONST ) ;', ' redeclaration of  ID  with no linkage'], 9414: ['        else if ( ( ID [ ID ] == ID [ CONST ] && ID [ ID + CONST ] != ID [ CONST ] ) && ID [ ID + CONST ] != ID [ CONST ] || ( ID [ ID ] == ID [ CONST ] &&             ID [ ID + CONST ] != ID [ CONST ] && ID [ ID + CONST ] != ID [ CONST ] ) ) ) {', ' expected statement before  )  token'], 9415: ['        if ID ( ID ) == CONST', ' expected  (  before  ID '], 9416: [' else if ( ID == CONST )', '  ID  undeclared '], 9417: ['\tif ( ID == ID ) ID = CONST ; printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 9418: ['}', ' expected  ; , identifier or  (  before  int '], 9419: ['        free ( ID ) ;', '  ID  undeclared '], 9420: ['        scanf ( STRING , & ID [ ID ] [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 9421: ['\t        return ID ;', '  ID  undeclared '], 9422: ['\tfor ( int ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 9423: ['}', ' expected declaration or statement at end of input'], 9424: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 9425: ['\t        for ( ID = ID ; ID <= ( CONST ID - CONST ) ; ID ++ ) {', ' invalid operands to binary <= '], 9426: ['int ID', ' expected  ;  before  int '], 9427: ['for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 9428: ['    float ID = CONST / CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 9429: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 9430: ['\t        if ( ID = CONST || ID = CONST || ID = ID || ID = ID )', ' lvalue required as left operand of assignment'], 9431: ['    printf ( STRING , ID [ ID ] . ID , ID [ ID ] . ID , ID [ ID ] . ID ) ;', '  ID  undeclared '], 9432: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 9433: ['                    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 9434: ['\t        ID = ID + ID [ ID - ID ]', ' expected  ;  before  }  token'], 9435: ['    if ( ( ID % CONST = CONST ) && ( ID % CONST != CONST ) )', ' lvalue required as left operand of assignment'], 9436: ['printf ( STRING , ID )', ' expected  ;  before  return '], 9437: ['       printf ( STRING )', ' expected  ;  before  return '], 9438: ['\tscanf ( STRING , & ID )', ' expected  ;  before  ID '], 9439: ['    static int ID = CONST , ID [ CONST ] ;', '  ID  redeclared as different kind of symbol'], 9440: ['    scanf ( STRING & ID & ID & ID ) ;', ' invalid operands to binary & '], 9441: ['            if ( ID + ID > ID && ID + ID > ID && ID + ID > ID )', '  ID  undeclared '], 9442: ['    ID -> ID = ID :', ' expected  ;  before  :  token'], 9443: ['}', ' expected  ; , identifier or  (  before  struct '], 9444: ['scanf ( STRING ID , , && ID ) ; printf ( STRING , ID , ID ) ;', ' expected  )  before  ID '], 9445: ['for ( int ID = CONST ; ID < CONST ; ID ++ ) {', '  ID  undeclared '], 9446: ['float ID = ( CONST / CONST ) CONST * ID * ID ;', ' expected  ,  or  ;  before numeric constant'], 9447: ['\t    ID = ID ( ID )', ' expected  ;  before  {  token'], 9448: ['}', ' expected declaration or statement at end of input'], 9449: ['    else {', '  else  without a previous  if '], 9450: ['}', ' expected declaration or statement at end of input'], 9451: ['\t    switch ( ID ) {', '  ID  undeclared '], 9452: ['               ID ( ID + ID , ID - ID ) ;', ' too few arguments to function  ID '], 9453: ['\tint ID = ID', ' expected  ,  or  ;  before  printf '], 9454: ['printf ( STRING . ) ;', ' expected identifier before  )  token'], 9455: ['        scanf ( STRING , & ( ID [ ID ] . ID ) & ( ID [ ID ] . ID ) ) ;', ' invalid operands to binary & '], 9456: ['        ID = ID + ID', ' expected  ;  before  }  token'], 9457: ['         ID % CONST == CONST', ' expected  ;  before  }  token'], 9458: ['        else', '  else  without a previous  if '], 9459: ['}', ' expected declaration or statement at end of input'], 9460: ['\t    if ( ID [ ID ] + ID <= = CONST ) {', ' expected expression before  =  token'], 9461: ['            ID = ID', ' expected  ;  before  }  token'], 9462: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 9463: ['  ID = ID + CONST break ;', ' expected  ;  before  break '], 9464: ['\tif ( ID == ID ) { printf ( STRING ) ;', '  ID  undeclared '], 9465: ['    if ( ID < )', ' expected expression before  )  token'], 9466: ['\tID ( ID )', ' expected  ;  before  if '], 9467: ['ID ( STRING , / ID ) ;', ' expected expression before  ID  token'], 9468: ['    ID = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 9469: ['    gets ( ID [ CONST ] [ ] ) ;', ' expected expression before  ]  token'], 9470: ['\tfloat ID = ID * ID * ID ;', '  ID  undeclared '], 9471: ['        for ( int ID = CONST ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 9472: ['\tif ( ID > CONST && ID != ID )', '  ID  undeclared '], 9473: ['  if ( ID = < CONST )', ' expected expression before  <  token'], 9474: ['\tint ID [ ] ;', ' array size missing in  ID '], 9475: ['\telse if ( ( ID != ID ) && ( ID != ID ) && ( ID == ID ) ) || ( ( ID == ID ) && ( ID != ID ) && ( ID != ID ) ) || ( ( ID != ID ) && ( ID == ID ) && ( ID != ID ) ) {', ' expected expression before  ||  token'], 9476: ['    printf ( CHARST ID ID ID ID ID STRING . ) ;', ' expected  )  before  ID '], 9477: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 9478: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 9479: ['    int ID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 9480: ['       return CONST', ' expected  ;  before  }  token'], 9481: ['printf ( STRING )', ' expected  ;  before  return '], 9482: ['\t   printf ( STRING , ID )', ' expected  ;  before  return '], 9483: ['\tfor ( ID = CONST ; ID < ID ; ID += ID ) {', '  ID  undeclared '], 9484: ['printf ( STRING , ID )', ' expected  ;  before  return '], 9485: [' printf ( STRING ID STRING ) ;  ', ' expected  )  before  ID '], 9486: ['        while ( ( * ( ID + ID ) >= * ( ID + ID ) ) && ( ID < ID ) ) ', '  ID  undeclared '], 9487: ['void ID ( int ID , char [ ID ] ) {', ' parameter name omitted'], 9488: ['        for ( int ID = ID ; ID = < ID + ID - ID ; ID ++ )', ' expected expression before  <  token'], 9489: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 9490: ['    char ID [ CONST ] = { CHARNST , CHARST , CHARST , CHARST , CHARST , CHARST } ;', ' empty character constant'], 9491: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9492: ['printf ( STRING )', ' expected  ;  before  return '], 9493: ['    else ( ID > CONST )', ' expected  ;  before  {  token'], 9494: ['}', ' expected  ; , identifier or  (  before  int '], 9495: ['    gets ( ) ;', ' too few arguments to function  gets '], 9496: ['\tchar ID [ CONST ] , ID [ CONST ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 9497: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 9498: ['        printf ( STRING , ID + ID - CONST ) ;', '  ID  undeclared '], 9499: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 9500: ['                ID = ID / CONST', ' expected  ;  before  ID '], 9501: ['    ID = ID ( ID [ ID ] ) ;', '  ID  undeclared '], 9502: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 9503: ['            ID = ID ( ID , ID [ ID + CONST ] )', ' expected  ;  before  }  token'], 9504: ['    char ID [ ] ;', ' array size missing in  ID '], 9505: ['\tscanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 9506: ['\t    ID = ID ( ID , * ( ID + ID ) , ID )', ' expected  ;  before  if '], 9507: ['\tprintf ( STRING , ID ( CONST ) )', ' expected  ;  before  return '], 9508: ['\treturn CONST ; }', ' expected declaration or statement at end of input'], 9509: ['\t    ID = ID ( ID , ID ) ;', ' called object  ID  is not a function or function pointer'], 9510: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 9511: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  if '], 9512: ['}', ' expected identifier or  (  before  }  token'], 9513: ['    printf ( STRING , ID ) :', ' expected  ;  before  :  token'], 9514: ['        ID ++', ' expected  ;  before  }  token'], 9515: ['    ID = ID ;', '  ID  undeclared '], 9516: ['\t         printf ( STRING , ) ; ', ' expected expression before  )  token'], 9517: ['    }', ' expected identifier or  (  before  }  token'], 9518: ['          ID [ ID ++ ] = ID', ' expected  ;  before  }  token'], 9519: ['\t       printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 9520: ['    if ID = ID {', ' expected  (  before  ID '], 9521: ['\tID [ ID ] = \\ CONST ;', ' stray  \\  in program'], 9522: ['scanf ( STRING , & ID , & ID , & ID [ ID ] ) ;', '  ID  undeclared '], 9523: ['    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 9524: ['    int ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 9525: ['        ID = ( ( ID [ ID ] >= CHARST ) && ( ID [ ID ] <= CHARST ) ) + ( ( ID [ ID + CONST ] >= CHARST ) && ( ID [ ID + CONST ] <= CHARST ) ) + ( ( ID [ ID + CONST ] >= CHARST ) && ( ID [ ID + CONST ] <= CHARST ) )', ' expected  ;  before  ID '], 9526: ['    printf ( STRING , ( ID ( ID , CONST , ID ) ? = STRING : STRING ) ) ;', ' expected expression before  =  token'], 9527: ['        if ( ID = CHARST && ID = CHARST )', ' lvalue required as left operand of assignment'], 9528: ['         scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 9529: ['        printf ( STRING )', ' expected  ;  before  }  token'], 9530: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 9531: ['{   for ( ID = CONST ; ID <= ID - ID ; ID ++ )', '  ID  undeclared '], 9532: ['        else printf ( STRING ) ;', '  else  without a previous  if '], 9533: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 9534: ['    printf ( STRING )', ' expected  ;  before  }  token'], 9535: ['        ID ( * ( ID + ID ) ) ;', ' incompatible type for argument 1 of  ID '], 9536: ['\tfor ( ID = CONST ; ID < CONST , ID ++ )', ' expected  ;  before  )  token'], 9537: ['     printf ( STRING , ID , ID )', ' expected  ;  before  return '], 9538: ['    printf ( STRING , * ID ) ;', ' invalid type argument of unary  *  '], 9539: ['\tID = ID ( ID , CONST ) ;', ' too many arguments to function  ID '], 9540: ['} }', ' expected declaration or statement at end of input'], 9541: ['\tscanf ( STRING . & ID ) ;', ' expected identifier before  &  token'], 9542: ['\tID = ( int ) ID', ' expected  ;  before  printf '], 9543: ['printf ( STRING , ) ;  ', ' expected expression before  )  token'], 9544: ['\tID = ID + ID', ' expected  ;  before  return '], 9545: ['void ID ( int ID [ ] , int ID , ID )', ' unknown type name  ID '], 9546: ['    for ( ID = CONST ; ID < CONST ; ID ++ )', '  ID  undeclared '], 9547: ['      for ( ID = CONST ; ID < ID - ID - CONST ) {', ' expected  ;  before  )  token'], 9548: ['            ID ++ ;', '  ID  undeclared '], 9549: ['    printf ( STRING , ID [ CONST ] [ CONST ] ) ; printf ( STRING )   ', ' expected  ;  before  return '], 9550: ['    while ( ID -> ID ! - ID )', ' expected  )  before  !  token'], 9551: ['    if ( ( ID [ ID ] [ ID - CONST ] == CHARST ) ) )', ' expected statement before  )  token'], 9552: ['\t        if ( ID = ID ) { printf ( STRING ) ; }', '  ID  undeclared '], 9553: ['    for ( ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 9554: ['printf ( STRING , ID STRING , ID ) ;', ' expected  )  before string constant'], 9555: ['    ID = ID [ ID - CONST ] ;', '  ID  undeclared '], 9556: ['                ID = ID ( ) ; ', ' too few arguments to function  ID '], 9557: ['\t    putchar ( ID [ ID ] ) ;', '  ID  undeclared '], 9558: ['  int ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 9559: ['        scanf ( STRING , & ID [ ID ] . ID , & ID [ ID ] . ID , & ID [ ID ] . ID )', ' expected  ;  before  }  token'], 9560: ['ID = ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) . ;', ' expected identifier before  ;  token'], 9561: ['    for ( ID = CONST ; ID [ ID ] != CHART , ID ++ ) {', ' expected  ;  before  )  token'], 9562: ['    ID = ( CONST / CONST ) ID * ID * ID * ID ;', ' expected  ;  before  ID '], 9563: ['\tprintf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 9564: ['\tscanf ( STRING , & ID , & ID )', ' expected  ;  before  for '], 9565: ['    return CONST', ' expected  ;  before  }  token'], 9566: ['        ID = CONST', ' expected  ;  before  for '], 9567: ['   ID = ( struct ID * ) calloc ( ID * sizeof ( struct ID ) ) ;', ' too few arguments to function  calloc '], 9568: ['    ID [ ID ] = ID [ ID ] + CONST', ' expected  ;  before  }  token'], 9569: ['\tfor ( ID = CONST ; ID ++ ) ; {', ' expected  ;  before  )  token'], 9570: ['}', ' expected identifier or  (  before  }  token'], 9571: ['if ( ( ID / ID ) - ( ID / ID ) == CONST && ID = CONST && ID = CONST )', ' lvalue required as left operand of assignment'], 9572: ['    return ID ;', '  ID  undeclared '], 9573: ['\tID ( ID , CONST , ID - CONST )      ', ' expected  ;  before  puts '], 9574: ['    ID ++', ' expected  ;  before  }  token'], 9575: ['}', ' expected declaration or statement at end of input'], 9576: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 9577: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 9578: ['        if ( ID [ ID ] == CHARNST )', ' empty character constant'], 9579: [' ID -> ID = ID ;', '  ID  undeclared '], 9580: ['    ID [ CONST ] [ CONST ] ;', '  ID  undeclared '], 9581: ['}', ' expected declaration or statement at end of input'], 9582: ['\t       printf ( STRING , ID [ ID + ID - ID ] ) ;', '  ID  undeclared '], 9583: ['\tprintf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 9584: ['}', ' expected declaration or statement at end of input'], 9585: ['\t        ID = ID - ID', ' expected  ;  before  ID '], 9586: ['    break ;', ' break statement not within loop or switch'], 9587: ['    for ( ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 9588: ['\tfor ( ID = CONST ; ID = < ID ; ID = ID + CONST ) {', ' expected expression before  <  token'], 9589: ['return CONST ; } }', ' expected identifier or  (  before  }  token'], 9590: ['\tID ( ID , ID ) ;', ' too few arguments to function  ID '], 9591: ['        else ( ID == CONST )', ' expected  ;  before  {  token'], 9592: ['                          if ( ID [ ID ] . ID < ID [ ID ] . ID ) { ID         = ID [ ID ] . ID ;', ' incompatible types when assigning to type  struct marks  from type  int '], 9593: ['     if ( ID < ID [ ID ] ) && ( ID != ID ) {', ' expected identifier before  (  token'], 9594: ['    ID = ID', ' expected  ;  before  for '], 9595: ['ID = ID ;', ' conflicting types for  ID '], 9596: ['}', ' expected declaration or statement at end of input'], 9597: ['                case CONST : strcpy ( ID , STRING )', ' expected  ;  before  break '], 9598: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 9599: ['    for ( ID = CONST ; ID < ( ID - CONST ) , ++ ID )', ' expected  ;  before  )  token'], 9600: ['\t{ printf ( STRING , ( ID ( int ID ) ) ) ; }', ' expected expression before  int '], 9601: ['\t    ID = getchar ;', ' assignment to expression with array type'], 9602: ['    else ( ID > CONST )', ' expected  ;  before  printf '], 9603: ['    if ( ID == ID ) printf ( STRING )', ' expected  ;  before  else '], 9604: ['        if ( ID [ ID ] == - ID [ ID ] )', ' expected expression before  }  token'], 9605: ['    printf ( STRING , ID ( ID , CONST , ID - CONST ) )', ' expected  ;  before  }  token'], 9606: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  for '], 9607: ['\t   ID = ID + ID [ ID ] - ID ;', '  ID  undeclared '], 9608: ['    ID ( ID , CONST , ID ) ;', '  ID  undeclared '], 9609: ['\t        ID = ID [ ID ]', ' expected  ;  before  }  token'], 9610: ['printf ( STRING )', ' expected  ;  before  return '], 9611: ['    int ID , ID ;', '  ID  redeclared as different kind of symbol'], 9612: ['    char ID [ CONST ] = STRING ;', ' conflicting types for  ID '], 9613: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 9614: ['    ID = ID + ID ;', '  ID  undeclared '], 9615: ['                     if ( ID > ID ) { ID = CONST ; break } else', ' expected  ;  before  }  token'], 9616: ['        putchar ( ID ) ;', '  ID  undeclared '], 9617: ['{ if ( ID - CONST * ID <= CONST ) { ID [ ( ID - CONST ) / CONST ] = ID - ( CONST * ID ) ; ID ( ID ) ; return ; }', ' array subscript is not an integer'], 9618: ['    int ID ;', '  ID  redeclared as different kind of symbol'], 9619: ['               else', '  else  without a previous  if '], 9620: ['\tprintf ( STRING ID % STRING ) ;', ' expected  )  before  ID '], 9621: ['\tscanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 9622: ['    float ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 9623: ['\tprintf ( STRING , , ID , ID , ID , ID ) ;                                            ', ' expected expression before  ,  token'], 9624: ['            scanf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 9625: ['\tint ID = ID ;', ' redefinition of  ID '], 9626: ['    else if {', ' expected  (  before  {  token'], 9627: ['ID ( STRING , ID [ CONST ] ) ;', ' too many arguments to function  ID '], 9628: ['    ID = CONST * ID ;', '  ID  undeclared '], 9629: ['        for ( ID = ID - ( ( ID - CONST ) / CONST ) ; ID <= ( ( CONST ID + CONST ) / CONST ) - ID ; ID ++ )', ' invalid suffix "n" on integer constant'], 9630: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9631: ['float ID = ID * ID * ID ( ID , CONST )', ' expected  ,  or  ;  before  printf '], 9632: ['    ID = char * malloc ( ID + CONST ) ;', ' expected expression before  CHAR '], 9633: ['    { printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 9634: ['          ID = ID [ ID ]', ' expected  ;  before  printf '], 9635: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 9636: ['        ID ++ = ;', ' expected expression before  ;  token'], 9637: ['    int ID = ID ( CONST , CONST , CONST , CONST , CONST , CONST )', ' expected  ,  or  ;  before  printf '], 9638: ['    if ( ID ( ID < ( ID ( ID , ID ) ) ) ) {', ' too few arguments to function  ID '], 9639: ['     int ID ;', ' redeclaration of  ID  with no linkage'], 9640: ['       ID = ID + CONST', ' expected  ;  before  }  token'], 9641: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9642: ['        ID [ ID ] = ID [ ID ]                   ', ' expected  ;  before  }  token'], 9643: ['\tfor ( ; ID != CHARNST ; ID ++ ) {', ' empty character constant'], 9644: ['   ID ( CONST )', ' expected  ;  before  return '], 9645: ['    ID = ID ;', '  ID  undeclared '], 9646: ['   ID ( ID , CONST ) ;', ' too few arguments to function  ID '], 9647: ['}', ' expected declaration or statement at end of input'], 9648: ['\t   printf ( STRING , ID )', ' expected  ;  before  if '], 9649: ['    printf ( STRING , * * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 9650: ['ID ( struct ID * ID ) ;', ' expected expression before  struct '], 9651: ['}', ' expected identifier or  (  before  }  token'], 9652: ['\twhile ( ID [ ID ] != CHART && ID < CONST )', '  ID  undeclared '], 9653: ['\t    if ( ID [ ID ] <= CHARST && ID [ ID ] > ID ) {', '  ID  undeclared '], 9654: ['    printf ( STRING , int ID ) ;', ' expected expression before  int '], 9655: ['scanf ( STRING , * ID ) ;', ' invalid type argument of unary  *  '], 9656: ['\tprintf ( STRING , ID ID , ID ) ;', ' expected  )  before  ID '], 9657: ['        * ( * ID + ID ) = ( ID * ) malloc ( sizeof ( ID ) ) ;', ' incompatible types when assigning to type  ID  {aka  struct birth_data } from type  BirthData *  {aka  struct birth_data * }'], 9658: ['  }', ' expected declaration or statement at end of input'], 9659: ['  for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 9660: ['\t       ID = ID [ ID ] + ID', ' expected  ;  before  printf '], 9661: ['    if ( )', ' expected expression before  )  token'], 9662: ['    ID ( ID . ID , CONST , ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 9663: ['   while ( ! ( ( ID / ( CONST * ID ) ) == CONST ) )', '  ID  undeclared '], 9664: ['   ID ++', ' expected  ;  before  }  token'], 9665: ['\tID [ ID ] = ID [ ID ] + ID [ ID + ID ] }', ' expected  ;  before  }  token'], 9666: ['      ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 9667: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 9668: ['\t                else { ID [ ID ] = CONST } ;', ' expected  ;  before  }  token'], 9669: ['  int ID = ID + ID + ID ;', " expected  : , ',',  ; ,  }  or  __attribute__  before  =  token"], 9670: ['    if ( ID * ID + ID * ID + ID * ID - ID * ID - ID * ID - ID * ID == ID ) {', '  ID  undeclared '], 9671: ['    if ( ID < ID [ ID ] )', '  ID  undeclared '], 9672: ['        printf ( STRING , ID [ ID + CONST ] )', ' expected  ;  before  }  token'], 9673: ['    ID ( CONST ) = CONST ;', ' lvalue required as left operand of assignment'], 9674: ['    scanf ( STRING , & ID , & ID , % ID ) ;', ' expected expression before  %  token'], 9675: ['    }', ' expected identifier or  (  before  }  token'], 9676: ['printf ( STRING , ID CHART ) ;', ' expected  )  before  \\x9 '], 9677: ['printf ( STRING , ID . ) ;                                 ', ' expected identifier before  )  token'], 9678: ['\tscanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 9679: ['    float ID , ID , ID , ID , ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 9680: ['}', ' expected declaration or statement at end of input'], 9681: ['        int * ID [ ID ] = ( int * ) malloc ( ID * sizeof ( int ) ) ;', ' variable-sized object may not be initialized'], 9682: ['}', ' expected  ; , identifier or  (  before  struct '], 9683: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 9684: ['        ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 9685: ['            for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 9686: ['           { ID [ ID - ID ] [ ID - CONST ] = CONST ;', '  ID  undeclared '], 9687: ['}', ' expected declaration or statement at end of input'], 9688: ['\tID = ( CONST / CONST * ID ) ( ( ID * ID ) - ( ID * ID ) ) ;', ' called object is not a function or function pointer'], 9689: ['    while ( ! ( ID ( ID , ID [ ID + ID ] ) ) || ID <= ID ( ID ) ) {', ' too few arguments to function  ID '], 9690: ['\t{   ID = CONST ,', ' expected expression before  for '], 9691: ['              printf ( STRING , )', ' expected expression before  )  token'], 9692: ['     printf ( STRING )', ' expected  ;  before  else '], 9693: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 9694: ['\t    if ( ( ( ID % CONST ) == CONST ) && ID [ ID ] <= CHARST && ID [ ID ] >= CHARST || ID = CONST )', ' lvalue required as left operand of assignment'], 9695: ['}', ' expected declaration or statement at end of input'], 9696: ['        for ( ID = ID ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 9697: ['    return ( ID ( ID + CONST , ID , ID + ID [ ID + CONST ] ) || ( ID + CONST , ID + ID [ ID + CONST ] , ID ) )', ' expected  ;  before  }  token'], 9698: ['\t        printf ( STRING )', ' expected  ;  before  break '], 9699: ['\tprintf ( STRING )', ' expected  ;  before  return '], 9700: ['\t    else ( ID = CONST )', ' expected  ;  before  {  token'], 9701: ['        } ID [ ID ] [ ID ] = ID ;', ' subscripted value is neither array nor pointer nor vector'], 9702: ['\t        ID', ' expected  ;  before  }  token'], 9703: ['int main ( ) { printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9704: ['    scanf ( STRING )', ' expected  ;  before  float '], 9705: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 9706: ['        * ID + ID = ( ID * ) malloc ( sizeof ( ID ) ) ;', ' lvalue required as left operand of assignment'], 9707: ['   scanf ( STRING , ID )', ' expected  ;  before  printf '], 9708: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 9709: ['\t    printf ( STRING , ID [ ID - ID ] ) ;', '  ID  undeclared '], 9710: ['printf ( STRING , ID )', ' expected  ;  before  return '], 9711: ['\tprintf ( STRING , ID + ID )', ' expected  ;  before  for '], 9712: ['    printf ( " ID ID ID\\ ( % ID , % ID\\ ) ID \\ ( % ID , % ID\\ ) ID % ID " ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 9713: [' printf ( STRING , ID )', ' expected  ;  before  for '], 9714: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 9715: ['      printf ( STRING )', ' expected  ;  before  }  token'], 9716: ['\tint ID , ID ;', ' redeclaration of  ID  with no linkage'], 9717: [' ID ( ID [ ] [ CONST ] , ID ) ;', ' expected expression before  ]  token'], 9718: ['        ( ID + ID ) = ( int * ) malloc ( ID * sizeof ( int ) ) ; ', ' lvalue required as left operand of assignment'], 9719: ['        for ( ID = CONST ; ID <= ID - ID ; ID ++ ) {', '  ID  undeclared '], 9720: ['\tint ID , ID , ID = CONST', ' expected  ,  or  ;  before  gets '], 9721: ['\tID = ( ID - ID ) / ID CONST ;', ' expected  ;  before numeric constant'], 9722: ['            for ( ID = CONST , ID < CONST ; ID ++ )', ' expected  ;  before  )  token'], 9723: ['        return ( CONST / ID ) * ID ( ID , ID - CONST ) ;', ' too few arguments to function  ID '], 9724: ['\tprintf ( STRING )', ' expected  ;  before  return '], 9725: ['         ID = ID ( ID [ ID ] [ ID ] , ID , ID ) ;   ', ' too many arguments to function  ID '], 9726: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9727: ['    scanf ( STRING , & ID , ) ;                ', ' expected expression before  )  token'], 9728: ['    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 9729: ['for ( ID = CONST , ID [ ID ] != CHART ; ID ++ ) {', ' expected  ;  before  )  token'], 9730: ['          } ID ++ ;', '  ID  undeclared '], 9731: ['    printf ( STRING )', ' expected  ;  before  return '], 9732: ['\tchar ID [ ] = { CHARST , CHARST , CHARST , CHARST , CHARST , CHARST } ID ;', ' expected  ,  or  ;  before  ID '], 9733: [' getchar ( ID ) ;', ' too many arguments to function  getchar '], 9734: ['\t    ID [ ID ] = ID [ ID ] - CONST', ' expected  ;  before  }  token'], 9735: ['printf ( STRING , * ) ;', ' expected expression before  )  token'], 9736: ['\t       printf ( STRING )', ' expected  ;  before  }  token'], 9737: ['for ( ID = CONST ; ID <= ( ID + CONST ) / CONST ) {', ' expected  ;  before  )  token'], 9738: ['}', ' expected declaration or statement at end of input'], 9739: ['\tprintf ( STRING , ID )', ' expected  ;  before  printf '], 9740: ['     ID ( ID , ID , ID , ID ) ;   ', '  ID  undeclared '], 9741: ['    printf ( STRING CONST , - CONST , - CONST ) ;', ' expected  )  before numeric constant'], 9742: ['\tif ( ID == ) {', ' expected expression before  )  token'], 9743: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 9744: ['\t   ID = getchar ( )', ' expected  ;  before  }  token'], 9745: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9746: ['if ( CHARST = ID >= CHARST )', ' lvalue required as left operand of assignment'], 9747: ['    scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 9748: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 9749: ['\tprintf ( STRING , sqrt ( ID ) )', ' expected  ;  before  return '], 9750: ['            for ( ID = CONST ; ID < ID < ID ++ ) {', ' expected  ;  before  )  token'], 9751: ['printf ( STRING ID % CONST ) ;', ' expected  )  before  ID '], 9752: ['ID = ID ( ID , ID , ID ) ;', ' void value not ignored as it ought to be'], 9753: ['\tID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 9754: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 9755: ['   printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 9756: ['    printf ( STRING )', ' expected  ;  before  else '], 9757: ['            else ', ' expected expression before  }  token'], 9758: ['\t   ID = ID ( ID [ ( CONST * ID ) + CONST ] ) ;', '  ID  undeclared '], 9759: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 9760: ['    scanf ( STRING , & ID )', ' expected  ;  before  while '], 9761: ['        printf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 9762: ['    ID = ID % CONST', ' expected  ;  before  ID '], 9763: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 9764: ['    ID = ID', ' expected  ;  before  while '], 9765: ['\t        printf ( STRING ) ; ID', ' expected  ;  before  }  token'], 9766: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 9767: ['\t    printf ( STRING , ID )', ' expected  ;  before  else '], 9768: ['\t        printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 9769: ['\t    ID [ ID ] = ID ;', '  ID  undeclared '], 9770: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 9771: ['    ID -> ID = ID ;', '  ID  undeclared '], 9772: ['\t  for ( ID = ID ; ID ++ ) {', ' expected  ;  before  )  token'], 9773: ['float ID = ID * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 9774: ['\tID = ( ( ID * CONST + ID * CONST + ID * ID ) % CONST )', ' expected  ;  before  printf '], 9775: ['        ID -> ID\x01 ID = ID ;', '  struct node  has no member named  ID '], 9776: ['    scanf ( STRING ID ) ;        ', ' expected  )  before  ID '], 9777: ['            ID = ID + CONST', ' expected  ;  before  printf '], 9778: ['    ID [ ID ] = ID ;', '  ID  undeclared '], 9779: ['\tprintf ( STRING , ID - CONST )', ' expected  ;  before  else '], 9780: ['        ID = CONST ; ID [ ID ] = CONST', ' expected  ;  before  if '], 9781: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 9782: ['          printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 9783: ['        scanf ( STRING , ID )', ' expected  ;  before  return '], 9784: ['        for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 9785: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 9786: ['        else ( ID % ID != CONST )', ' expected  ;  before  {  token'], 9787: ['\twhile ( ID [ ID ] != CHART ) ) {', ' expected statement before  )  token'], 9788: ['                ID = CONST', ' expected  ;  before  for '], 9789: ['printf', ' expected  ;  before  ID '], 9790: ['    printf ( STRING )', ' expected  ;  before  return '], 9791: ['printf ( STRING , ID )', ' expected  ;  before  return '], 9792: ['printf ( STRING )', ' expected  ;  before  scanf '], 9793: ['    * * ID = ( int * * ) malloc ( ID * sizeof ( int * ) )', ' expected  ;  before  for '], 9794: ['    printf ( STRING , ID = ID ) ;', ' lvalue required as left operand of assignment'], 9795: ['}', ' expected  ; , identifier or  (  before  int '], 9796: ['}    ', ' expected identifier or  (  before  }  token'], 9797: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 9798: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 9799: ['\t for ( ID = CONST ; ID < ID && ( ID + CONST ) % CONST = CONST ; ID ++ ) {', ' lvalue required as left operand of assignment'], 9800: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 9801: ['\t        continue', ' expected  ;  before  else '], 9802: ['            if ( ID [ ID ] > ID [ ID ] && ID < ID ) ID ++', ' expected  ;  before  else '], 9803: ['    ID = ( int * ) malloc ( ID . ID * sizeof ( int ) ) ;', '  ID  undeclared '], 9804: ['    for ( int ID = CONST ; ID <= CONST < ID ++ )', ' expected  ;  before  )  token'], 9805: ['    ID = CONST , ID = CONST , ;', ' expected expression before  ;  token'], 9806: ['    printf ( STRING , * ( ID + ID ) ) }    ', ' expected  ;  before  }  token'], 9807: ['    printf ( STRING , * * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 9808: ['        if ( ( ID - ID == ID - ID ) && ( ID [ ID ] == CONST ) )', ' expected expression before  else '], 9809: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 9810: ['\t    for ( ID = CONST ; ID <= ID )', ' expected  ;  before  )  token'], 9811: ['\tchar ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 9812: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 9813: ['\twhile ( CONST = < ID <= CONST ) {', ' expected expression before  <  token'], 9814: ['\t    ID != CONST', ' expected  ;  before  printf '], 9815: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 9816: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9817: ['    while ( ID )', '  ID  undeclared '], 9818: ['}', ' expected declaration or statement at end of input'], 9819: ['    else if ( ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 9820: ['\tID [ ID ] = ( ID + ( ID - CONST ) ) - CONST', ' expected  ;  before  }  token'], 9821: ['    printf ( STRING , ( CONST / CONST ) * ID * ID * ID * ID , CONST * ID * ID * ID * ID , ) ;', ' expected expression before  )  token'], 9822: ['  if ( ID = < ID ) {', ' expected expression before  <  token'], 9823: ['            if ( ID . ID < ID . ID )', '  ID  {aka  struct birth_data } has no member named  ID '], 9824: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 9825: ['\tint ID = ID ( ID , ID ) ;', ' called object  ID  is not a function or function pointer'], 9826: ['   printf ( STRING , ID ) } ;', ' expected  ;  before  }  token'], 9827: ['    scanf ( STRING , & ID )', ' expected  ;  before  return '], 9828: ['    ID -> ID = ID ;', '  ID  undeclared '], 9829: ['\t    if ( ID [ ID ] == ) {', ' expected expression before  )  token'], 9830: ['ID ( ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 9831: ['ID / CONST = ID ;', ' lvalue required as left operand of assignment'], 9832: ['    printf ( STRING )', ' expected  ;  before  return '], 9833: ['}', ' expected declaration or statement at end of input'], 9834: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 9835: ['\t    ID = ID + ID [ ID ] ;', '  ID  undeclared '], 9836: ['\t} else {', '  else  without a previous  if '], 9837: ['    ID - ;', ' expected expression before  ;  token'], 9838: ['        for ( ID = ; ID <= ID ; ID ++ )', ' expected expression before  ;  token'], 9839: ['        printf ( STRING , ID )', ' expected  ;  before  return '], 9840: ['    printf ( STRING )', ' expected  ;  before  return '], 9841: ['\t      * ( ID [ ID ] . ID -> ID ) = ID ;', ' invalid type argument of unary  *  '], 9842: ['        printf ( STRING )', ' expected  ;  before  }  token'], 9843: ['printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 9844: ['\tscanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 9845: ['\telse if ( ID % ID == CONST ) {', '  ID  undeclared '], 9846: ['\t  printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 9847: ['       else if ( ID == ID [ ID ] . ID )', '  ID  {aka  struct birth_data } has no member named  ID ; did you mean  ID ?'], 9848: ['    if ( { ID [ ID ] [ ID ] != CONST } && { ID [ ID ] [ ID + CONST ] == CONST } && { ID [ ID + CONST ] [ ID ] == CONST } )', ' expected expression before  {  token'], 9849: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 9850: ['\tprintf ( STRING )', ' expected  ;  before  }  token'], 9851: ['    ID -> ID ;', '  ID  {aka  struct llnode } has no member named  ID '], 9852: ['    ID . ID = ( struct ID * ) malloc ( CONST * sizeof ( struct ID ) ) ;', ' invalid application of  sizeof  to incomplete type  struct point '], 9853: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  if '], 9854: ['        if ID = CONST                                                            ', ' expected  (  before  ID '], 9855: ['\tID % CONST = ID ;', ' lvalue required as left operand of assignment'], 9856: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 9857: ['              while ( && ID + ID > ID && ID + ID > ID && ID + ID > ID ) {', ' label  ID  used but not defined'], 9858: ['            for ( int ID = ID ; ID <= ID + ID - CONST , ID ++ ) {', ' expected  ;  before  )  token'], 9859: ['\tfloat ID = ID ( CONST + ( ( ID * ID ) / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 9860: ['    printf ( STRING ID [ CONST ] [ CONST ] ) ;', ' expected  )  before  ID '], 9861: ['                printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 9862: ['        int ID = ID ( ID ) + ID ( ID - ID )', ' expected  ,  or  ;  before  ID '], 9863: ['    qsort ( ID , ID ) ;', ' too few arguments to function  qsort '], 9864: ['float ID = CONST * ID * ID * ID * ID ;', ' redeclaration of  ID  with no linkage'], 9865: ['}', ' expected declaration or statement at end of input'], 9866: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 9867: ['\tif ( ID == CONST || ID == CONST || ID == CONST ) {', '  ID  undeclared '], 9868: ['    else return ID ( ID + CONST , ID ) || ID ( ID + CONST , ID + ID [ ID ] )', ' expected  ;  before  }  token'], 9869: ['\tID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on integer constant'], 9870: ['            if ( ID [ ID ] == ID [ ID ] )', '  ID  undeclared '], 9871: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 9872: ['\twhile ( ID [ ID != CONST ) {', ' expected  ]  before  )  token'], 9873: ['\t    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 9874: ['\tputchar ( ) = ID [ ID ] ;', ' too few arguments to function  putchar '], 9875: ['    ID = CONST * CONST * ID * ID * ID ;', '  ID  undeclared '], 9876: ['\t    if ( ID [ ID ] < ID ) ID = ID [ ID ] ;', '  ID  undeclared '], 9877: ['\tprintf ( STRING + STRING , ID , ID ) ;', ' invalid operands to binary + '], 9878: ['    ID ++', ' expected  ;  before  }  token'], 9879: ['        printf ( STRING )', ' expected  ;  before  else '], 9880: ['\t    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 9881: ['\tprintf ( % ID , ID ) ;', ' expected expression before  %  token'], 9882: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 9883: ['\t     printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 9884: ['            ID = ID + ID [ ID ] [ ID - ID - CONST ] ;', '  ID  undeclared '], 9885: ['}', ' expected declaration or statement at end of input'], 9886: ['\tchar ID [ ] ;', ' array size missing in  ID '], 9887: ['                ID = ID + ID [ ID ] [ ID ] * ID [ ID ] [ ID ]', ' expected  ;  before  ID '], 9888: ['printf ( STRING )', ' expected  ;  before  return '], 9889: ['            ID ++', ' expected  ;  before  }  token'], 9890: ['\tint ID , ID , ID = CONST , ID = CONST , ID , ID = CONST ;', ' redeclaration of  ID  with no linkage'], 9891: ['    printf ( STRING CONST * ID * ID * ID * ID ) ;', ' expected  )  before numeric constant'], 9892: ['        else if ( ( ID == ID - CONST ) && ID [ ID ] < ID [ ID - CONST ] ) {', '  else  without a previous  if '], 9893: ['    ID = int ( ID [ ID ] ) ;', ' expected expression before  int '], 9894: ['        ID = ID + ID ( ID ) * ( ID - ID ) / ID ;', '  ID  undeclared '], 9895: ['\tscanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 9896: ['        scanf ( STRING , & ID )', ' expected  ;  before  ID '], 9897: ['            if ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID )', ' expected identifier before  (  token'], 9898: ['                if ID [ ID + ID ] != ID [ ID ] ;', ' expected  (  before  ID '], 9899: ['\tprintf ( STRING , ID , int ( ID ) ) ;', ' expected expression before  int '], 9900: ['# ID < ID . ID >', ' invalid preprocessing directive #inclnude; did you mean #include?'], 9901: ['    for ( ; ID [ ID ] != CHART , ID ++ )', ' expected  ;  before  )  token'], 9902: ['    while ( ID >= CONST && ID < CONST )', ' expected expression before  int '], 9903: ['printf ( STRING )\t', ' expected  ;  before  }  token'], 9904: ['        else {', '  else  without a previous  if '], 9905: ['\t}', ' expected declaration or statement at end of input'], 9906: ['\tif ( ( ID < - CONST ) && ( ID < - CONST ) ) { printf ( STRING ) }', ' expected  ;  before  }  token'], 9907: ['     printf ( STRING , ID ) :', ' expected  ;  before  :  token'], 9908: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 9909: ['\t scanf ( STRING , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 9910: ['\t    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 9911: [' ( int * ) malloc ( ID * sizeof ( int ) )', ' expected  ;  before  }  token'], 9912: ['    ID --', ' expected  ;  before  }  token'], 9913: ['\t    if ( ID == CONST ) printf ( STRING , ID )', ' expected  ;  before  }  token'], 9914: ['    ID = ID - CONST', ' expected  ;  before  for '], 9915: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 9916: ['    int ID = ID * ID - CONST ID * ID ;', ' invalid suffix "a" on integer constant'], 9917: ['        printf ( STRING , ID [ ID ] . ID , ID [ ID ] . ID , ID [ ID ] . ID )', ' expected  ;  before  if '], 9918: ['\tint ID = ID ( ID ) ;', ' too few arguments to function  ID '], 9919: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 9920: ['            break', ' expected  ;  before  }  token'], 9921: ['    scanf ( STRING , ID )', ' expected  ;  before  for '], 9922: ['}', ' expected declaration or statement at end of input'], 9923: [' printf ( STRING ID ) ;', ' expected  )  before  ID '], 9924: ['    printf ( STRING , ( ID ( CONST , CONST ) = CONST ) ? STRING : STRING ) ;', ' lvalue required as left operand of assignment'], 9925: ['\t            printf ( STRING , ID )', ' expected  ;  before  }  token'], 9926: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 9927: ['        ID ++', ' expected  ;  before  }  token'], 9928: ['    ID ( ID , ID , ID , ID + CONST ) ;', ' too few arguments to function  ID '], 9929: ['            if ( ID + CONST + ID > ID ) {', '  ID  undeclared '], 9930: ['    gets ( ID [ ] [ CONST ] ) ;', ' expected expression before  ]  token'], 9931: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 9932: ['    printf ( STRING )', ' expected  ;  before  return '], 9933: ['        ID = ID ( ID , ID [ ID ] ) ;', '  ID  undeclared '], 9934: ['            ID = CONST', ' expected  ;  before  }  token'], 9935: ['    ID >= CONST && < CONST ;', ' expected expression before  <  token'], 9936: ['     if ( ID = )', ' expected expression before  )  token'], 9937: ['}', ' expected declaration or statement at end of input'], 9938: ['}', ' expected declaration or statement at end of input'], 9939: ['    ID = ID + ID % CONST', ' expected  ;  before  if '], 9940: ['                    if ( ( ( ID [ ID - CONST ] ) == CONST && ( ID [ ID - CONST ] == CONST ) ) && ( ID - CONST ) = CONST ) {', ' lvalue required as left operand of assignment'], 9941: ['\t        break ;', ' break statement not within loop or switch'], 9942: ['\t        printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 9943: ['        printf ( STRING )', ' expected  ;  before  ID '], 9944: ['        ID = ID + CONST', ' expected  ;  before  if '], 9945: ['    scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 9946: ['        if ( ID [ ID ] == )                                             ', ' expected expression before  )  token'], 9947: ['    else', '  else  without a previous  if '], 9948: ['\tID = ID ( ID , ID , ID , ID )', ' expected  ;  before  printf '], 9949: ['\tscanf ( STRING )', ' expected  ;  before  printf '], 9950: ['  }', ' expected identifier or  (  before  }  token'], 9951: ['    int * ID , ID , ID = ID , ID = ID + ( ID / CONST ) , ;', ' expected identifier or  (  before  ;  token'], 9952: ['if ( ID % CONST == CONST ) || ( ID % CONST == CONST ) || ( ID % CONST == CONST ) || ( ID % CONST == CONST ) || ( ID % CONST == CONST ) || ( ID % CONST == CONST ) || ( ID % CONST == CONST )', ' expected expression before  ||  token'], 9953: ['                 ID ( ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 9954: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 9955: ['\tfor ( ID = CONST ; ID < CONST ; ID ++ CONST )', ' expected  )  before numeric constant'], 9956: ['     if ( ID = < ID )', ' expected expression before  <  token'], 9957: ['    for ( int ID = CONST ; ID < ID ; ID ++ ) { if ( ID % ID == CONST ) { ID = CONST }', ' expected  ;  before  }  token'], 9958: ['    ID [ ID + ] = CHART ;', ' expected expression before  ]  token'], 9959: ['        else', ' expected expression before  }  token'], 9960: ['    if ( ID [ ID ] == CHARST && ID [ ID == CHARST )', ' expected  ]  before  )  token'], 9961: ['}', ' expected  ; , identifier or  (  before  int '], 9962: ['    ID ( ( ID + ID ) , ID )', ' expected  ;  before  return '], 9963: ['        printf ( STRING , & ID [ ID ] , & ID [ ID ] )', ' expected  ;  before  if '], 9964: ['  printf ( STRING , ID )', ' expected  ;  before  return '], 9965: ['ID ( ID [ ] , ID , ID , ID ) ;', ' expected expression before  ]  token'], 9966: ['\tID', ' expected  ;  before  return '], 9967: ['for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 9968: ['    if ( * ID [ ID ] > ID )', ' invalid type argument of unary  *  '], 9969: ['    ID = ID ( ID , ID , ID , ID , ID )', ' expected  ;  before  printf '], 9970: ['}', ' expected declaration or statement at end of input'], 9971: ['\tfor ( ID = CONST ; ID [ ID ] != CHART ; ID ++ ) ;', '  ID  undeclared '], 9972: ['    ID ( ID , ID - CONST ) ;', ' too few arguments to function  ID '], 9973: ['}', ' expected declaration or statement at end of input'], 9974: ['ID ( ID , ID , ID )', ' expected  ;  before  for '], 9975: ['\t    }`', ' stray  `  in program'], 9976: ['            if ( ID [ ID ] > ID [ ID + CONST ] )', '  ID  undeclared '], 9977: ['    scanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 9978: ['\t    printf ( STRING , * ID [ ID ] + ID ) ;', ' invalid type argument of unary  *  '], 9979: ['   printf ( STRING ID ) ;', ' expected  )  before  ID '], 9980: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 9981: ['\t            ID = ID', ' expected  ;  before  ID '], 9982: ['      printf ( STRING )', ' expected  ;  before  }  token'], 9983: ['    { printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 9984: ['\tint ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 9985: ['printf ( STRING )', ' expected  ;  before  return '], 9986: ['\t   return int ID ( ) ;', ' expected expression before  int '], 9987: ['    } else printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 9988: ['\t    } printf ( STRING )', ' expected  ;  before  }  token'], 9989: ['       { if ID = ID - CONST', ' expected  (  before  ID '], 9990: ['      if', ' expected  (  before  printf '], 9991: ['}', ' expected declaration or statement at end of input'], 9992: ['    int ID [ ID ] [ ID ] = { CONST } ;', ' variable-sized object may not be initialized'], 9993: ['        if ( ( ID [ ID ] == ID [ ID - CONST ] ) && ID == ID - CONST ) {', '  ID  undeclared '], 9994: ['\t        if ( ID + ID ( ( ( ID + CONST ) / CONST - ID ) * ( ( ID + CONST ) / CONST - ID ) ) == )', ' expected expression before  )  token'], 9995: ['    ID [ CONST ] = CONST ;', '  ID  undeclared '], 9996: ['        CHARST = CHARST ;', ' lvalue required as left operand of assignment'], 9997: ['     int ID , ID = CONST ;', '  ID  redeclared as different kind of symbol'], 9998: ['\t    ID ++', ' expected  ;  before  }  token'], 9999: ['        else if ID [ ID ] = * ( ID + ID ) ;', ' expected  (  before  ID '], 10000: ['        ID = ID ( ID , ID [ ID ] )', ' expected  ;  before  }  token'], 10001: ['}', ' expected declaration or statement at end of input'], 10002: ['    for ( int ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 10003: ['        printf ( STRING )', ' expected  ;  before  }  token'], 10004: ['              ID ++', ' expected  ;  before  }  token'], 10005: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 10006: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 10007: ['    printf ( STRING , ID , CONST , CONST )', ' expected  ;  before  if '], 10008: ['        ID = [ ID + ID ] = CHART ;', ' expected expression before  [  token'], 10009: ['\tprintf ( STRING , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] )', ' expected  ;  before  return '], 10010: ['                printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 10011: ['    int ID = ID', ' expected  ,  or  ;  before  printf '], 10012: ['    for ( ID = CONST ; ID ++ )', ' expected  ;  before  )  token'], 10013: ['    printf ( STRING , ID , ID )', ' expected  ;  before  for '], 10014: ['\twhile ( ID != ID && ID != CHARNST && ID < CONST )', ' empty character constant'], 10015: ['        ID [ CONST ] = ( ID [ CONST ] == CONST ) ? ID [ CONST ] = CONST : ID [ CONST ] = CONST ;', ' lvalue required as left operand of assignment'], 10016: ['}', ' expected declaration or statement at end of input'], 10017: ['\t  for ( ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 10018: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10019: [' for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 10020: ['    scanf ( STRING , & ID ) ;                                  ', '  ID  undeclared '], 10021: ['\tfor ( ID = CONST ; ID <= ; ID = ( ID + ID ) % ID )', ' expected expression before  ;  token'], 10022: ['    char ID = CHARST', ' expected  ,  or  ;  before  printf '], 10023: ['    getchar ( ID ) ;', ' too many arguments to function  getchar '], 10024: ['        printf ( STRING )', ' expected  ;  before  return '], 10025: ['\tfloat ID = ( CONST ) * ID * ID', ' expected  ,  or  ;  before  if '], 10026: ['    return ID [ ] ; ', ' expected expression before  ]  token'], 10027: ['        printf ( STRING )', ' expected  ;  before  }  token'], 10028: ['\t    else printf ( STRING )', ' expected  ;  before  }  token'], 10029: ['\t    if ( ID [ ID ] == CHARST && ID == CHART ) {', '  ID  undeclared '], 10030: ['    if ( ( ID != CONST && ID != CONST ) || ( ID = CONST && ID = CONST ) )', ' lvalue required as left operand of assignment'], 10031: ['\tID = ID ( CONST - ( ( ID * ID - ID * ID ) / ( ID * ID - ID * ID ) ) ) ;', ' called object  ID  is not a function or function pointer'], 10032: ['    \t    if ( ID [ ID ] -> ID . ID == ID )', '  list_entries[i]->head  is a pointer; did you mean to use  -> ?'], 10033: ['    printf ( STRING )', ' expected  ;  before  return '], 10034: ['    scanf ( STRING , & ID , & ID , & ID , & ID , % ID ) ;', ' expected expression before  %  token'], 10035: ['printf ( STRING )', ' expected  ;  before  return '], 10036: ['\t    ID [ ID ] = CONST', ' expected  ;  before  }  token'], 10037: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 10038: ['int ID [ ID ] ;', ' conflicting types for  ID '], 10039: ['        char * ID [ ID ] = ( char * ) malloc ( ID * sizeof ( char ) ) ;', ' variable-sized object may not be initialized'], 10040: ['\tID = ( ID * ID / CONST ) ID ( CONST ) ;', ' expected  ;  before  ID '], 10041: ['    if ( ID [ ID ] ID [ ID ] ) {', ' expected  )  before  ID '], 10042: ['    scanf ( STRING )', ' expected  ;  before  return '], 10043: ['    ID ( ID , ID ) ;', ' too few arguments to function  ID '], 10044: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 10045: ['\tif ( ID [ ID ] > CHARST ) printf ( STRING , * ( ID + ID + ID ) ) ;\t    ', '  ID  undeclared '], 10046: ['}', ' expected declaration or statement at end of input'], 10047: ['\t* return CONST ;', ' expected expression before  return '], 10048: ['        for ( ID = ID - CONST ; ID = > CONST * ID - CONST ; ID -- ) {', ' expected expression before  >  token'], 10049: ['        ID = ++ ;', ' expected expression before  ;  token'], 10050: ['            ID = ID + CONST', ' expected  ;  before  printf '], 10051: ['           else', '  else  without a previous  if '], 10052: ['            ID = ID [ ID ] - ID', ' expected  ;  before  }  token'], 10053: ['\tID = ( CONST ID / CONST ) ;', ' invalid suffix "A" on integer constant'], 10054: ['    int ID = CONST ;', ' redefinition of  ID '], 10055: ['    if ( ID < - ID / CONST ) {', '  ID  undeclared '], 10056: ['\telse { printf ( STRING ) ; }', '  else  without a previous  if '], 10057: ['printf ( STRING )', ' expected  ;  before  return '], 10058: ['    ID ( ID , ID [ ] ) ;', ' expected expression before  ]  token'], 10059: ['    ID [ ID ] = ID', ' expected  ;  before  }  token'], 10060: ['\tID = gets ( ) ;', ' too few arguments to function  gets '], 10061: ['    printf ( STRING )', ' expected  ;  before  return '], 10062: ['else { printf ( STRING ) ; } ;', '  else  without a previous  if '], 10063: ['      if ( ID [ ID ] == )                                   ', ' expected expression before  )  token'], 10064: ['        ID = ID [ ID ]', ' expected  ;  before  ID '], 10065: ['    printf ( STRING , ID )', ' expected  ;  before  for '], 10066: ['printf ( STRING ID , ID , ID ) ;', ' expected  )  before numeric constant'], 10067: ['    printf ( STRING )', ' expected  ;  before  }  token'], 10068: ['    if ( ( ID . ID < ID . ID ) && ( ID . ID > ID . ID ) ) && ( ( ID . ID < ID . ID ) && ( ID . ID < ID . ID ) )', ' expected identifier before  (  token'], 10069: ['    printf ( STRING , ID ID ID ) ;', ' expected  )  before  ID '], 10070: ['       free ( ID ) ; ', '  ID  undeclared '], 10071: ['        puts ( * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 10072: ['            if ( ID == ID )', '  ID  undeclared '], 10073: ['    else ID = ID ;', '  else  without a previous  if '], 10074: ['   return ID [ ID ] ;', '  ID  undeclared '], 10075: ['    ID = ID', ' expected  ;  before  free '], 10076: ['    else if ( ID < ID && ID < ID && ID < ID && ID < ID ) {', '  ID  undeclared '], 10077: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 10078: ['\t            printf ( STRING )', ' expected  ;  before  }  token'], 10079: ['      ID = ( struct ID * ) malloc ( sizeof ( struct ID ) )      ', ' expected  ;  before  ID '], 10080: ['    printf ( STRING , ID ( CONST , CONST ) ) ;', ' too few arguments to function  ID '], 10081: ['    ID ( ID , ID + CONST , ID , ID + CONST , ID ) ;', ' too few arguments to function  ID '], 10082: ['ID = ( CONST / CONST ) * ID * ;', ' expected expression before  ;  token'], 10083: ['  else if ( ( ( ID + ID ) <= ID ) || ID == CONST || ID == CONST || == CONST )', ' expected expression before  ==  token'], 10084: ['        if ( ( ID == ID || ID == ID ) ) || ( ( ID == ID ) || ( ID == ID ) )', ' expected expression before  ||  token'], 10085: ['      { printf ( STRING , ID [ ID ] ) ; ID ++ } ', ' expected  ;  before  }  token'], 10086: ['             printf ( STRING , , ID , ID ) ;', ' expected expression before  ,  token'], 10087: ['   printf ( STRING ) ; break ;', ' break statement not within loop or switch'], 10088: ['\tprintf ( STRING , ID ( ID [ ID ] ) ) ;', ' too few arguments to function  ID '], 10089: ['int ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 10090: ['    if ( ID == ID )', '  ID  undeclared '], 10091: ['scanf ( STRING , & ID ) ;', '  ID  undeclared '], 10092: ['    printf ( STRING , * ( ID + ID ) )', ' expected  ;  before  ID '], 10093: ['    ID = ID ;', '  ID  undeclared '], 10094: ['        printf ( STRING ID -> ID ) ;', ' expected  )  before  ID '], 10095: ['for ( ID = CONST ; ID <= ID / CONST ; ID ++ )', '  ID  undeclared '], 10096: ['        if ( ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) || ( ID [ ID ] >= CHARST ) && ID [ ID ] <= CHARST ) ) {', ' expected statement before  )  token'], 10097: ['   printf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  return '], 10098: ['\tID = getchar ( )', ' expected  ;  before  while '], 10099: ['\tfor ( int ID = CONST ; ID != CHARNST ; ID ++ ) {', ' empty character constant'], 10100: ['scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 10101: ['        case CONST : printf  ( STRING ) ; break  } }', ' expected  ;  before  }  token'], 10102: ['if ( ID > ID )', '  ID  undeclared '], 10103: ['        ID = ID - ID', ' expected  ;  before  for '], 10104: ['    { ID = ID + CONST }', ' expected  ;  before  }  token'], 10105: ['        scanf ( STRING , & ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 10106: ['\t    printf ( STRING , ) ;', ' expected expression before  )  token'], 10107: [' return CONST ; }', ' expected identifier or  (  before  }  token'], 10108: ['    printf ( STRING , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 10109: ['\tscanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 10110: ['        else if ( ( ID * ID + ID *= = ID * ID ) || ( ID * ID + ID * ID == ID * ID ) || ( ID * ID + ID * ID == ID * ID ) ) ', ' expected expression before  =  token'], 10111: ['\tprintf ( STRING )', ' expected  ;  before  for '], 10112: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10113: ['              printf ( STRING , ID , ID )', ' expected  ;  before  }  token'], 10114: ['    int ID [ CONST ]', ' expected  ;  before  int '], 10115: ['    scanf ( STRING , & ID , & ID ) ;', '  ID  undeclared '], 10116: ['                   printf ( STRING , CONST , - CONST , - CONST )', ' expected  ;  before  }  token'], 10117: ['\t        ID = CONST', ' expected  ;  before  else '], 10118: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 10119: ['\tprintf ( STRING , float ( CONST / CONST * ( ID - CONST ) + CONST ) ) ;', ' expected expression before  float '], 10120: ['\t`', ' stray  `  in program'], 10121: ['             printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 10122: ['    ID [ ID ] = ID', ' expected  ;  before  scanf '], 10123: ['             ID = ID * ID [ ID ] [ ID ] ;', '  ID  undeclared '], 10124: ['        ID = ID + ( ID [ ID ] * ID ( CONST , ID - ( ID + CONST ) ) )', ' expected  ;  before  printf '], 10125: ['            return CONST', ' expected  ;  before  break '], 10126: ['        {   ID = ID [ ID ] + ID [ ID ]                      ', ' expected  ;  before  ID '], 10127: ['    while ( ID = < ID )', ' expected expression before  <  token'], 10128: ['    if ( ID / CONST == int )', ' expected expression before  int '], 10129: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 10130: ['\t    if ( ID [ ID ] >= CONST && ID [ ID ] = < CONST )', ' expected expression before  <  token'], 10131: ['        if ( ID [ ID ] % CONST == CONST ) {', '  ID  undeclared '], 10132: ['\tscanf ( STRING , ID )', ' expected  ;  before  for '], 10133: ['  int ID = ID - CONST ;', ' redeclaration of  ID  with no linkage'], 10134: ['\t            } ID [ ID ] = CHART', ' expected  ;  before  scanf '], 10135: ['\t} break ;', ' break statement not within loop or switch'], 10136: ['            if ( ID [ ID ] [ ID ] == ID [ ID + ID ] [ ID ] )', '  ID  undeclared '], 10137: ['\t\tfor ( int ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 10138: ['printf ( STRING )', ' expected  ;  before  return '], 10139: ['        if ( ID ( ID ) == CONST )', '  ID  undeclared '], 10140: ['\t    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 10141: ['    int ID = CONST ; int  ID = ID - CONST , ID = ID [ CONST ] ;                     ', '  ID  redeclared as different kind of symbol'], 10142: ['int ID , ID , * * ID , ID , ID , ID = CONST ,', ' expected identifier or  (  before  int '], 10143: ['    ID ( ID [ ] , CONST ) ;', ' expected expression before  ]  token'], 10144: ['    printf ( STRING , ID = ) ;', ' expected expression before  )  token'], 10145: ['       else if ( ID * ID > ID * ID + ID * ID ) && ( ID == ID ) {', ' expected identifier before  (  token'], 10146: ['int main ( ) { printf STRING ;', ' expected  ;  before string constant'], 10147: ['             ID [ ID ] = ID ; }', '  ID  undeclared '], 10148: ['    else { return CONST } ;', ' expected  ;  before  }  token'], 10149: ['}', ' expected declaration or statement at end of input'], 10150: ['}', ' expected declaration or statement at end of input'], 10151: ['   if ( ID + CONST < ID ID + CONST < ID )', ' expected  )  before  ID '], 10152: ['        ID = ID', ' expected  ;  before  printf '], 10153: ['    else printf ( STRING , ID ) ;', '  else  without a previous  if '], 10154: ['      return CONST', ' expected  ;  before  else '], 10155: ['    printf ( STRING )    ', ' expected  ;  before  }  token'], 10156: ['    if ( ID == CONST || ID = CONST ) { printf ( STRING ) ; }', ' lvalue required as left operand of assignment'], 10157: ['\tprintf ( STRING )', ' expected  ;  before  return '], 10158: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 10159: ['\t                ID [ ID ] = ID [ ID ] ; ID ++', ' expected  ;  before  }  token'], 10160: ['{ break }', ' expected  ;  before  }  token'], 10161: ['        ID ++', ' expected  ;  before  }  token'], 10162: ['        if ( ID = CONST || ID = ID )', ' lvalue required as left operand of assignment'], 10163: ['    int ID = CONST , ID = CONST , ID = CONST , ID = ID ;', '  ID  undeclared '], 10164: ['    ID = ( CONST / CONST ) * ( ID * ID * ID * ID * ) ;', ' expected expression before  )  token'], 10165: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 10166: ['\t     ID = ID [ ID ] + ID + CONST ;', '  ID  undeclared '], 10167: ['        ID = ID + ID % ID ;', '  ID  undeclared '], 10168: ['    ID ( ID , ID - CONST )', ' expected  ;  before  }  token'], 10169: ['         printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 10170: ['        scanf ( STRING , & ( ID [ ID ] -> ID ) , & ( ID [ ID ] -> ID ) , & ( ID [ ID ]                               -> ID ) , & ( ID [ ID ] -> ID ) )', ' expected  ;  before  }  token'], 10171: ['        ID = ID ( ID + ID , ID ) ;', '  ID  undeclared '], 10172: ['\t    for ( ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 10173: ['                ID = ID [ ID - CONST ] ;', ' lvalue required as left operand of assignment'], 10174: ['    ID = int ID ;', ' expected expression before  int '], 10175: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 10176: ['    } printf ( STRING , ID )', ' expected  ;  before  ID '], 10177: ['    } else if ( ( ID * ID + ID * ID ) < ID * ID ) ) {', ' expected statement before  )  token'], 10178: ['                    ID = ID [ ID ] + ID [ ID ]', ' expected  ;  before  if '], 10179: ['  return ID ( ID , ID , ID - ID )', ' expected  ;  before  }  token'], 10180: ['            for ( ID = ID - ID + CONST ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 10181: ['    if ( ID . ID >= . ID && ID . ID >= ID . ID )', ' expected expression before  .  token'], 10182: ['int ID = ID ;', ' redeclaration of  ID  with no linkage'], 10183: ['    if ( ID * ID ) == ( ID * ID )', ' expected expression before  ==  token'], 10184: ['            printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 10185: ['   ID ( ID ,  ID , ID - ID , ID )  ', ' expected  ;  before  return '], 10186: ['         ID [ ID ] = ID [ ID + CONST ] ;', '  ID  undeclared '], 10187: ['\tprintf ( STRING , ID ( ID [ ] , ID ) ) ;', ' expected expression before  ]  token'], 10188: ['for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 10189: ['\t    else if ( ID % CONST != = CONST )', ' expected expression before  =  token'], 10190: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10191: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 10192: ['            printf ( STRING ID ID ? STRING ) ;', ' expected  )  before  ID '], 10193: ['\tfor', ' expected  (  before  return '], 10194: ['    if ( ID % CONST == CONST )', '  ID  undeclared '], 10195: ['\tprintf ( STRING )', ' expected  ;  before  return '], 10196: ['    if ( ( ID % CONST == CONST ) && ( ID % CONST == CONST ) && ( ID % CONST = CONST ) )             ', ' lvalue required as left operand of assignment'], 10197: ['\t    if ( ID [ ID ] == CHART ) {', '  ID  undeclared '], 10198: ['  }', ' expected declaration or statement at end of input'], 10199: ['        ID = ID ;', '  ID  undeclared '], 10200: ['    printf ( STRING , ID ', ' expected  )  before  ID '], 10201: ['    printf ( STRING , * ID )', ' expected  ;  before  return '], 10202: ['      { printf ( STRING , ID + ID ( ID - ID + CONST ) ) ; }', ' called object  ID  is not a function or function pointer'], 10203: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 10204: ['}', ' expected declaration or statement at end of input'], 10205: ['}', ' expected declaration or statement at end of input'], 10206: ['}', ' expected declaration or statement at end of input'], 10207: ['\t  scanf ( STRING , ID [ ID ] ) ;  ', '  ID  undeclared '], 10208: ['\tscanf ( STRING , & ID )', ' expected  ;  before  if '], 10209: ['    ID . ID = ( int * ) malloc ( ( ID . ID ) * sizeof ( int ) ) ;', ' invalid use of flexible array member'], 10210: ['    return CONST', ' expected  ;  before  }  token'], 10211: ['        if ( ID [ ID ] < ID && ID [ ID ] > ID [ CONST ] )', '  ID  undeclared '], 10212: ['\t            ID = ID + CONST', ' expected  ;  before  break '], 10213: ['if ( ID == CONST )', ' expected expression before  }  token'], 10214: ['void ID ( int ID [ ] [ ] , int ID , int ID )', ' array type has incomplete element type  int[] '], 10215: ['        ID [ ID ] = ID [ ID - ID ]', ' expected  ;  before  }  token'], 10216: ['        printf ( STRING )', ' expected  ;  before  printf '], 10217: ['          printf ( STRING . ) ;', ' expected identifier before  )  token'], 10218: ['    ID ( ) ;', ' too few arguments to function  ID '], 10219: ['\tprintf', ' expected  ;  before  ID '], 10220: ['    for ( ID = CONST ; ID < ID - ID ; ID ++ ) {', '  ID  undeclared '], 10221: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 10222: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 10223: ['   }', ' expected declaration or statement at end of input'], 10224: ['        if ( ID [ ID ] = < CHARST && ID [ ID ] >= CHARST ) {', ' expected expression before  <  token'], 10225: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10226: ['}', ' expected declaration or statement at end of input'], 10227: ['int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 10228: ['\tscanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 10229: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 10230: ['    \t    ID [ ID ] . ID = ( ID . ID ) -> ID ;', '  (struct list_entry *)&list_entries  is a pointer; did you mean to use  -> ?'], 10231: ['        printf ( STRING , ID [ ID - ID + ID ] )', ' expected  ;  before  }  token'], 10232: ['        if ( ID != CHARNST ) {', ' empty character constant'], 10233: ['    if ( ID [ CONST ] . ID = < ID [ CONST ] . ID && ID [ CONST ] . ID >= ID [ CONST ] . ID && ID [ CONST ] . ID >= ID [ CONST ] . ID &&                      ID [ CONST ] . ID <= ID [ CONST ] . ID )', ' expected expression before  <  token'], 10234: ['\t\tfor ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 10235: ['\t} else { ID = ( ID + ID ) % CONST }', ' expected  ;  before  }  token'], 10236: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 10237: ['}', ' expected declaration or statement at end of input'], 10238: ['    printf ( STRING , ID ( ID [ ] ) ) ;', ' expected expression before  ]  token'], 10239: ['     if ( ( ( ID % CONST ) == CONST ) && ( ( ID % CONST ) != = CONST ) )', ' expected expression before  =  token'], 10240: ['printf ( STRING )    }', ' expected  ;  before  }  token'], 10241: ['        printf ( STRING )', ' expected  ;  before  }  token'], 10242: ['} }', ' expected identifier or  (  before  }  token'], 10243: ['    scanf ( STRING , ID , ID , ID , ID , ID , ) ;', ' expected expression before  )  token'], 10244: ['ID ID + ID + ID ;', ' expected  ;  before  ID '], 10245: ['ID ( ID , CONST , ID ) ;', '  ID  undeclared '], 10246: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 10247: ['            else { ID = ID - ID + CONST }', ' expected  ;  before  }  token'], 10248: ['        printf ( STRING )', ' expected  ;  before  }  token'], 10249: ['\tprintf ( STRING )', ' expected  ;  before  for '], 10250: ['    printf ( STRING , ID [ ID ] . ID ) ;', '  ID  undeclared '], 10251: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 10252: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 10253: ['    printf ( STRING )', ' expected  ;  before  }  token'], 10254: ['}', ' expected declaration or statement at end of input'], 10255: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 10256: ['        ID = ID + ID ( ID , ID , ID , ID + CONST , ID ) ;', '  ID  undeclared '], 10257: ['    scanf ( STRING , ID ) ;', '  ID  undeclared '], 10258: ['        ID = ID + CONST', ' expected  ;  before  for '], 10259: ['\t    if ( ID [ ID ] = > CHARST && ID [ ID ] <= CHARST ) {', ' expected expression before  >  token'], 10260: ['}', ' expected declaration or statement at end of input'], 10261: ['printf ( STRING )', ' expected  ;  before  return '], 10262: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 10263: ['     if ( ID == ID - CONST && ID = ID - CONST ) return CONST ;', ' lvalue required as left operand of assignment'], 10264: ['\tID = CONST', ' expected  ;  before  printf '], 10265: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 10266: ['        printf ( STRING )', ' expected  ;  before  }  token'], 10267: ['        ID [ ID ] = ID [ ID - ID ] ;', '  ID  undeclared '], 10268: ['    while ( ID % CONST = CONST ) {', ' lvalue required as left operand of assignment'], 10269: ['\t   printf ( STRING , ID [ ID ] )   ', ' expected  ;  before  }  token'], 10270: ['    ID ;', '  ID  undeclared '], 10271: ['\tfor ( ID = CONST , ID < CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 10272: ['        continue', ' expected  ;  before  else '], 10273: ['        ID [ ID ] = ( int * ) malloc ( ID * sizeof ( int ) ) ;', '  ID  undeclared '], 10274: ['    scanf ( STRING , & ID , & ID )', ' expected  ;  before  if '], 10275: ['       else  ( ID [ ID ] [ ID ] == CONST )', ' expected  ;  before  {  token'], 10276: ['\t       printf ( / ID ) ;', ' expected expression before  ID  token'], 10277: ['printf ( STRING )', ' expected  ;  before  return '], 10278: ['        if ( ID [ ID ] == ID ) return CONST ;', ' invalid operands to binary == '], 10279: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 10280: ['ID ( ID , ID ) ;', ' too few arguments to function  ID '], 10281: ['  printf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  return '], 10282: ['\tint ', ' expected identifier or  (  before  return '], 10283: ['\tfor ( ID = CONST ; ID < CONST * ID - CONST )', ' expected  ;  before  )  token'], 10284: ['\tfor ( ID = CONST , ID < ( ID - ID ) ; ID ++ ) {', ' expected  ;  before  )  token'], 10285: ['     else if ', ' expected  (  before  {  token'], 10286: ['\t    if ( ID [ ID ] == CHART || ID [ ID ] = CHARST ) break ;', ' lvalue required as left operand of assignment'], 10287: ['else {', '  else  without a previous  if '], 10288: ['    printf ( STRING , * ID )', ' expected  ;  before  return '], 10289: ['\t  printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 10290: ['    ID = ID ( ID [ ] , CONST ) ;', ' expected expression before  ]  token'], 10291: ['    scanf ( STRING , & )', ' expected expression before  )  token'], 10292: ['\t    for ( int ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 10293: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 10294: ['               if ( ID [ ID ] == ID [ ID + ID ] )', ' expected expression before  else '], 10295: ['ID = char ( malloc ( CONST * sizeof ( char ) ) ) ;', ' expected expression before  CHAR '], 10296: ['}', ' expected declaration or statement at end of input'], 10297: ['       break ;', ' break statement not within loop or switch'], 10298: ['\tif ( ( ID + ID + ID ) != CONST )   printf ( STRING ) ;', '  ID  undeclared '], 10299: ['    if ( ID % CONST = CONST )', ' lvalue required as left operand of assignment'], 10300: ['                ID ( ID + ID , ID , ID ) ;', '  ID  undeclared '], 10301: ['    else ( ID * ID != ID * ID ) {', ' expected  ;  before  {  token'], 10302: ['\t    ID [ ID ] = STRING ;', '  ID  undeclared '], 10303: ['        ID += ID - CONST', ' expected  ;  before  }  token'], 10304: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 10305: ['    ID ( ID , ID , ID , ID ) ;', ' too few arguments to function  ID '], 10306: ['\tfor ( ID = ; ID <= ID ; ID ++ ) {', ' expected expression before  ;  token'], 10307: ['\tgets ( STRING , ID ) ;', ' too many arguments to function  gets '], 10308: ['    float ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 10309: ['\tID = ( CONST * ID ) / CONST', ' expected  ;  before  ID '], 10310: ['        printf ( STRING )', ' expected  ;  before  }  token'], 10311: ['     scanf ( STRING , & ID , & ID ) ;', '  ID  undeclared '], 10312: ['}', ' expected declaration or statement at end of input'], 10313: ['}', ' expected declaration or statement at end of input'], 10314: ['scanf ( STRING & ID , & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 10315: ['    printf ( STRING , ID , ) ;', ' expected expression before  )  token'], 10316: ['    if ( ( ID == ID * ID ) || ( ID == CONST && ID [ CONST ] [ CONST ] = CONST ) )', ' lvalue required as left operand of assignment'], 10317: ['    for ( ID = ID , ID > CONST ; ID -- )', ' expected  ;  before  )  token'], 10318: ['    if ( ID * ID = ID * ID ) {', ' lvalue required as left operand of assignment'], 10319: ['    ID = CHARST + CHARST - CHARST', ' expected  ;  before  return '], 10320: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 10321: ['       for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 10322: ['        return CONST', ' expected  ;  before  }  token'], 10323: ['\t    for ( ID = CONST ; ID < CONST , ID ++ )', ' expected  ;  before  )  token'], 10324: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 10325: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 10326: ['\t    if ( ID ) {', '  ID  undeclared '], 10327: ['\t            if ( ID [ ID ] == ID [ CONST ] || ID [ ID ] = ID [ ID - CONST ] ) {', ' lvalue required as left operand of assignment'], 10328: ['        case CONST ; strcpy ( ID , STRING ) ;', ' expected  :  or  ...  before  ;  token'], 10329: ['\tprintf ( STRING , * ID + CONST )', ' expected  ;  before  return '], 10330: ['}', ' expected declaration or statement at end of input'], 10331: ['      if ( ID > ID )', '  ID  undeclared '], 10332: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 10333: ['}', ' expected  ; , identifier or  (  before  int '], 10334: ['        ID [ ID ] = ID [ ID ] * ( ID - ID )', ' expected  ;  before  }  token'], 10335: ['\t   if ( ID [ ID ] == CHARST || ID [ ID ] == / CONST )', ' expected expression before  ID  token'], 10336: ['  { for ( ID = CONST , ID <= ID ; ID ++ )                                                 ', ' expected  ;  before  )  token'], 10337: ['\t        ID = ID - CONST ID ;', ' fixed-point types not supported for this target'], 10338: ['        scanf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 10339: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 10340: ['    { switch ( ID / CONST ) { case CONST : printf ( STRING ) { ID = ID % CONST ; switch ( ID - ( ID % CONST ) )', ' expected  ;  before  {  token'], 10341: ['\t\telse if ( ID ( ID ) )', '  else  without a previous  if '], 10342: ['          ID ++', ' expected  ;  before  }  token'], 10343: ['printf ( STRING , CONST * CONST * CONST * CONST * CONST * ) ;', ' expected expression before  )  token'], 10344: ['    printf ( STRING )', ' expected  ;  before  }  token'], 10345: ['\t    if ( ( ( ID >= ID ) && ( ID <= ( ID + CONST ) ) ) || { ( ID >= ID ) && ( ID <= ( ID + CONST ) ) } || { ( ID >= ID ) && ( ID <= ( ID + CONST ) ) } || { ( ID >= ID ) && ( ID <= ( ID + CONST ) ) } )', ' expected expression before  {  token'], 10346: ['    printf ( STRING )', ' expected  ;  before  return '], 10347: ['    scanf ( STRING & ID , & ID , & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 10348: ['\tprintf ( ) ;', ' too few arguments to function  printf '], 10349: ['    printf ( STRING , ID ( ID ) ) ;', '  ID  undeclared '], 10350: ['    printf ( STRING , ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 10351: ['    if ( ID == ID )', '  ID  undeclared '], 10352: ['}', ' expected declaration or statement at end of input'], 10353: ['\t    ID = ID -> ID ; printf ( STRING , ID )', ' expected  ;  before  }  token'], 10354: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 10355: ['    int ID , ID , ID , ID , ID , ID , ID , ID , ID , ID , ID = CONST , ID = CONST ;', ' redeclaration of  ID  with no linkage'], 10356: ['   float ID = - CONST , ID = CONST ;', ' redefinition of  ID '], 10357: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 10358: ['\tID = ( ID / CONST ) + CONST ; ID = ID', ' expected  ;  before  for '], 10359: ['}', ' expected  ; , identifier or  (  before  int '], 10360: ['  for ( CONST <= ID <= CONST ; ID ++ ) {                                ', ' expected  ;  before  )  token'], 10361: ['                ID = ID + ID', ' expected  ;  before  while '], 10362: ['else', '  else  without a previous  if '], 10363: ['    ID = ID ;', '  ID  undeclared '], 10364: ['   char ID [ CONST ] ; int ID [ CONST ]', ' expected  ;  before  int '], 10365: ['          else ( ID . ID != ID . ID )', ' expected  ;  before  {  token'], 10366: ['        ID = ID -> ID', ' expected  ;  before  }  token'], 10367: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10368: ['\t        printf ( STRING , ID [ ID ] + ID )', ' expected  ;  before  }  token'], 10369: ['    if ( ID [ ID ] CONST [ CONST ] ) {', ' expected  )  before numeric constant'], 10370: ['            ID = ID [ ID ] ;', '  ID  undeclared '], 10371: ['else {', '  else  without a previous  if '], 10372: ['\twhile ( ( ID [ ID ] != ID && ID < CONST ) )', '  ID  undeclared '], 10373: ['\tID ( ID , ID , ID )', ' expected  ;  before  return '], 10374: ['\tint ID [ CONST ] , ID [ CONST ] , ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 10375: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 10376: ['}', ' expected declaration or statement at end of input'], 10377: ['\t        if ( ( ID [ ID ] > ID [ ID ] ) && ( ID < ID ) ) {', '  ID  undeclared '], 10378: ['int ID ID ( int ID ) ;', " expected  = , ',',  ; ,  asm  or  __attribute__  before  ID "], 10379: ['void ID ( int ID , int ID [ ] , int ID + CONST )', " expected  ; , ',' or  )  before  +  token"], 10380: ['        ID ( ID )', ' expected  ;  before  }  token'], 10381: ['    scanf ( STRING , & ID , & ID , &\\ ID ) ;', ' stray  \\  in program'], 10382: ['printf ( STRING , ID ) ;', '  ID  undeclared '], 10383: ['    scanf ( STRING , & ID )', ' expected  ;  before  printf '], 10384: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 10385: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10386: ['\tscanf ( STRING ID ) ;', ' expected  )  before  ID '], 10387: ['            printf ( STRING , ID + CONST )', ' expected  ;  before  }  token'], 10388: ['    scanf ( STRING , & ID ) ; printf ( STRING ID ) ;', ' expected  )  before  ID '], 10389: ['        ID [ ID ] = ID [ ID ] + ID [ ID ] + CONST - CHARST', ' expected  ;  before  }  token'], 10390: ['      scanf ( STRING . & ID [ CONST ] ) ;', ' expected identifier before  &  token'], 10391: ['\t    printf ( STRING , ID [ ( ID + ID ) % ID ] ) ;', '  ID  undeclared '], 10392: ['    int ID = ( ID % CONST != CONST ) ? ( ( ( ID / CONST ) + CONST ) * CONST + CONST ) : ( ID / CONST ) * CONST + CONST ) ;', ' expected  ,  or  ;  before  )  token'], 10393: ['    else ', '  else  without a previous  if '], 10394: ['    char ID [ ] ;', ' array size missing in  ID '], 10395: ['               printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 10396: ['        if ( ( ( ID [ ID ] >= CONST ) && ( ID [ ID ] <= CONST ) ) || ( ( ID [ ID ] >= CONST ) && ( ID [ ID ] <= CONST ) ) )', ' expected expression before  CHAR '], 10397: ['\tfor ( ID = CONST ; ID =\\ CONST ; ID ++ )', ' stray  \\  in program'], 10398: ['ID = ID * pow ( ID , CONST ) ;', '  ID  undeclared '], 10399: ['    ID = ( ID % CONST == CONST && ID % CONST != CONST ) + ( ID % CONST == CONST && ID % CONST != CONST ) + ( ID % CONST == CONST && ID % CONST != CONST ) + ( ID % CONST == CONST && ID % CONST != CONST ) + ( ID % CONST == CONST && ID % CONST != CONST )', ' expected  ;  before  printf '], 10400: ['            scanf ( STRING , & ( ID . ID + ID ) ) ;', ' lvalue required as unary  &  operand'], 10401: ['             int ID = CONST ;', ' redefinition of  ID '], 10402: ['\t    ID = gets ( ) ;', ' too few arguments to function  gets '], 10403: ['}', ' expected declaration or statement at end of input'], 10404: ['\t    ID = ID + CONST', ' expected  ;  before  }  token'], 10405: ['\tscanf ( STRING )', ' expected  ;  before  return '], 10406: ['     if  ( ID = ID && ID = ID && ID = ID ) {', ' lvalue required as left operand of assignment'], 10407: ['    }', ' expected identifier or  (  before  }  token'], 10408: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 10409: ['        for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 10410: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 10411: ['\telse', '  else  without a previous  if '], 10412: ['\t   for ( ID = ID + ; ID <= ID ; ID ++ )', ' expected expression before  ;  token'], 10413: ['}', ' expected  ; , identifier or  (  before  int '], 10414: ['    for ( ID = CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 10415: ['else', '  else  without a previous  if '], 10416: ['\t        ID = ID', ' expected  ;  before  printf '], 10417: ['\t   ID [ CONST ] = ID ( ID [ CONST ] , ID [ CONST ] ) ;', ' too few arguments to function  ID '], 10418: ['    else if ( ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) = CONST )', ' lvalue required as left operand of assignment'], 10419: ['    scanf ( STRING , & ID , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 10420: ['  else if ( int ( ID [ ID ] ) == CONST )', ' expected expression before  int '], 10421: ['    printf ( STRING , ID [ CONST ] . ID -> ID )', ' expected  ;  before  return '], 10422: ['                    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 10423: ['                ID [ ID ] [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 10424: [' for ( ID ; ID < CONST )', ' expected  ;  before  )  token'], 10425: ['}', ' expected declaration or statement at end of input'], 10426: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 10427: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10428: ['    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  printf '], 10429: [' if ( ID % ID = CONST ) {', ' lvalue required as left operand of assignment'], 10430: ['\t    ID = getchar', ' expected  ;  before  }  token'], 10431: ['\t       printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 10432: ['        if ( ID [ ID ] = int ( CHART ) ) {', ' expected expression before  int '], 10433: ['        ID = ( ID [ CONST ] + ID [ CONST ] - CONST )', ' expected  ;  before  if '], 10434: ['    scanf ( STRING , & ID , & ID )', ' expected  ;  before  for '], 10435: ['                if ( ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID ) && ( ( ID + ID ) > ID ) &&                                         )', ' expected expression before  )  token'], 10436: ['        ID ( ID >= CHARST && ID <= CHARST ) {', ' expected  ;  before  {  token'], 10437: ['        float ID , ID ; ID = CONST', ' expected  ;  before  ID '], 10438: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10439: ['    ID ( ID , ID ) ;', '  ID  undeclared '], 10440: ['\tfor ( ; ID =\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 10441: ['\tID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 10442: ['\t    ( ID = CONST ) && ( ID = CONST ) && ( ID = CONST || CONST ) && ( CONST <= ID <= CONST || ID = CONST ) && ( ID = ID )', ' lvalue required as left operand of assignment'], 10443: ['      ID ( & ID , & ID , & ID )  ', ' expected  ;  before  }  token'], 10444: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 10445: ['    ID = ID', ' expected  ;  before  }  token'], 10446: ['printf ( STRING , CONST * ID * ID )', ' expected  ;  before  return '], 10447: ['       || ID % CONST == CONST && ID % CONST == )', ' expected expression before  )  token'], 10448: ['                printf ( STRING , ID , ID , ID )', ' expected  ;  before  break '], 10449: ['\t    for ( ID = CONST * ID ; ID <= CONST * ID + CONST ) {', ' expected  ;  before  )  token'], 10450: ['       if ( ID [ ID ] == ID )', '  ID  undeclared '], 10451: ['    printf ( STRING , ID [ CONST ] [ CONST ] ) ;', '  ID  undeclared '], 10452: ['    ID = ( ID - ID ) * ( ID - ID ) + ( ID - ID ) ( ID - ID ) ;', ' called object is not a function or function pointer'], 10453: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 10454: ['    if ( ( ID * ID - ID * ID ) == CONST || ( ID * ID * ID - ID * ID * ID ) = CONST )', ' lvalue required as left operand of assignment'], 10455: ['\tfor ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 10456: ['    else if                     ', ' expected  (  before  {  token'], 10457: ['\t        printf ( STRING , ID ) ;', '  ID  undeclared '], 10458: ['    printf ( STRING )', ' expected  ;  before  }  token'], 10459: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 10460: ['  ID = ( ( ( CONST / CONST ) * ( ID - CONST ) ) + CONST ) ;', '  ID  undeclared '], 10461: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10462: ['\t        for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 10463: ['printf ( STRING ID ) ;', ' expected  )  before  ID '], 10464: ['        int * ID = * ID + ID - ID', ' expected  ,  or  ;  before  ID '], 10465: ['            float ID = CONST ;                                                          float ID = CONST ;                                                          float ID = CONST ;                                                          float ID = ID ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;                                                                                                                 printf ( STRING , ID ) ;', ' invalid operands to binary ^ '], 10466: ['\tscanf ( STRING , & ID , & ID , ) ;', ' expected expression before  )  token'], 10467: ['            printf ( STRING , ID , ) ;', ' expected expression before  )  token'], 10468: ['    return  ID ( ID + CONST , ID , ID )', ' expected  ;  before  }  token'], 10469: ['    ID ( ID , ID , ID , CONST )', ' expected  ;  before  return '], 10470: [' scanf ( STRING , & ID , & ID , & ID [ ] ) ;', ' expected expression before  ]  token'], 10471: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 10472: ['\t        printf ( STRING , ID [ ID - CONST ] ) ;', ' array subscript is not an integer'], 10473: ['\t    } ID', ' expected  ;  before  }  token'], 10474: ['\tprintf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 10475: ['    ID = ID ( ID ) ;', ' too few arguments to function  ID '], 10476: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10477: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 10478: ['        ID [ ID ] = ID ;', '  ID  undeclared '], 10479: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 10480: ['        printf ( STRING )', ' expected  ;  before  ID '], 10481: ['    { printf ( STRING , ) ; }', ' expected expression before  )  token'], 10482: ['        printf ( STRING )', ' expected  ;  before  else '], 10483: ['               int ID = ID ( int ID ( ID [ ID - CONST ] [ ID ] ) , int ID ( ID [ ID ] [ ID - CONST ] ) ) + ID [ ID ] [ ID ] ;', ' expected expression before  int '], 10484: ['    else if ( ( ID == CONST ) && ( ID == CONST ) ) printf ( STRING )', ' expected  ;  before  else '], 10485: ['            return ID ( ID + CONST , ID - CONST ) ;', '  ID  undeclared '], 10486: ['           printf ( STRING , ID )', ' expected  ;  before  return '], 10487: ['    { printf ( STRING ) }', ' expected  ;  before  }  token'], 10488: ['\tID ( ID , ID )', ' expected  ;  before  return '], 10489: ['printf ( STRING , ID )', ' expected  ;  before  return '], 10490: ['\t    printf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 10491: ['            if ( ID < ID [ ID ] )', '  ID  undeclared '], 10492: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 10493: ['                    ID = ID', ' expected  ;  before  }  token'], 10494: ['\t    for ( ID = ID ; ID < ID ; ID = ID + ID ) {', '  ID  undeclared '], 10495: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 10496: ['\tscanf ( STRING , & ID , & ID , & ID ) ;', '  ID  undeclared '], 10497: [' printf ( STRING )', ' expected  ;  before  return '], 10498: ['    scanf ( STRING , & ID , & ID )', ' expected  ;  before  }  token'], 10499: ['\t    if ( ID [ ID ] = CHART && ID < ID - ID ) {', '  ID  undeclared '], 10500: ['    ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 10501: ['} :', ' expected identifier or  (  before  :  token'], 10502: ['    ID ++ ;', '  ID  undeclared '], 10503: ['\tID = ++ ID = ID ++ ;', ' lvalue required as left operand of assignment'], 10504: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10505: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10506: ['            ID [ ID ] = ID + ID ;', '  ID  undeclared '], 10507: ['    else ( ID == ID )', ' expected  ;  before  {  token'], 10508: ['}', ' expected identifier or  (  before  }  token'], 10509: ['printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 10510: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 10511: ['              ID [ ID ] = ID [ ID ] ; ID ++', ' expected  ;  before  }  token'], 10512: ['\tprintf ( STRING , ID [ CONST ) ;', ' expected  ]  before  )  token'], 10513: ['\tif ( ID != CHARST || ID ! CHARST || ID != CHARST || CHARST ) ID = CONST ;', ' expected  )  before  !  token'], 10514: ['  else if ( ( ID + ID > ID ) && ( ID + ID = ID ) )', ' lvalue required as left operand of assignment'], 10515: ['\t        printf ( STRING , ID , ID [ ID ] )', ' expected  ;  before  printf '], 10516: ['\t    if ( ID [ ID ] != = CONST )', ' expected expression before  =  token'], 10517: ['    ID = ID ( ID [ ] , CONST ) ;                             ', ' expected expression before  ]  token'], 10518: [' scanf ( STRING , ( ID + ID ) . ID . ID , ( ID + ID ) -> ID . ID , ( ID + ID ) -> ID . ID , ( ID + ID ) -> ID . ID ) ;', " 'a + "], 10519: ['}', ' expected declaration or statement at end of input'], 10520: ['    for ( int ID = CONST ; ID < ID - CONST ; ID ++ )', '  ID  undeclared '], 10521: ['    scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 10522: ['           if ( ID [ ID ] [ ID ] != CONST ) { return ID - CONST ; printf ( STRING , ID [ ID ] [ ID ] ) }', ' expected  ;  before  }  token'], 10523: ['                ID ++', ' expected  ;  before  }  token'], 10524: ['\tprintf ( STRING , ID . ID , ID , ID , ID ) ;', ' request for member  ID  in something not a structure or union'], 10525: ['scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 10526: ['    ID ( ID ) ;', '  ID  undeclared '], 10527: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10528: ['\t           printf ( STRING , * ) ;', ' expected expression before  )  token'], 10529: ['\t{ printf ( STRING ) } ;', ' expected  ;  before  }  token'], 10530: ['    while ( ) {', ' expected expression before  )  token'], 10531: ['        else ', ' expected expression before  }  token'], 10532: ['\tID = ID ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;                  ', ' invalid operands to binary ^ '], 10533: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 10534: ['            if ( ID [ ID + CONST ] > ID [ ID ] . ID )', ' invalid operands to binary > '], 10535: ['\tprintf ( STRING , int ID ) ;', ' expected expression before  int '], 10536: ['    return ID ( ID ( ID ( ID , ID - CONST , ID ) , ID ( ID , ID , ID - CONST ) ) ) ;', ' too few arguments to function  ID '], 10537: ['        ID -= ID [ ID ] ;', '  ID  undeclared '], 10538: ['         ID [ ID ++ ] = ID ;', ' subscripted value is neither array nor pointer nor vector'], 10539: ['}', ' expected declaration or statement at end of input'], 10540: ['    ID ( ID , ID )', ' expected  ;  before  return '], 10541: ['    if ( ID - CONST > CONST )', ' expected expression before  }  token'], 10542: ['    if ( ID [ ID - CONST >= ID ] )', '  ID  undeclared '], 10543: ['        } printf ( STRING , ID )', ' expected  ;  before  printf '], 10544: ['    printf ( STRING )', ' expected  ;  before  return '], 10545: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 10546: ['\tprintf ( STRING , ID [ CONST ] , ID , ID , ID ) ;', '  ID  undeclared '], 10547: ['        ID = ID + ID [ ID ] [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 10548: ['    float ID = sqrt [ ( pow ( ( ID - ID ) , CONST ) ) + ( pow ( ( ID - ID ) , CONST ) ) ] ;                ', ' subscripted value is neither array nor pointer nor vector'], 10549: ['\t      else { printf ( STRING , ID [ ID ] ) , ID [ ID ] }', ' expected  ;  before  }  token'], 10550: ['       if ( ID + ID = CONST )', ' lvalue required as left operand of assignment'], 10551: ['printf ( STRING , ID )', ' expected  ;  before  return '], 10552: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 10553: ['              { ID ++', ' expected  ;  before  }  token'], 10554: ['    printf ( STRING , ID , ID , ID , ID ) ID ;                 ', ' expected  ;  before  ID '], 10555: ['\tscanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 10556: ['     ID = ID ( ID , ID , ID , ID ) ;                   ', '  ID  undeclared '], 10557: ['\twhile ( ) {', ' expected expression before  )  token'], 10558: [' ( ID <= ID - CONST ) {', ' expected  ;  before  {  token'], 10559: ['scanf ( STRING , & ID , & ID ) ;', '  ID  undeclared '], 10560: ['    if * ( ID + CONST ) == CONST ;', ' expected  (  before  *  token'], 10561: ['  printf ( STRING )', ' expected  ;  before  return '], 10562: ['    if', ' expected  (  before  {  token'], 10563: ['\tID ( ID , CHARST , CHARST )', ' expected  ;  before  return '], 10564: ['                printf ( STRING , ID . ID + ID )', ' expected  ;  before  }  token'], 10565: ['    }', ' expected declaration or statement at end of input'], 10566: ['    for ( int ID = CONST ; ID < ID - ID ; ID ++ )', '  ID  undeclared '], 10567: ['    ID == ( CONST ) * ID * ( ID * ID * ID )', ' expected  ;  before  printf '], 10568: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 10569: ['\tint ID = strlen ( ID [ ] ) ;', ' expected expression before  ]  token'], 10570: ['printf ( STRING )', ' expected  ;  before  return '], 10571: ['                  printf ( STRING , ) ;', ' expected expression before  )  token'], 10572: ['            ` return CONST ;', ' stray  `  in program'], 10573: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 10574: ['        else { printf ( STRING , ) ;', ' expected expression before  )  token'], 10575: ['\tprintf ( STRING )', ' expected  ;  before  return '], 10576: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 10577: ['    gets ( ID [ ID ] [ ] ) ;', ' expected expression before  ]  token'], 10578: ['    for ( ID = CONST ; ID [ ID ] != CHART )', ' expected  ;  before  )  token'], 10579: ['int ID ( int ID , )', ' expected declaration specifiers or  ...  before  )  token'], 10580: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 10581: ['            }', ' expected declaration or statement at end of input'], 10582: ['\twhile ( char ( ID ) != ID )', ' expected expression before  CHAR '], 10583: ['    scanf ( STRING , & ID [ ID ] , & [ ID ] ) ;', ' expected expression before  [  token'], 10584: ['    ID = CONST', ' expected  ;  before  while '], 10585: ['if ( ( ID <= ID ) && ( ID >= ) && ( ID >= ID ) ) { printf ( STRING , ID ) ; }', ' expected expression before  )  token'], 10586: ['  ID = CONST', ' expected  ;  before  for '], 10587: ['\tprintf ( STRING , ID . ID ) ;', ' request for member  ID  in something not a structure or union'], 10588: ['            if ( ID == ( ID - CONST ) )', '  ID  undeclared '], 10589: ['\t        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 10590: ['\t    { ID = ID + CONST', ' expected  ;  before  for '], 10591: ['        ID += ID * ID [ ID ] ; printf ( STRING , ID )', ' expected  ;  before  }  token'], 10592: ['        * ( ID + ID ) = ( int * ) ID ( ID * sizeof ( ID ) ) ;', '  ID  undeclared '], 10593: ['    ID ( ID , ID ) ;', '  ID  undeclared '], 10594: ['}', ' expected declaration or statement at end of input'], 10595: ['            ID [ ID ] = CONST + ID ( ID ( ID , ID ) , CONST )', ' expected  ;  before  }  token'], 10596: ['    ID = strlen ( ID , CONST ) ;', ' too many arguments to function  strlen '], 10597: ['    scanf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 10598: ['    ID ( int ID ) ;', ' expected expression before  int '], 10599: ['    ID ( ID , ID , ID )', ' expected  ;  before  return '], 10600: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 10601: ['    int ID = CONST', ' expected  ,  or  ;  before  while '], 10602: ['    ID -> ID -> ID ;', '  struct check  has no member named  ID '], 10603: ['        printf ( STRING , ID STRING ) ;', ' expected  )  before string constant'], 10604: ['printf ( STRING / ID ) ;', ' invalid operands to binary / '], 10605: ['for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 10606: ['    scanf ( STRING , & ID ID ID ID ) ;', ' expected  )  before  ID '], 10607: ['printf ( STRING , * ID )', ' expected  ;  before  return '], 10608: ['      for ( ID = CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 10609: ['    ID [ ID ] ;', '  ID  undeclared '], 10610: ['}', ' expected declaration or statement at end of input'], 10611: ['        printf ( STRING , ID )', ' expected  ;  before  ID '], 10612: ['    ID = ID ; ID = CONST ; ID = CONST ; ID = CONST ;', '  ID  undeclared '], 10613: ['float ID , ID , ;', ' expected identifier or  (  before  ;  token'], 10614: ['            printf ( STRING )', ' expected  ;  before  }  token'], 10615: ['    ID = - ID', ' expected  ;  before  printf '], 10616: ['        return ( ID ( ( ID - CONST , ID + ID [ ID ] , ID ) || ( ID - CONST , ID , ID + ID [ ID ] ) ) ) ;', ' too few arguments to function  ID '], 10617: ['\tprintf ( STRING )', ' expected  ;  before  for '], 10618: ['    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 10619: ['    for ( ID = ID + CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 10620: [' for ( ID = CONST ; ID < CONST ; ++ ) {', ' expected expression before  )  token'], 10621: ['printf ( STRING , ID [ CONST ] )    ', ' expected  ;  before  return '], 10622: ['\tfor ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 10623: ['            printf ( STRING ID ) ;', ' expected  )  before  ID '], 10624: ['\t    } for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 10625: ['    while ( ID = < CHARST && ID >= CHARST )                   ', ' expected expression before  <  token'], 10626: ['for ( ID = CONST , ID <= ID ; ID ++ ) {', ' expected  ;  before  )  token'], 10627: ['\tfor ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 10628: ['    ID ( ID , ID , CONST ) = ID ;', ' lvalue required as left operand of assignment'], 10629: ['\t      if ( ID == ID )', '  ID  undeclared '], 10630: ['}', ' expected declaration or statement at end of input'], 10631: ['        if ( ID = ID - CONST )', '  ID  undeclared '], 10632: ['}', ' expected declaration or statement at end of input'], 10633: ['scanf ( STRING & ID , & ID ) ;', ' invalid operands to binary & '], 10634: ['    ID ( )', ' expected  ;  before  printf '], 10635: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 10636: ['        ID . ID = & ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 10637: ['ID = ID * ID * ID ;', '  ID  undeclared '], 10638: ['    ID ++', ' expected  ;  before  }  token'], 10639: ['    int ID ;', ' expected identifier or  (  before  }  token'], 10640: ['            ID = ID + CONST', ' expected  ;  before  }  token'], 10641: ['}', ' expected declaration or statement at end of input'], 10642: ['       printf ( STRING , ID ) ;', '  ID  undeclared '], 10643: ['\t    for ( ID = CONST , ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 10644: ['     ID = CONST / CONST * ID + CONST ;', '  ID  undeclared '], 10645: ['float ID = ID ;', '  ID  undeclared '], 10646: ['}', ' expected declaration or statement at end of input'], 10647: ['        printf ( STRING , CONST * ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 10648: ['            if ( ID [ ID ] > ID [ ID + CONST ] )', ' expected expression before  int '], 10649: ['    if ( ID [ ID - CONST ] == ID )', '  ID  undeclared '], 10650: ['    static int ID = ( ID + ID ) / CONST ;', ' initializer element is not constant'], 10651: ['    else', '  else  without a previous  if '], 10652: ['    printf ( STRING )', ' expected  ;  before  return '], 10653: ['                ID ++', ' expected  ;  before  }  token'], 10654: ['}', ' expected declaration or statement at end of input'], 10655: ['\t    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 10656: ['\t        printf ( STRING , ID * ID ) ;', ' invalid operands to binary * '], 10657: ['\t    printf ( STRING , ID ) ;', '  ID  undeclared '], 10658: ['   ID = % CONST ;', ' expected expression before  %  token'], 10659: [' ID = ID - CONST ;', '  ID  undeclared '], 10660: ['  ID = ID ;', '  ID  undeclared '], 10661: ['\tdouble ID = CONST', ' expected  ,  or  ;  before  printf '], 10662: ['\tfloat ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 10663: ['  int ID , ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 10664: ['    ID = ( int ID * ) malloc ( ID * sizeof ( int ) ) ;', ' expected  )  before  ID '], 10665: ['                ID ++', ' expected  ;  before  printf '], 10666: ['    for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 10667: ['        scanf ( STRING , & ID [ ID ] . ID & ID [ ID ] . ID & ID [ ID ] . ID ) ;', ' invalid operands to binary & '], 10668: ['\t    ID = CONST', ' expected  ;  before  }  token'], 10669: ['          if ID ( = CHARST ) {', ' expected  (  before  ID '], 10670: ['\t            printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 10671: [' ID = ( CONST * ID ) / CONST ;', '  ID  undeclared '], 10672: ['                    ID = ID', ' expected  ;  before  break '], 10673: ['\t           ID ++', ' expected  ;  before  }  token'], 10674: ['}', ' expected  ; , identifier or  (  before  int '], 10675: ['}', ' expected declaration or statement at end of input'], 10676: ['\tscanf ( STRING , & ID ID ID ID ) ;', ' expected  )  before  ID '], 10677: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 10678: ['    return CONST', ' expected  ;  before  while '], 10679: ['    int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 10680: ['}', ' expected declaration or statement at end of input'], 10681: ['    printf ( STRING )', ' expected  ;  before  return '], 10682: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 10683: ['    printf ( STRING , float ID ) ;', ' expected expression before  float '], 10684: ['         break', ' expected  ;  before  }  token'], 10685: ['            scanf ( STRING )', ' expected  ;  before  }  token'], 10686: ['\tif ( ID <= CONST ) { break ; }', ' break statement not within loop or switch'], 10687: ['    printf ( STRING , CONST pow ( CONST ) ) ;', ' invalid suffix "pow" on integer constant'], 10688: ['    ID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 10689: ['\t    ID = ID / CONST', ' expected  ;  before  printf '], 10690: ['                ID = ID [ ID ] . ID ;', '  ID  undeclared '], 10691: ['                    ID = ID + CONST ;', '  ID  undeclared '], 10692: ['        ID = ID * ID :', ' expected  ;  before  :  token'], 10693: ['const double ID = CONST', ' expected  ,  or  ;  before  double '], 10694: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 10695: ['    printf ( ID * ID - CONST ID = STRING , ID ) ;', ' invalid suffix "ac" on integer constant'], 10696: ['\t{ printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 10697: ['    printf ( STRING STRING , ID STRING ) ;', ' expected  )  before string constant'], 10698: ['   scanf ( STRING , & ID ) ;', '  ID  undeclared '], 10699: ['            if ( ID [ ID ] == ID [ ID ] && )', ' expected expression before  )  token'], 10700: ['        if ( ID [ ID ] [ ID ] == - ID [ ID ] [ ID ] )', ' expected expression before  int '], 10701: ['\tprintf ( STRING , ID )', ' expected  ;  before  printf '], 10702: [' ID = ( int * ) malloc ( ID * sizeof ( int ) )', ' expected  ;  before  for '], 10703: ['    printf ( STRING , STRING , ID )    ', ' expected  ;  before  return '], 10704: ['\tfor ( ID = CONST , ID = ID [ CONST ] , ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 10705: ['if (\tID ( & ( ID + ID * ID ) , ID ) == CONST ) {', ' lvalue required as unary  &  operand'], 10706: ['} } }', ' expected identifier or  (  before  }  token'], 10707: ['    if ( ID == ID ) printf ( STRING )', ' expected  ;  before  free '], 10708: ['}', ' expected declaration or statement at end of input'], 10709: ['const double ID = CONST', ' expected  ,  or  ;  before  double '], 10710: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 10711: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 10712: ['    int ID = CONST', ' expected  ,  or  ;  before  while '], 10713: ['    if ( ID [ ] == - CONST )', ' expected expression before  ]  token'], 10714: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 10715: ['    int ID = CONST ; ID = CONST ;', '  ID  undeclared '], 10716: ['else ( ID < CONST )', ' expected  ;  before  {  token'], 10717: ['    printf ( STRING )', ' expected  ;  before  }  token'], 10718: ['    scanf ( STRING , ID ) ; printf ( STRING , ID ( ID ) ) ;', '  ID  undeclared '], 10719: ['        for ( ID = CONST ; ID = ID + CONST ; ID ++ )', ' expected expression before  }  token'], 10720: ['            ID = CONST ; return CONST ;', '  ID  undeclared '], 10721: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 10722: ['\tif ( ID ( ID [ ] , ID [ ] , ID , ID ) == ID )', ' expected expression before  ]  token'], 10723: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10724: ['\t    ID [ ID ] = ID [ ID - ID ] ;', '  ID  undeclared '], 10725: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 10726: ['        ID ( ID )', ' expected  ;  before  if '], 10727: ['\tif ( ID == CONST ) { printf ( STRING ) }', ' expected  ;  before  }  token'], 10728: ['printf ( STRING , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 10729: ['    int ID = ( ID . ID - ID . ID ) * ( ID . ID - ID . ID ) + ( ID . ID - ID . ID ) * ( ID . ID - ID . ID ) - ( ( ID . ID + ID . ID ) ) * ( ID + ID . ID ) ;', ' invalid operands to binary + '], 10730: ['}', ' expected declaration or statement at end of input'], 10731: ['     ID = ID', ' expected  ;  before  printf '], 10732: ['    int ID = ID', ' expected  ,  or  ;  before  while '], 10733: ['\t    while ( ID [ ID ] [ ID ] == ID [ ID ] )', ' subscripted value is neither array nor pointer nor vector'], 10734: ['\tif ( ( ID / ID ) = ( ID / ID ) ) {', ' lvalue required as left operand of assignment'], 10735: ['\tID [ CONST ] = ID ;', '  ID  undeclared '], 10736: ['printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 10737: ['\telse', '  else  without a previous  if '], 10738: ['float ID = ( CONST / CONST ) CONST * ID * ID ;', ' expected  ,  or  ;  before numeric constant'], 10739: ['\t    for ( ( ID = ( CHART ID ) ) ; ( ID <= ( ID - CONST ) ) ; ID -- ) {', ' expected  )  before  ID '], 10740: ['        if ( ID == CONST ) {', '  ID  undeclared '], 10741: ['    if ( ID ID ID ID CONST )', ' expected  )  before  ID '], 10742: ['    int ID = CONST , ID , ID , ID , ID = CONST , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 10743: ['            printf ( STRING , ( ID [ ID ] . ID -> ID ) + ( ID . ID -> ID ) - ID ) ;', '  (struct list_entry *)&list_entries  is a pointer; did you mean to use  -> ?'], 10744: ['\t    printf ( STRING )', ' expected  ;  before  return '], 10745: ['        scanf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 10746: ['    printf ( STRING , ID [ ID + ID ] )', ' expected  ;  before  }  token'], 10747: ['    printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  return '], 10748: ['        scanf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 10749: ['         return ( ID ( ID - CONST , ID ) + ID ( ID - CONST , ID - CONST ) ID ++ ) ;', ' expected  )  before  ID '], 10750: ['}', ' expected declaration or statement at end of input'], 10751: ['\tID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 10752: ['void ID ( ID * ID ) { ID * ID = ID ; while ( ID != ID ) { printf ( STRING , ID -> ID ) ; ID = ID -> ID ; } printf ( STRING ) ; }', '  ID  {aka  struct Charac } has no member named  ID '], 10753: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 10754: ['       printf ( STRING , ID * ID ) ;', ' invalid operands to binary * '], 10755: ['            if ID [ ID ] == ID [ ID ] ;', ' expected  (  before  ID '], 10756: ['\tID = CONST * ID -> ID ;', ' invalid operands to binary * '], 10757: ['    printf ( STRING , ID * ID * ID ) ;', '  ID  undeclared '], 10758: ['\twhile ( )', ' expected expression before  )  token'], 10759: ['\t  { ID = ID - ID ', ' expected  ;  before  for '], 10760: ['    printf ( STRING )', ' expected  ;  before  return '], 10761: ['   printf ( STRING , int ( ID * CONST ) ) ;', ' expected expression before  int '], 10762: ['}', ' expected declaration or statement at end of input'], 10763: ['    ID ( ID , * ID , CONST , * ID ) ;', ' too many arguments to function  ID '], 10764: ['\t { printf ( STRING , ID [ ID - CONST ] ) }', ' expected  ;  before  }  token'], 10765: ['    if ( ID >= ID - CONST )', '  ID  undeclared '], 10766: ['    return if ( ID ) ;', ' expected expression before  if '], 10767: ['    for ( ID = CONST ; ID < ID ; ID ++ ) { ID = CONST ;', '  ID  undeclared '], 10768: ['        else if ( ID = ID && ID = ID && ID = ID )', ' lvalue required as left operand of assignment'], 10769: ['scanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 10770: ['    if ( ( ID / ID ) == ( ID / ID ) ) && ( ( ID / ID ) != ( ID * ID ) / ( ID * ID ) )', ' expected identifier before  (  token'], 10771: ['{ scanf ( STRING & ID [ ID ] ) ; }', ' invalid operands to binary & '], 10772: ['    printf ( STRING CONST ) ;', ' expected  )  before numeric constant'], 10773: ['        printf ( STRING )', ' expected  ;  before  }  token'], 10774: ['    ID ( ID == CONST ) {', ' expected  ;  before  {  token'], 10775: ['\t        if ( ID + ID < ( ID + CONST ) / CONST || ID + ID > ( CONST ID + CONST ) / CONST || ID - ID > ( ID + CONST ) / CONST || ID - ID > ( ID + CONST ) / CONST )', ' invalid suffix "n" on integer constant'], 10776: ['    else ID ( ID ) ;', '  else  without a previous  if '], 10777: ['    if ( ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 10778: ['        printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 10779: ['    printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 10780: ['            if ( ID == ID = CONST ) {', ' lvalue required as left operand of assignment'], 10781: ['        else if ( ID == ID ) {', '  else  without a previous  if '], 10782: ['} }', ' expected identifier or  (  before  }  token'], 10783: ['            ID [ ID ] [ ID ] = ID ;', '  ID  undeclared '], 10784: ['    for ( ID = ID , ID ( ID ) == CONST ; ID ++ )', ' expected  ;  before  )  token'], 10785: ['    int ID = ID ;', ' redeclaration of  ID  with no linkage'], 10786: ['\tfor ( ID = CONST , ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 10787: ['\t    scanf ( STRING )', ' expected  ;  before  for '], 10788: ['    printf ( STRING , ID )', ' expected  ;  before  printf '], 10789: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 10790: ['int ID', ' expected  ;  before  struct '], 10791: ['int ID , ID [ ] , ID [ ] , ;', ' expected identifier or  (  before  ;  token'], 10792: ['        if ( ID % CONST == CONST && ID % CONST == CONST ) )', ' expected statement before  )  token'], 10793: ['ID = ( CONST ) ( ID * ID ) ;', ' called object is not a function or function pointer'], 10794: ['                ID [ ID ] == ID ;', '  ID  undeclared '], 10795: ['    printf ( putchar ( ) ) ;', ' too few arguments to function  putchar '], 10796: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 10797: ['    if ( ID == ID || ID = ID - CONST )', ' lvalue required as left operand of assignment'], 10798: ['\t    ID = ID + ( ID ) * ( ID + CONST ) / CONST', ' expected  ;  before  }  token'], 10799: ['}', ' expected declaration or statement at end of input'], 10800: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10801: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 10802: ['    float ID , ID , ;', ' expected identifier or  (  before  ;  token'], 10803: ['if ( ID [ ID ] = > ID [ ID ] ) {', ' expected expression before  >  token'], 10804: ['    { ID [ ID ] = ID [ ID + ID ] ; }', '  ID  undeclared '], 10805: ['}', ' expected declaration or statement at end of input'], 10806: ['\tfor ( ID = CONST ; ID <= ID , ID = ID + CONST )', ' expected  ;  before  )  token'], 10807: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 10808: ['    ID ( ID , ID [ ] ) ;   ', ' expected expression before  ]  token'], 10809: ['            while ( ID [ ID ] [ ID ] != CONST )', '  ID  undeclared '], 10810: ['\tif ( ID == ( ID ( ID - CONST ) / CONST ) )', ' called object  ID  is not a function or function pointer'], 10811: [' scanf ( STRING , ID )', ' expected  ;  before  ID '], 10812: ['    if ( ID == ID && ID == ID && ID == ID ) break ;', ' break statement not within loop or switch'], 10813: ['        ID = ID + ID', ' expected  ;  before  }  token'], 10814: ['        ID [ ID ] = ID [ ID / CONST ] ;', '  ID  undeclared '], 10815: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 10816: ['\tID = ID + ID [ ID ]', ' expected  ;  before  printf '], 10817: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 10818: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 10819: ['\tint ID [ ID ] ;', ' redeclaration of  ID  with no linkage'], 10820: ['        for ( ID = CONST ; ID <= ID / CONST ) {', ' expected  ;  before  )  token'], 10821: ['\t            if ( ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) && ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) && ( ID [ ID ] >= CONST && ID [ ID ] <= CONST ) )', '  ID  undeclared '], 10822: ['\telse if ', ' expected  (  before  {  token'], 10823: ['float ID = CONST / CONST fabs ( ID * ID ) ;', ' expected  ,  or  ;  before  fabs '], 10824: ['            scanf ( STRING & ID [ ID ] [ ID ] ) ;', ' invalid operands to binary & '], 10825: ['    printf ( STRING , ID [ CONST ] . ID , ID [ CONST ] . ID , ID [ CONST ] . ID )', ' expected  ;  before  return '], 10826: ['\tchar ID [ ID ] ;', ' redeclaration of  ID  with no linkage'], 10827: ['    getchar ( ID [ ID ] ) ;', ' too many arguments to function  getchar '], 10828: [' if ( ID = > CONST ) {', ' expected expression before  >  token'], 10829: ['    int ID [ ID ] ;', '  ID  redeclared as different kind of symbol'], 10830: ['\tprintf ( STRING CHARST ) ;', ' expected  )  before  \\x20 '], 10831: ['\tprintf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 10832: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 10833: ['    if ( ID == )', ' expected expression before  )  token'], 10834: ['\treturn CONST ; ', ' expected declaration or statement at end of input'], 10835: ['\t    ID = struct ID * ID ( ID , ID ) ;', ' expected expression before  struct '], 10836: ['    ID = ID / CONST ;', '  ID  undeclared '], 10837: ['                if ( ID >= ID && ID >= ID && ID != ID && ID != ID && ID = ! ID && ID + ID > ID ) {', ' lvalue required as left operand of assignment'], 10838: ['    char ID [ CONST ] , ID [ CONST ] , ID [ ] ;', ' array size missing in  ID '], 10839: ['     { ID [ ID ] = CONST', ' expected  ;  before  if '], 10840: ['        if ( ID == ID || ID = ID - CONST ) { return CONST ; }                                                                                                                    ', ' lvalue required as left operand of assignment'], 10841: ['# include < stdio.h .', ' missing terminating > character'], 10842: ['    float ID = CONST * ID * ID * ID * ID ;', '  ID  undeclared '], 10843: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 10844: ['        printf ( STRING , ) ;', ' expected expression before  )  token'], 10845: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 10846: ['    int ID [ CONST ] ; ID [ CONST ] ;\t', '  ID  undeclared '], 10847: ['    for ( ID = CONST ; ID <= CONST , ID ++ ) {', ' expected  ;  before  )  token'], 10848: ['        ID ++', ' expected  ;  before  }  token'], 10849: ['    char CHARST ;', ' expected identifier or  (  before  c '], 10850: ['printf ( STRING )', ' expected  ;  before  return '], 10851: ['\tID += ID ++ ++ + ID ;', ' lvalue required as increment operand'], 10852: ['        printf ( STRING , ID . ID [ ID ] . ID , ID . ID [ ID ] . ID ) ;', '  ID  undeclared '], 10853: ['\tID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 10854: ['\tscanf ( STRING , ID )', ' expected  ;  before  scanf '], 10855: ['                printf ( STRING )', ' expected  ;  before  }  token'], 10856: ['    if ( * ID [ ID ] == ID ) {', ' invalid type argument of unary  *  '], 10857: ['            if ( ( ID [ CONST * ID + CONST ] ) - ( ID [ CONST * ID + CONST ] ) == CONST ) )', ' expected statement before  )  token'], 10858: ['   }', ' expected identifier or  (  before  }  token'], 10859: ['            continue', ' expected  ;  before  }  token'], 10860: ['\tfor ( ID = CONST ; ID = < ID ; ID ++ ) {', ' expected expression before  <  token'], 10861: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10862: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 10863: ['\t} printf ( STRING , ID [ CONST ] , ID [ CONST ] , ID [ CONST ] ) ;', '  ID  undeclared '], 10864: ['   scanf ( STRING , & ID % ID ) ;', '  ID  undeclared '], 10865: ['        ID ++', ' expected  ;  before  }  token'], 10866: ['if ( ID . ID > . ID . ID ) {', ' expected expression before  .  token'], 10867: ['    for ( ID = CONST ; ID < ID + CONST ID ; ID ++ ) {', ' invalid suffix "x" on integer constant'], 10868: ['    int ID , ID ; int ID [ ] [ CONST ] ;', ' array size missing in  ID '], 10869: ['    else ( ID * ID != ID * ID + ID * ID ) {', ' expected  ;  before  {  token'], 10870: ['ID ( - ID )', ' expected  ;  before  }  token'], 10871: ['    ID = ID + CONST', ' expected  ;  before  }  token'], 10872: ['\tif ( ID / ID != ID / ID )', '  ID  undeclared '], 10873: ['{ for ( ID = CONST ; ID <= CONST ; ID = ++ ) ;', ' expected expression before  )  token'], 10874: ['\t ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 10875: ['    scanf ( STRING , & ID , & ID , & ID & ID ) ;', ' invalid operands to binary & '], 10876: ['    if ( [ ID + ID - CONST ] [ ID - CONST ] == CHARST && ID [ ID - CONST ] [ ID - CONST ] == CHARST )                                                             ', ' expected expression before  [  token'], 10877: ['\t    for ( ID = ID + CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 10878: ['int main ( ) { printf ( STRING , CONST * CONST * CONST ) ', ' expected  ;  before  return '], 10879: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 10880: ['        puts ( ID ) ;', '  ID  undeclared '], 10881: ['    if ( sqrt ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) = ID )', ' lvalue required as left operand of assignment'], 10882: ['    while ( ID < ID ) {', '  ID  undeclared '], 10883: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 10884: ['            if ( ( ID % ID ) != = CONST ) { ', ' expected expression before  =  token'], 10885: ['    } printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 10886: ['int main ( ) { int ID , ;', ' expected identifier or  (  before  ;  token'], 10887: ['\tprintf ( STRING , ID [ ] , ID [ ] , ID [ ] ) ;', ' expected expression before  ]  token'], 10888: ['    ID ( ID + CONST , ID - CONST ) ;', ' too few arguments to function  ID '], 10889: ['      if ( ID == ID / CONST )', '  ID  undeclared '], 10890: ['        for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 10891: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 10892: ['    printf ( STRING , ID . ID ) ;', '  ID  undeclared '], 10893: ['                ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 10894: ['\tif ( CHARST <= ID [ ID ] <= CHARST && CHARST <= ID [ ID + CONST ] <= CHARST && ID [ ID + CONST ] = ID )', ' lvalue required as left operand of assignment'], 10895: ['    if ( ID == ID ( ID || ID || ID || ID ) )', '  ID  undeclared '], 10896: ['\t                printf ( STRING )', ' expected  ;  before  ID '], 10897: ['printf ( STRING ID ID % STRING ) ;', ' expected  )  before  ID '], 10898: ['\t           if ( ID <= ID && ID <= ID )', '  ID  undeclared '], 10899: ['        ID [ ID ] = char ( ID [ ID ] ) ;', ' expected expression before  CHAR '], 10900: ['\tscanf ( STRING , ID , & ID , & , ID , & ID ) ;', ' expected expression before  ,  token'], 10901: ['  printf ( STRING )', ' expected  ;  before  return '], 10902: ['\tint ID ;', ' redeclaration of  ID  with no linkage'], 10903: ['        scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 10904: ['\tID = getchar ( )', ' expected  ;  before  for '], 10905: ['}', ' expected declaration or statement at end of input'], 10906: ['    else ID ( ID + CONST , ID , ID ) ;', '  ID  undeclared '], 10907: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 10908: ['    printf (\\ ID ) ;', ' stray  \\  in program'], 10909: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 10910: ['\tfor ( ID = CONST , ID < ID ( ID ) ; ID ++ )', ' expected  ;  before  )  token'], 10911: ['\telse printf ( STRING )', ' expected  ;  before  return '], 10912: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 10913: ['\tprintf ( STRING )', ' expected  ;  before  return '], 10914: ['}', ' expected declaration or statement at end of input'], 10915: ['        if ( ( ID -> ID ) [ ID ] ) < ( ( ID -> ID ) [ ID ] )', ' expected expression before  <  token'], 10916: ['\tprintf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 10917: ['    printf ( STRING )', ' expected  ;  before  return '], 10918: ['    scanf ( STRING , & ID , & ID , & ID , & ID ) ;', '  ID  undeclared '], 10919: ['        ID = ( ( ID * ID * ID * ID ) / CONST ) - ( ( ID * ID * ID * ID ) / CONST )', ' expected  ;  before  }  token'], 10920: ['else if ( ID = > CONST && ID <= CONST ) {', ' expected expression before  >  token'], 10921: ['printf ( STRING )', ' expected  ;  before  return '], 10922: ['        for ( int ID = ID ; ID = < ID + ID - ID ; ID ++ )', ' expected expression before  <  token'], 10923: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 10924: ['\tprintf ( STRING )', ' expected  ;  before  return '], 10925: ['\tID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 10926: ['            if ( ID [ ID + ID ] == ID [ ID ] )', '  ID  undeclared '], 10927: [' if ( ID = ID && ID = ID ) printf ( STRING ) ;', ' lvalue required as left operand of assignment'], 10928: ['\t ID = malloc ( sizeof ( ID ) * CONST ) ;                                         ', ' assignment to expression with array type'], 10929: ['    if ( ID < ( ID + ID - ID * ID ) / ID ) {', '  ID  undeclared '], 10930: ['\t    ID ++', ' expected  ;  before  if '], 10931: ['}', ' expected declaration or statement at end of input'], 10932: ['            ID ++', ' expected  ;  before  if '], 10933: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 10934: ['   printf ( STRING , ID ( ID , ID , ID , CONST , CONST ) ? STRING : STRING , ID ( ID , ID , ID , CONST , CONST , ID , CONST ) ? STRING : STRING ) ;', ' too many arguments to function  ID '], 10935: ['    int ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 10936: ['        printf ( STRING )', ' expected  ;  before  }  token'], 10937: ['        printf ( STRING , ID [ ID ] . ID , ID [ ID ] . ID , ID [ ID ] . ID )', ' expected  ;  before  }  token'], 10938: ['\tprintf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 10939: ['    ID = ( float ) ( sqrt ( CONST ) / CONST ) ID * ID ;', ' expected  ;  before  ID '], 10940: ['ID ID ( int ) ;', ' unknown type name  ID '], 10941: ['    for ( ; ID <= ID ; ID ++ )', '  ID  undeclared '], 10942: ['return CONST', ' expected  ;  before  }  token'], 10943: ['   scanf ( STRING , & ID )', ' expected  ;  before  for '], 10944: ['                printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 10945: ['\tint ID = ID', ' expected  ,  or  ;  before  printf '], 10946: ['        ID ( ID + CONST ) ;', ' too few arguments to function  ID '], 10947: ['    for ( ID = ID - CONST ; ID >= CONST ; ID -- ) {', '  ID  undeclared '], 10948: ['       ID [ * ID ] = ( char * ) malloc ( sizeof ( char ) ) ;', ' invalid type argument of unary  *  '], 10949: ['            printf ( STRING )', ' expected  ;  before  }  token'], 10950: ['    ID = ( int * ) malloc ( ( ID . ID + ) * sizeof ( int ) ) ;', ' expected expression before  )  token'], 10951: ['\tscanf ( STRING , & ID , & ID , & ID )', ' expected  ;  before  for '], 10952: ['    for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 10953: ['        ID ( ID , ID )', ' expected  ;  before  }  token'], 10954: ['    printf ( STRING , ID ( ID - CONST , ID - CONST ) ) ;', ' invalid use of void expression'], 10955: ['    ID = ID ( ID , ID ) ;', ' assignment to expression with array type'], 10956: ['    }', ' expected expression before  ID  token'], 10957: ['    if ( CHARST <= ID <= CHARST ) && ( CHARST <= ID <= CHARST || CHARST <= ID <= CHARST || CHARST <= CHARST ) {', ' expected identifier before  (  token'], 10958: ['\tif ( ID * ID = ID * ID ) ', ' lvalue required as left operand of assignment'], 10959: ['for ( ID = CONST ; ID < CONST ; ID ++ )', '  ID  undeclared '], 10960: ['\tprintf ( ID + ID + ID + ID ) ;', ' incompatible type for argument 1 of  printf '], 10961: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 10962: ['            ID = ID + CONST', ' expected  ;  before  }  token'], 10963: ['    printf ( STRING , ID ( ID , CONST ) )', ' expected  ;  before  return '], 10964: ['printf ( STRING , ID ) ,', ' expected expression before  return '], 10965: ['\t    {   printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 10966: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 10967: ['\tprintf', ' expected  ;  before  return '], 10968: ['       ID :', ' label at end of compound statement'], 10969: ['\telse if ( ID == CONST )', '  else  without a previous  if '], 10970: ['       printf ( STRING , ID [ ID ] )    ', ' expected  ;  before  return '], 10971: ['    scanf ( STRING & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 10972: ['}', ' expected declaration or statement at end of input'], 10973: ['  else if ( ID != CONST && ID % ID = CONST )', ' lvalue required as left operand of assignment'], 10974: ['if ( ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 10975: [' ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 10976: ['        ID ++ ;', '  ID  undeclared '], 10977: ['\tID ( ID , - CONST , CONST ) ;', ' too many arguments to function  ID '], 10978: ['            ID = ID ;', ' assignment to expression with array type'], 10979: ['                printf ( STRING , ID ) ;', '  ID  undeclared '], 10980: ['ID = ID [ ID ] [ ID ] ;', '  ID  undeclared '], 10981: ['     ID [ ID - ID - CONST ] = ID ;', '  ID  undeclared '], 10982: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 10983: ['    int ID = CONST + ( ( ID + ID ) / CONST ) ;', '  ID  undeclared '], 10984: ['    ID ( ID [ ID ] [ ID ] , ID [ ID ] [ ID ] , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 10985: ['      ID -> ID = ID', ' expected  ;  before  while '], 10986: ['            printf ( STRING )', ' expected  ;  before  }  token'], 10987: ['\t    getchar ( ID ) ;', ' too many arguments to function  getchar '], 10988: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 10989: ['    ID = getchar ( )', ' expected  ;  before  while '], 10990: ['\tscanf ( STRING , ID` ) ;', ' stray  `  in program'], 10991: ['    scanf ( STRING ID ) ;', ' expected  )  before  ID '], 10992: ['        ID = ID [ ID ]', ' expected  ;  before  ID '], 10993: ['      scanf ( STRING , & CHAR) ;    ', ' lvalue required as unary  &  operand'], 10994: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 10995: ['    float ID = CONST , ID = CONST , ID = CONST , ID = CONST , ID = CONST , ID = CONST , ;  ', ' expected identifier or  (  before  ;  token'], 10996: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 10997: ['         {  ID = CONST ;', '  ID  undeclared '], 10998: ['                printf ( STRING , * ( ID . ID + ID ) )', ' expected  ;  before  }  token'], 10999: ['    scanf ( STRING , & ID , & ID )                                 ', ' expected  ;  before  ID '], 11000: ['}', ' expected  ; , identifier or  (  before  int '], 11001: ['    ID = ID * ID ;', ' invalid operands to binary * '], 11002: ['float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 11003: ['\t    if ( ID [ ID ] == CHARST || ID [ ID ] == ) {', ' expected expression before  )  token'], 11004: ['}', ' expected declaration or statement at end of input'], 11005: [' if ( ID % CONST == CONST )', '  ID  undeclared '], 11006: ['    printf ( STRING , ID ( ID ) ) ;', ' too few arguments to function  ID '], 11007: ['\t            break ;', ' break statement not within loop or switch'], 11008: ['\t    if ( ID [ ID ] != ID [ ID ] )', '  ID  undeclared '], 11009: ['printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 11010: ['        ID [ ID ] = ID [ ID ] . ID ;', '  struct node  has no member named  ID '], 11011: ['\t    { printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 11012: ['\tID = ID ( CONST + ID * ID / CONST ) ;', ' called object  ID  is not a function or function pointer'], 11013: ['        * ( ID + ID ) = * ( ID + ID ) ;', '  ID  undeclared '], 11014: ['            if ( ID == ID ) && ( ID [ ID ] [ ID ] != CONST ) ;', ' expected identifier before  (  token'], 11015: ['        printf ( STRING )', ' expected  ;  before  }  token'], 11016: ['\t          printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 11017: ['}', ' expected declaration or statement at end of input'], 11018: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 11019: ['\tID = strlen ( ID [ ] ) ;', ' expected expression before  ]  token'], 11020: ['\t            ID [ ID ] = ID', ' expected  ;  before  }  token'], 11021: ['} ID = CONST', ' expected identifier or  (  before numeric constant'], 11022: ['           printf ( STRING , ID , ID [ ID ] , ID [ ID ] , ID [ ID ] )', ' expected  ;  before  }  token'], 11023: ['            if ( ID [ ID ] . ID > [ ID ] . ID ) {', ' expected expression before  [  token'], 11024: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 11025: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 11026: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 11027: ['         ID [ ID ] = ID', ' expected  ;  before  }  token'], 11028: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 11029: ['\tprintf ( STRING , ID ID ID ID ) ;', ' expected  )  before  ID '], 11030: ['\tfor ( ID = CONST ; ID < CONST , ID ++ ) {', ' expected  ;  before  )  token'], 11031: ['\tdouble float ID , ID ;', ' two or more data types in declaration specifiers'], 11032: ['    if ( ID != ID ) {', '  ID  undeclared '], 11033: ['    for ( ID = CONST ; ID < ID - ; ID ++ ) {', ' expected expression before  ;  token'], 11034: ['\tprintf ( STRING ) }', ' expected  ;  before  }  token'], 11035: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 11036: ['    else { printf ( STRING , ID ID ) ; }', ' expected  )  before  ID '], 11037: ['        else printf ( STRING )', ' expected  ;  before  }  token'], 11038: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 11039: ['     for ( ID = CONST ; ID <= CONST ID ; ID ++ )', ' invalid suffix "n" on integer constant'], 11040: ['    for ( ID = CONST ; ( ID < ID ) && ( ID -> ID != ID ) ; ++ ID )', '  ID  undeclared '], 11041: ['{   if ( ID [ ID ] != ID && ID [ ID + CONST ] != ID && ID [ ID + CONST ] != ID ) || ( ID [ ID ] != ID && ID [ ID ] != ID && ID [ ID ] != ID )', ' expected expression before  ||  token'], 11042: ['}', ' expected  ; , identifier or  (  before  int '], 11043: ['    printf ( STRING             , ID , ID , ID , ID ) ;', '  ID  undeclared '], 11044: ['    ID . ID = ( int * ) malloc ( ID * sizeof ( int ) ) ;', '  ID  undeclared '], 11045: ['    for ( ID = CONST ; ID = < ( ID + CONST ) / CONST ; ID ++ )', ' expected expression before  <  token'], 11046: ['\tprintf ( STRING , ID ID ID ) ;', ' expected  )  before  ID '], 11047: ['    free ( ID . ID ) ;', '  ID  undeclared '], 11048: ['    scanf ( STRING , & ID & ID ) ;                     ', ' invalid operands to binary & '], 11049: ['\t                ID [ ID ] == ID [ ID ]   ', ' expected  ;  before  }  token'], 11050: ['\t    ID = CONST ID + CONST ;', ' invalid suffix "num" on integer constant'], 11051: ['\t        printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 11052: ['    printf ( STRING ) :', ' expected  ;  before  :  token'], 11053: ['ID == ID = ID + CONST + CONST ;', ' lvalue required as left operand of assignment'], 11054: ['    if ( * ( ID + ID ) == CHART ) { * ( ID + ID ) = CHARST } ;', ' expected  ;  before  }  token'], 11055: ['}', ' expected declaration or statement at end of input'], 11056: ['printf ( STRING , ID )', ' expected  ;  before  return '], 11057: [' printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 11058: ['     if ( ( ID * ID + ID * ID ) > ID * ID ) { printf ( STRING ) }', ' expected  ;  before  }  token'], 11059: ['    if ( ( ID <= CHARST && ID >= CHARST ) || ( ID <= CHARST && ID = > CHARST ) ) {', ' expected expression before  >  token'], 11060: ['\t        ID = ID + ID [ ID ] ;', '  ID  undeclared '], 11061: ['\t    printf ( STRING , ) ;', ' expected expression before  )  token'], 11062: ['printf ( STRING )', ' expected  ;  before  return '], 11063: ['\telse if ( ID >= CHARST && ID <= CHARST ) ID = char ID + CONST ;', ' expected expression before  CHAR '], 11064: ['    { for ( ID = CONST ; ID < ID , ID = ID + CONST )', ' expected  ;  before  )  token'], 11065: [' ( ID >= ID ) && ( ID >= ID )', ' expected  ;  before  scanf '], 11066: ['            if ( CHARST <= ID [ ID - CONST ] && <= CHARST )                                                                                                                         ', ' expected expression before  <=  token'], 11067: ['        if ( ID * ID + ID * ID == ID * ID || ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 11068: ['        printf ( STRING , ID , ID , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 11069: ['        break ;', ' break statement not within loop or switch'], 11070: ['        scanf ( STRING , ID + ID ) ;', '  ID  undeclared '], 11071: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 11072: ['\tif ( ID == ID ) printf ( STRING ) ;', '  ID  undeclared '], 11073: ['        ID = ID + ( ID % CONST ) * ( ID % CONST ) * ( ID % CONST )', ' expected  ;  before  ID '], 11074: ['\tfor ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 11075: ['    else ( ID <= CONST )', ' expected  ;  before  {  token'], 11076: ['\t\tprintf ( STRING )', ' expected  ;  before  return '], 11077: ['    ID = ID + ID + sqrt ( ID * ID + ID * ID )', ' expected  ;  before  return '], 11078: ['\tscanf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 11079: ['\tif ( ID == ID & ID == ID & ID = ID ) {', ' lvalue required as left operand of assignment'], 11080: [' if ( ( ( ID - ID ) / ( ID - ID ) ) = ( ( ID - ID ) / ( ID - ID ) ) )', ' lvalue required as left operand of assignment'], 11081: ['   int ID [ ] [ CONST ] ;', ' array size missing in  ID '], 11082: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 11083: ['\tint ID [ ] = { CONST , CONST , CONST , CONST , CONST , - CONST }', ' expected  ,  or  ;  before  printf '], 11084: ['    ID % ID = ID ;', ' invalid operands to binary % '], 11085: ['    return CONST', ' expected  ;  before  }  token'], 11086: ['}', ' expected declaration or statement at end of input'], 11087: ['            printf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 11088: ['\t        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 11089: ['        case CONST : if ( ID == CONST ) printf ( STRING )', ' expected  ;  before  else '], 11090: ['}', ' expected declaration or statement at end of input'], 11091: ['    else if ( ID [ ID ] > ID )', '  else  without a previous  if '], 11092: ['\telse printf ( STRING , ID , ID , ID , ID , ID ) ;', ' expected statement before  )  token'], 11093: ['         scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 11094: ['        { printf ( STRING , ID [ ID ] ) }', ' expected  ;  before  }  token'], 11095: ['\tprintf ( STRING , ID [ CONST ] ) ; }', '  ID  undeclared '], 11096: ['\tprintf ( STRING , * ( CONST ID + CONST * CONST + CONST ) ) ;', ' invalid suffix "a" on integer constant'], 11097: ['    ID = getchar ( )', ' expected  ;  before  }  token'], 11098: ['    int * * ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 11099: ['\t    ID [ ID ] = ID [ ID ] - CONST', ' expected  ;  before  }  token'], 11100: ['       ID ( & ID [ ID ] , & ID [ ID ] ) ;', '  ID  undeclared '], 11101: ['\t    for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 11102: ['\t        if ( ID + ID < CONST ID + CONST )', ' invalid suffix "n" on integer constant'], 11103: ['    int ID ;', ' conflicting types for  ID '], 11104: ['int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 11105: ['\tID ( ID ) ;', ' too few arguments to function  ID '], 11106: ['\tif ( ( ID / ID ) = ( ID / ID ) ) ', ' lvalue required as left operand of assignment'], 11107: ['    else if ( ID != CONST )  ', '  else  without a previous  if '], 11108: ['\tprintf ( STRING , ID ( CONST , CONST ) == CONST ? STRING : STRING ) ;', ' too few arguments to function  ID '], 11109: ['}', ' expected declaration or statement at end of input'], 11110: ['printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 11111: ['    float ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 11112: ['\t    if ( ( ID [ ID ] <= CONST && ID [ ID ] >= CONST ) && ( ID [ ID + CONST ] <= CONST && ID [ ID + CONST ] >= CONST ) ( ID [ ID + CONST ] <= CONST && ID [ ID + CONST ] >= CONST ) ) {', ' called object is not a function or function pointer'], 11113: ['    ID = CONST / CONST ( ID * ( CONST - ID ) + ID * ( ID - ID ) + CONST + ( ID - CONST ) ) ;', ' called object is not a function or function pointer'], 11114: ['    else ', ' expected expression before  }  token'], 11115: ['int ID [ CONST ] , ID , ID , ID , ID , ID = CONST , ID ;', ' redeclaration of  ID  with no linkage'], 11116: ['    printf ( STRING )', ' expected  ;  before  return '], 11117: ['printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 11118: ['       printf ( STRING )', ' expected  ;  before  return '], 11119: ['        if ( ( ID -> ID . ID <= ID -> ID . ID ) && ( ID -> ID . ID <= ID -> ID . ID ) )', '  ID  {aka  struct rect } has no member named  ID ; did you mean  ID ?'], 11120: ['        ID = ID / CONST', ' expected  ;  before  ID '], 11121: ['    int ID = CONST , ID = ID , ID ;', '  ID  undeclared '], 11122: ['\t        ID [ ID ] = ID [ ID ] ID [ ID ] ;', ' expected  ;  before  ID '], 11123: ['\t    for ( ID = CONST ; ID < ID ; ID == ) {', ' expected expression before  )  token'], 11124: ['}', ' expected declaration or statement at end of input'], 11125: ['        ID = ID ( ) ;', ' too few arguments to function  ID '], 11126: ['\t    switch ( ID )', '  ID  undeclared '], 11127: ['    printf ( STRING , ID ) ; break ;', ' break statement not within loop or switch'], 11128: ['        ID ( ID , ID , ID ) ;', '  ID  undeclared '], 11129: ['printf ( STRING )', ' expected  ;  before  return '], 11130: [' int', ' expected identifier or  (  before  return '], 11131: ['    ID = ID * ID / CONST', ' expected  ;  before  printf '], 11132: ['        printf ( STRING )', ' expected  ;  before  ID '], 11133: ['        printf ( STRING , * ( ID + ID ) )', ' expected  ;  before  }  token'], 11134: ['    ID ( ID , ID - CONST ) ; ', '  ID  undeclared '], 11135: ['        if ( ID [ ID - CONST ] == ID [ ID - CONST ) return ID ( ID - CONST , ID - CONST , ID , ID ) + CONST ; ', ' expected  ]  before  )  token'], 11136: ['\tID [ CONST ] = CHART', ' expected  ;  before  scanf '], 11137: ['        return ID ;', '  ID  undeclared '], 11138: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 11139: ['    else return ID ;', '  else  without a previous  if '], 11140: ['\t    ID : printf ( STRING , ID ) ; ID ;', '  ID  undeclared '], 11141: [' printf ( STRING , ID )   ', ' expected  ;  before  return '], 11142: ['\tprintf ( STRING CONST , ID ) ;', ' expected  )  before numeric constant'], 11143: ['\t    ID [ ID ] = ID ( * ( ID + ID ) , ID , ID )', ' expected  ;  before  }  token'], 11144: ['        ID = CONST', ' expected  ;  before  for '], 11145: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11146: ['        ID = ID', ' expected  ;  before  printf '], 11147: ['\tprintf ( STRING , ID ( CONST ) )', ' expected  ;  before  return '], 11148: ['\t     { ID [ ID + ID ] += ( ID [ ID ] * ID [ ID ] ) }', ' expected  ;  before  }  token'], 11149: ['    ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 11150: ['   if ( ID - ID ) / ( ID - ID ) == ( ID - ID ) / ( ID - ID ) {', ' expected expression before  ID  token'], 11151: ['}', ' expected  ; , identifier or  (  before  int '], 11152: ['}', ' expected declaration or statement at end of input'], 11153: ['        printf ( STRING ) : }', ' expected  ;  before  :  token'], 11154: ['        scanf ( STRING , & ID )', ' expected  ;  before  do '], 11155: ['{ printf ( STRING , - ID , ID , ID ) ; } " )', ' missing terminating " character'], 11156: ['          if ( ID == ID || ID = ID + ID - CONST )', ' lvalue required as left operand of assignment'], 11157: ['}', ' expected declaration or statement at end of input'], 11158: ['}', ' expected  ; , identifier or  (  before  int '], 11159: ['    scanf ( STRING , ID )', ' expected  ;  before  for '], 11160: ['    for ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 11161: ['\t        ID = ID [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 11162: ['    ID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 11163: ['\tscanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 11164: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 11165: ['\tprintf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 11166: ['    int ID , ID = CONST , ID = CONST', ' expected  ,  or  ;  before  scanf '], 11167: ['    if ( ID >= CONST || ID = < ( - CONST ) )                ', ' expected expression before  <  token'], 11168: ['    for ( ID = CONST ; ( ID < ID + CONST ) && ( ID < ID + CONST ) )', ' expected  ;  before  )  token'], 11169: ['  if ( abs ( ID ) > abs ( ID ) ) ? printf ( STRING ) : printf ( STRING ) ;', ' expected expression before  ?  token'], 11170: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11171: ['scanf ( STRING , ID )', ' expected  ;  before  while '], 11172: ['    return void ;', ' expected expression before  ID '], 11173: ['        ID ( ID )', ' expected  ;  before  if '], 11174: ['            if ( ID == ID || ID == ID || ID == ID || ID == ID )', '  ID  undeclared '], 11175: ['}', ' expected declaration or statement at end of input'], 11176: ['   ID = ID ( ID )', ' expected  ;  before  printf '], 11177: ['            if ( ID [ ID ] [ ID ] != CONST )', '  ID  undeclared '], 11178: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 11179: ['ID / CONST = ID ;', ' lvalue required as left operand of assignment'], 11180: ['\t    ID [ ID ] = ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 11181: ['    char ID [ ] = STRING', ' expected  ,  or  ;  before  printf '], 11182: ['    printf ( STRING , , ID ) ;', ' expected expression before  ,  token'], 11183: ['                    ID ( ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 11184: ['    printf ( STRING , CONST )', ' expected  ;  before  return '], 11185: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 11186: ['int ID , ID ;', '  ID  redeclared as different kind of symbol'], 11187: ['\tscanf ( STRING , & ID )', ' expected  ;  before  return '], 11188: ['    return ID ;', '  ID  undeclared '], 11189: ['         scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 11190: ['            ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 11191: ['    printf ( STRING )', ' expected  ;  before  return '], 11192: ['printf ( STRING ID ) ;', ' expected  )  before  ID '], 11193: ['\tprintf ( STRING , ID * ( CONST + ( ID / CONST ) ) , ID , ID ) ;', '  ID  undeclared '], 11194: ['\t   else', '  else  without a previous  if '], 11195: ['    char ID = [ CONST ] ;', ' expected expression before  [  token'], 11196: ['\tint ID [ ID ] ;', ' redeclaration of  ID  with no linkage'], 11197: ['    ID * ID = ( ID * ) malloc ( sizeof ( ID ) * ID ) ;', ' redeclaration of  ID  with no linkage'], 11198: [' ID ( ID [ ] [ CONST ] , ID ) ;', ' expected expression before  ]  token'], 11199: ['}', ' expected declaration or statement at end of input'], 11200: ['    } return ( ID ( ID [ ] , ID - CONST ) ) ;', ' expected expression before  ]  token'], 11201: ['    printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 11202: ['    ID [ ID ] = CHART', ' expected  ;  before  scanf '], 11203: ['\tID = ( ID * ID * sqrt ( CONST ) ) / CONST', ' expected  ;  before  printf '], 11204: ['    ID . ID = ID * ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 11205: ['        printf ( STRING )', ' expected  ;  before  }  token'], 11206: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 11207: ['     printf ( STRING )', ' expected  ;  before  return '], 11208: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 11209: ['\tfor ( ID = ID ; ID <= ID ; ID ++ )', '  ID  undeclared '], 11210: ['    if ( ( float ) ( CONST / CONST ) ( ID * ( ID - ID ) + ID * ( ID - ID ) + ID * ( ID - ID ) ) == CONST )', ' called object is not a function or function pointer'], 11211: ['    ID = ID * CONST + int ( * ( ID + ID ) ) ;', ' expected expression before  int '], 11212: ['        ID ++ ; ID', ' expected  ;  before  }  token'], 11213: ['                else ( ID == ( ID - CONST ) )', ' expected  ;  before  {  token'], 11214: ['\tscanf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 11215: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 11216: ['    printf ( STRING . ) ;', ' expected identifier before  )  token'], 11217: ['\tID = CONST / CONST * ( ID - CONST ) = CONST ;', ' lvalue required as left operand of assignment'], 11218: ['\tprintf ( STRING ( ID -> ID ) ) ;', ' called object is not a function or function pointer'], 11219: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 11220: ['\t\tfor ( int ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 11221: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 11222: ['\t   int ID = ID ;', ' redeclaration of  ID  with no linkage'], 11223: ['    int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  }  token"], 11224: ['\t    for ( ID = CONST ; ID <  ; ID ++ ) {', ' expected expression before  ;  token'], 11225: ['        scanf ( STRING , & ID [ ID ] [ ID ] / ID ) ;', ' invalid operands to binary / '], 11226: ['    ID = ( int * ) calloc ( ID * sizeof ( int ) ) ;', ' too few arguments to function  calloc '], 11227: ['\t            if ( ID == CONST && ( ID [ ID + ID ] [ ID ] == CHARST || ID [ ID + ID ] [ ID ] = CHARST ) )', ' lvalue required as left operand of assignment'], 11228: ['        scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 11229: ['        scanf ( STRING , & ID [ ID ] [ ID - CONST ] ) ;', '  ID  undeclared '], 11230: ['    scanf ( STRING , & ID & ID & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 11231: ['    return CONST ; }', ' expected declaration or statement at end of input'], 11232: ['        if ( ID % ID == CONST || ) {', ' expected expression before  )  token'], 11233: ['  printf ( STRING )', ' expected  ;  before  return '], 11234: ['   else if ( ID = CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 11235: ['printf ( STRING , ID )', ' expected  ;  before  return '], 11236: ['printf ( STRING )', ' expected  ;  before  return '], 11237: ['   ID', ' expected  ;  before  free '], 11238: ['    ID = ID [ ID ]', ' expected  ;  before  }  token'], 11239: ['\tprintf ( STRING , ID ( CONST , CONST , CONST ) == CONST ? STRING : STRING ) ;', ' too many arguments to function  ID '], 11240: ['    if ( ID == ID ) ;', '  ID  undeclared '], 11241: ['\tID = ( ( float ) CONST / CONST ) * ID ( ID ^ CONST + ID ^ CONST ) ;', ' invalid operands to binary ^ '], 11242: ['            ID = ( ( int ) ( * ( ID + ID ) ) ) - CONST ;', '  ID  undeclared '], 11243: ['}', ' expected declaration or statement at end of input'], 11244: ['\tint ID , ID , ;', ' expected identifier or  (  before  ;  token'], 11245: ['            if ( CHARST <= ID [ CONST ] && ID [ CONST ] <= CHARST ) )', ' expected statement before  )  token'], 11246: ['           if ( ID == ID - CONST )', '  ID  undeclared '], 11247: ['    } else if ( ( ID * ID ) = ( ID * ID ) + ( ID * ID ) ) {', ' lvalue required as left operand of assignment'], 11248: ['\t{  ID = CONST', ' expected  ;  before  ID '], 11249: ['        ID [ ID - CONST ] = CHART ;', '  ID  undeclared '], 11250: ['\t    for ( int ID = ( ID / CONST ) - ID + CONST ; ID <= ( ID / CONST ) + ID + CONST ; ID ++ )', '  ID  undeclared '], 11251: ['        printf ( STRING )', ' expected  ;  before  }  token'], 11252: ['    ID ( ) ;', ' too few arguments to function  ID '], 11253: ['\tscanf ( STRING & ID [ ID ] [ ID ] ) ;', ' invalid operands to binary & '], 11254: ['     ID [ ID ] = ID [ ID - ID ] ;', '  ID  undeclared '], 11255: ['# ID < ID . ID >', ' invalid preprocessing directive #includ; did you mean #include?'], 11256: ['\t    ID [ ID ] = ID [ ID - CONST - ID ]', ' expected  ;  before  }  token'], 11257: ['    return = CONST ;', ' expected expression before  =  token'], 11258: ['\t    printf ( STRING , ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 11259: ['                ID += ID - ID', ' expected  ;  before  ID '], 11260: ['    for ( ID = CONST ; ID <= )', ' expected expression before  )  token'], 11261: ['        for ( ID = CONST ; ID <= ID ; ID ++ )', ' expected expression before  }  token'], 11262: ['\t    scanf ( STRING & ID [ ID - CONST ] ) ;', ' invalid operands to binary & '], 11263: ['    else ( ( ID >= CHARST ) && ( ID <= CHARST ) ) {', ' expected  ;  before  {  token'], 11264: ['\tID = CONST * ID * ID * ID * ID', ' expected  ;  before  printf '], 11265: ['\tchar CHARST ;', ' expected identifier or  (  before  i '], 11266: ['    if ( ID == ID )', '  ID  undeclared '], 11267: ['    ID ( ID , ID ) ;                      ', ' too few arguments to function  ID '], 11268: ['    printf ( STRING )', ' expected  ;  before  }  token'], 11269: ['    int ID = ID ;', ' redeclaration of  ID  with no linkage'], 11270: ['    printf ( STRING , ID ( CONST , ID ) ) ;', ' too few arguments to function  ID '], 11271: ['}', ' expected declaration or statement at end of input'], 11272: ['                            break', ' expected  ;  before  }  token'], 11273: ['printf', ' expected  ;  before  return '], 11274: ['\tprintf ( STRING , ID STRING ID ) ;', ' expected  )  before string constant'], 11275: ['  ID = int CHART - CONST ;', ' expected expression before  int '], 11276: ['\t    printf ( STRING ,\\ ID ) ;', ' stray  \\  in program'], 11277: ['    printf ( STRING . , ID , ID , ID ) ;', ' expected identifier before  ,  token'], 11278: ['  { if ( ID [ ID ] != CHART )', ' expected expression before  }  token'], 11279: ['   else ( ID == ID != ID )', ' expected  ;  before  printf '], 11280: ['                    ID = ID + ID - ID', ' expected  ;  before  printf '], 11281: ['\tID = CHART ;', ' assignment to expression with array type'], 11282: ['         for ( ID = CONST , ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 11283: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 11284: ['\t        scanf ( STRING , & ( * ( * ( ID + ID ) + ID ) ) ) ;', '  ID  undeclared '], 11285: ['ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 11286: ['}', ' expected declaration or statement at end of input'], 11287: ['}', ' expected declaration or statement at end of input'], 11288: ['printf ( STRING ID ID / STRING ) ;', ' expected  )  before  ID '], 11289: ['   if ID + ID >= ID ', ' expected  (  before  ID '], 11290: ['    printf ( STRING ID ( CONST , CONST , CONST , CONST ) ) ;', ' expected  )  before  ID '], 11291: ['    printf ( STRING , ID , ID , ID , ID ID ID ) ;', ' expected  )  before  ID '], 11292: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 11293: ['    ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 11294: ['    ID ( ( ID . ID ) , ( ID . ID ) , ( ID . ID ) , ( ID . ID ) , ( ID . ID ) , ( ID . ID ) )', ' expected  ;  before  return '], 11295: ['\tID ( ID != ID || ID < CONST )', ' expected  ;  before  {  token'], 11296: ['    else ( ID >= CONST ) {', ' expected  ;  before  {  token'], 11297: ['\tfloat ID = ( CONST / CONST ) * ( ID - CONST ) + CONST ) ;', ' expected  ,  or  ;  before  )  token'], 11298: ['\tprintf ( STRING , CHARST - CHARST + CONST )', ' expected  ;  before  return '], 11299: ['    else if', ' expected  (  before  {  token'], 11300: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 11301: ['\tscanf ( STRING , & , ID , ID , ID , ID , ID ) ;', ' expected expression before  ,  token'], 11302: ['    while ( ID != CHART && ID != ID )', '  ID  undeclared '], 11303: ['       printf ( STRING )', ' expected  ;  before  return '], 11304: ['    printf ( STRING )', ' expected  ;  before  return '], 11305: ['    while ( ID != CHART && ID != CHART && ID != CHARNST ) {', ' empty character constant'], 11306: ['}', ' expected declaration or statement at end of input'], 11307: ['}', ' expected identifier or  (  before  }  token'], 11308: ['\tprintf ( STRING , ID [ CONST ] , ID [ CONST ] ID [ CONST ] ) ;', ' expected  )  before  ID '], 11309: ['\tprintf ( STRING STRING ID ) ;', ' expected  )  before  ID '], 11310: ['\tID = ( ( ID ) / CONST ) * ID * ID ;', '  ID  undeclared '], 11311: ['\tfor ( ID = CONST ; ID < ID - ; ID ++ )', ' expected expression before  ;  token'], 11312: ['    printf ( STRING , CONST * CONST * CONST )', ' expected  ;  before  return '], 11313: ['                   ID == ID', ' expected  ;  before  }  token'], 11314: ['    printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 11315: ['    printf ( STRING , ID ( ID ) ) ;', '  ID  undeclared '], 11316: ['\tID [ ] = getchar ( ) ;', ' expected expression before  ]  token'], 11317: ['    ID = ID ( CONST + ( ID * ID / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 11318: ['    ID = ID ( int ID + CONST ) ;', ' expected expression before  int '], 11319: ['\t        if ( ID [ ID ] + ID [ ID ] = ID )', ' lvalue required as left operand of assignment'], 11320: ['\t    ID [ ID ] = CONST', ' expected  ;  before  for '], 11321: ['        printf ( STRING , * ) ;', ' expected expression before  )  token'], 11322: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 11323: ['\tprintf ( STRING , [ CONST ] ) ;', ' expected expression before  [  token'], 11324: ['\tprintf ( STRING , ID . ) ;', ' expected identifier before  )  token'], 11325: ['    ID = ID + CONST', ' expected  ;  before  printf '], 11326: ['    int ID , ;', ' expected identifier or  (  before  ;  token'], 11327: [' ID = ID * ID * ( ID - ID ) / ( ID * ID - ID * ID )', ' expected  ;  before  if '], 11328: ['    if ( ID )', '  ID  undeclared '], 11329: ['}', ' expected declaration or statement at end of input'], 11330: ['    printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 11331: ['    }\t', ' expected declaration or statement at end of input'], 11332: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 11333: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 11334: ['    * ID -> ID = ID ;', ' incompatible types when assigning to type  struct node  from type  int * '], 11335: ['    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 11336: ['printf ( STRING )', ' expected  ;  before  return '], 11337: [' else  ( ( ID >= CONST ) && ( ID <= CONST ) ) { printf ( STRING ) ; }', ' expected  ;  before  {  token'], 11338: ['\t    else ID = CONST ;    ', '  else  without a previous  if '], 11339: ['printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 11340: ['        if ( ( ID [ ID ] == CHARNST ) || ( ID [ ID ] == CHART ) )', ' empty character constant'], 11341: ['}', ' expected declaration or statement at end of input'], 11342: ['      { int ID [ ID ] = CONST ;', ' variable-sized object may not be initialized'], 11343: ['\t    } else if ( ID [ ID ] == CHARST CHARST ) {', ' expected  )  before  \\x20 '], 11344: ['    printf ( STRING , if ) ; ', ' expected expression before  if '], 11345: ['}', ' expected  ; , identifier or  (  before  int '], 11346: ['        printf ( STRING , ID [ CONST ] . ID ID [ CONST ] . ID ID [ CONST ] . ID ) ;', ' expected  )  before  ID '], 11347: ['printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 11348: ['\t       else printf ( STRING )    ', ' expected  ;  before  }  token'], 11349: ['    printf ( STRING )', ' expected  ;  before  return '], 11350: ['    if ID + ID <= ID - CONST ;', ' expected  (  before  ID '], 11351: ['        ID = ID + ID [ ID ] = ID [ ID - CONST ] ;', ' lvalue required as left operand of assignment'], 11352: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 11353: ['    else if ( ID < CONST + ID && ID >= CONST - ID ) {', '  ID  undeclared '], 11354: ['\t printf ( STRING )', ' expected  ;  before  else '], 11355: ['    for ( ID = CONST ; ID < ID . ID ; ID ++ ) {', '  ID  is a pointer; did you mean to use  -> ?'], 11356: ['        for ( ID = CONST ; ID < ID - CONST - ; ID ++ )', ' expected expression before  ;  token'], 11357: ['printf ( STRING . ) ;', ' expected identifier before  )  token'], 11358: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 11359: ['        ID ( ID + CONST , ID + CONST , ID ) ;', '  ID  undeclared '], 11360: ['}', ' expected declaration or statement at end of input'], 11361: ['             ID = ( ID ) * ( ID )', ' expected  ;  before  if '], 11362: ['    if ( ID <= abs ( ID -> ID - ID -> ID ) )', "  ID  {aka  struct def_circle } has no member named  ID '; did you mean 'r'?"], 11363: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 11364: ['printf ( STRING . ) ;', ' expected identifier before  )  token'], 11365: ['    int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 11366: ['    ID ++', ' expected  ;  before  ID '], 11367: ['    }', ' expected identifier or  (  before  }  token'], 11368: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 11369: ['      ID = ID', ' expected  ;  before  for '], 11370: ['else ID = CONST ;', '  else  without a previous  if '], 11371: ['        else ( ID * ID + ID * ID < ID * ID ) {', ' expected  ;  before  {  token'], 11372: ['    ID ( ID , ID )', ' expected  ;  before  printf '], 11373: ['  else if ( ( ID + ID < ID ) ID <= CONST || ID <= CONST || ID <= CONST )', ' expected  )  before  ID '], 11374: ['\t    if ( ID [ ID ] == ID [ ID + ID ] )', ' expected expression before  }  token'], 11375: ['}', ' expected declaration or statement at end of input'], 11376: ['\t         { ID = ID - ( pow ( CONST , ID ) ) }', ' expected  ;  before  }  token'], 11377: ['    float ID = ID ;', '  ID  undeclared '], 11378: ['\tprintf ( STRING )', ' expected  ;  before  return '], 11379: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 11380: ['printf ( STRING , ID , ID , ) ;', ' expected expression before  )  token'], 11381: ['\t        break', ' expected  ;  before  }  token'], 11382: ['        ID = ID / CONST ;', '  ID  undeclared '], 11383: ['printf ( STRING , ID )', ' expected  ;  before  return '], 11384: ['    printf ( STRING )', ' expected  ;  before  }  token'], 11385: ['    ID = sqrt ( CONST * ID / CONST ) ;', '  ID  undeclared '], 11386: ['\tchar ID = CHART', ' expected  ,  or  ;  before  ID '], 11387: ['int ID [ CONST ] = { CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST , CONST }', ' expected  ,  or  ;  before  ID '], 11388: ['    ID + CONST = ID ;', ' lvalue required as left operand of assignment'], 11389: ['\t{ ID = ID + fabs ( ( ID ( ID + ID ) ) * ID ) ;', '  ID  undeclared '], 11390: ['        ID ++', ' expected  ;  before  }  token'], 11391: ['             ID ++', ' expected  ;  before  }  token'], 11392: ['\t         for ( ID = CONST ; ID <= CONST ID - CONST ; ID ++ )', ' invalid suffix "m" on integer constant'], 11393: ['    for ( int ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 11394: ['\t        if ( ID % CONST == CONST )', '  ID  undeclared '], 11395: ['    int ID ;', ' redeclaration of  ID  with no linkage'], 11396: ['    {   ID ( ID , ID + CONST , ID , ID )', ' expected  ;  before  }  token'], 11397: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 11398: ['int ID = CONST , ID , ID , ID = , ID ;', ' expected expression before  ,  token'], 11399: ['            printf ( STRING , ID ( ID ) ) ;', ' called object  ID  is not a function or function pointer'], 11400: ['}', ' expected declaration or statement at end of input'], 11401: ['    ID -> ID = ID', ' expected  ;  before  ID '], 11402: ['\t    ID [ ID ] = CONST ;', '  ID  undeclared '], 11403: ['    printf ( STRING , ID )', ' expected  ;  before  switch '], 11404: ['        puts ( ( ID - CONST ) * ) ;', ' expected expression before  )  token'], 11405: ['    printf ( STRING ID ) ; ', ' expected  )  before  ID '], 11406: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 11407: ['printf ( STRING )', ' expected  ;  before  return '], 11408: ['\t} while ( CONST )              ', ' expected  ;  before  printf '], 11409: ['      ID [ ID ] = ID [ ID - CONST ]', ' expected  ;  before  printf '], 11410: ['                    else if ( ( ID == ID + ID && ID == ID + ID ) ) {', '  else  without a previous  if '], 11411: ['        {  if ( ( ID . ID [ ID ] ) < * ( ID . ID [ ID ] ) )', ' invalid type argument of unary  *  '], 11412: ['     ID ( ID [ ] [ CONST ] ) ;', ' expected expression before  ]  token'], 11413: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 11414: ['    ID * ID = ( ID * ) malloc ( ID * sizeof ( ID ) ) ;', '  ID  undeclared '], 11415: ['    printf ( STRING )', ' expected  ;  before  return '], 11416: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 11417: [' scanf ( STRING , & ID , & ID , & ID )', ' expected  ;  before  for '], 11418: ['\t    printf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 11419: ['\tprintf ( ID , ID ) ;', ' incompatible type for argument 1 of  printf '], 11420: ['            printf ( STRING , ID ( ID [ ID ] ) )', ' expected  ;  before  }  token'], 11421: ['\t        ID [ ID ] = ! ID * ID + ID * ! ID = CHARST ;', ' lvalue required as left operand of assignment'], 11422: ['}', ' expected declaration or statement at end of input'], 11423: ['        else if ( ( ID * ID + ID * ID ) = ( ID * ID ) )', ' lvalue required as left operand of assignment'], 11424: ['     ID = ID ++   ', ' expected  ;  before  }  token'], 11425: ['\tfor ( ID = CONST ; ID = < ID ; ID = ID + CONST )', ' expected expression before  <  token'], 11426: ['\t    if ( CONST <= ID [ ID ] <= CONST )', '  ID  undeclared '], 11427: ['   if ( ID == ID - CONST )', '  ID  undeclared '], 11428: ['            printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 11429: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 11430: ['    int ID , ID , ID , ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 11431: ['    else ( ID % CONST == CONST )', ' expected  ;  before  printf '], 11432: ['printf ( STRING , ID ( ID , ID , ID ) ) ;', ' invalid use of void expression'], 11433: [' CONST <= ID && ID <= CONST , CONST <= ID && <= CONST ;', ' expected expression before  <=  token'], 11434: ['\tfor ( ID = ; ID <= ( ID - CONST ) ; ID ++ )  {', ' expected expression before  ;  token'], 11435: ['}', ' expected declaration or statement at end of input'], 11436: ['  printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 11437: ['\t    ID = CONST', ' expected  ;  before  ID '], 11438: ['    return ID ( ID + CONST , ID + ID [ ID + CONST ] ) || ID ( ID + CONST , ID ) ;', '  ID  undeclared '], 11439: ['if ( ( ID == CONST ) || ( ID == CONST ) ( ID == CONST ) ) { printf ( STRING ) ; }', ' called object is not a function or function pointer'], 11440: ['    for ( ID = CONST ; ID < ID - CONST ; ID ++ )', '  ID  undeclared '], 11441: ['\tint ID = CONST , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 11442: ['    ID = ( char * ) calloc ( CONST , char ) ;', ' expected expression before  CHAR '], 11443: ['\t    for ( ID = ID ; ID == ( CHARST ) )', ' expected  ;  before  )  token'], 11444: ['        return ID ( ID ( ID , ID , ID - CONST , ID ) , ID ( ID , ID , ID , ID - CONST ) )', ' expected  ;  before  }  token'], 11445: ['    ID = ( int * ) malloc ( ID * sizeof ( int ) ) ;', '  ID  undeclared '], 11446: ['    ID = ID + ID    ', ' expected  ;  before  }  token'], 11447: ['    puts ( STRING , ID ) ;', ' too many arguments to function  puts '], 11448: ['    if ( ( ID - ID ) / ( ID - ID ) = ( ID - ID ) / ( ID - ID ) )', ' lvalue required as left operand of assignment'], 11449: ['    ID ( ID , ID - CONST , ID + CONST ) ;', ' too few arguments to function  ID '], 11450: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11451: ['for ( int ID = ID [ ID - CONST ] ; ID <= ID ; ID ++ )', '  ID  undeclared '], 11452: ['printf ( STRING , CHARST - CONST + ID + ID )', ' expected  ;  before  ID '], 11453: ['    ID [ ID ] = ( struct ID * ) malloc ( sizeof ( struct ID ) ) ; }', ' invalid application of  sizeof  to incomplete type  struct node '], 11454: ['\t{   for ( ID = ID + CONST ; ID = > ID ; ID ++ )    ', ' expected expression before  >  token'], 11455: ['\tfor ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 11456: ['for ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 11457: ['\tprintf ( STRING , ID ( CONST , CONST , CONST ) )', ' expected  ;  before  return '], 11458: [' else if ( ID == CONST && ID != CONST ) { printf ( STRING ) ; ID ( ID ) ; }', '  else  without a previous  if '], 11459: ['    else ( ID * ID != ID * ID ) { ; ', ' expected  ;  before  {  token'], 11460: ['        ID [ CONST ID ] = CHART ;', ' invalid suffix "n" on integer constant'], 11461: ['    scanf ( STRING , ID [ ] )', ' expected expression before  ]  token'], 11462: ['      for ( ID = ID + CONST ; ID ++ )                                    ', ' expected  ;  before  )  token'], 11463: ['       printf ( STRING ) }', ' expected  ;  before  }  token'], 11464: ['            ID ++', ' expected  ;  before  }  token'], 11465: ['        if ( ID = CHARST && ID = CHARST ) {', ' lvalue required as left operand of assignment'], 11466: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 11467: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 11468: ['}', ' expected declaration or statement at end of input'], 11469: ['        { putchar ( ID [ ID ] ) printf ( STRING ) ; ; ID ++ ; }', ' expected  ;  before  printf '], 11470: ['}', ' expected declaration or statement at end of input'], 11471: ['    ID [ CONST ] = ( ( ID [ CONST ] + ID [ CONST ] + ID [ CONST ] ) * ( ID [ CONST ] + ID [ CONST ] + ID [ CONST ] ) )', ' expected  ;  before  printf '], 11472: ['\t        printf ( STRING , CONST )', ' expected  ;  before  if '], 11473: ['            if ( ID [ ID ] [ ID ] < ID ) {', '  ID  undeclared '], 11474: ['printf ( STRING )', ' expected  ;  before  return '], 11475: ['    for ( int ID = ID - CONST ; ID [ ID ] != CHART ; ID ++ ) { printf ( STRING ) }', ' expected  ;  before  }  token'], 11476: ['        for ( ID = ID ; ID <= ID ; ID ++ )', '  ID  undeclared '], 11477: ['    int ID = CONST ;', '  ID  redeclared as different kind of symbol'], 11478: ['\tprintf ( STRING , ID )', ' expected  ;  before  while '], 11479: ['    ID = ID % CONST', ' expected  ;  before  ID '], 11480: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 11481: ['        if ( ID [ ID ] % CONST == CONST ) {', '  ID  undeclared '], 11482: ['        ID [ ID ] = CHART', ' expected  ;  before  ID '], 11483: ['\tprintf ( STRING )', ' expected  ;  before  return '], 11484: ['if ( ) printf ( STRING ) ;', ' expected expression before  )  token'], 11485: ['    for ( ID = CONST ; ID != ID && ID = CHART ; ID ++ )', ' lvalue required as left operand of assignment'], 11486: ['    ID = ( CONST * ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 11487: ['    `', ' stray  `  in program'], 11488: ['        ID -> ID = ID', ' expected  ;  before  if '], 11489: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 11490: ['    for ( ID = CONST ; ID <= ID - CONST ; ID ++ )', '  ID  undeclared '], 11491: ['    printf ( STRING )', ' expected  ;  before  return '], 11492: ['   if else ( ! ID ( ID ) ) {', ' expected  (  before  else '], 11493: ['          if ( ID [ ID ] [ ID ] != CONST || ID [ ID ] [ ID ] != CONST || )', ' expected expression before  )  token'], 11494: ['\tID = ID', ' expected  ;  before  for '], 11495: ['    ID = strlen ( ) ;', ' too few arguments to function  strlen '], 11496: ['\t    { ID = - CONST * ID ; }', ' invalid operands to binary * '], 11497: ['}', ' expected declaration or statement at end of input'], 11498: ['\tif ( ID >= CONST && ID <= CONST && ) {', ' expected expression before  )  token'], 11499: ['    ID [ CONST ] [ CONST ] = { { CONST } , { CONST } , { CONST } } ;', ' expected expression before  {  token'], 11500: ['\tprintf ( STRING , ID . ID )', ' expected  ;  before  return '], 11501: ['const double ID = CONST', ' expected  ,  or  ;  before  int '], 11502: ['    int ID , ID = ;', ' expected expression before  ;  token'], 11503: ['        return ID [ ID ( ID , ID ) ] ;', ' too few arguments to function  ID '], 11504: ['    scanf ( STRING , & ID , % ID ) ;', ' expected expression before  %  token'], 11505: ['            while ( ID [ ID + CONST ] == ID || ID [ ID + CONST ] == ID )                                       ', '  ID  undeclared '], 11506: ['}', ' expected declaration or statement at end of input'], 11507: ['for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 11508: ['\tif ( ID == CONST && ID == CONST && ID == CONST ) .                                 ', ' expected expression before  .  token'], 11509: ['    if ( ID ID ID ID CONST )', ' expected  )  before  ID '], 11510: ['\tif ( ID [ ID ] % CONST == CONST ) {', '  ID  undeclared '], 11511: ['    else if ( )', ' expected expression before  )  token'], 11512: ['    else', '  else  without a previous  if '], 11513: ['printf ( STRING , )', ' expected expression before  )  token'], 11514: ['       if ( ID [ ID ] == CHART ) {', '  ID  undeclared '], 11515: ['}', ' expected declaration or statement at end of input'], 11516: ['   ID - ID = ID ;', '  ID  undeclared '], 11517: ['\tif ( ID [ ID + CONST ] != ID ) {', '  ID  undeclared '], 11518: ['\tprintf ( STRING )', ' expected  ;  before  return '], 11519: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 11520: ['ID = ID + ID + ID', ' expected  ;  before  return '], 11521: ['\t        ( ID < ID ) ? ID ++ : ;', ' expected expression before  ;  token'], 11522: ['                    printf ( STRING , ID )', ' expected  ;  before  }  token'], 11523: ['    if ( ( ID [ ID ] == ID && ID [ ID - CONST ] != ID ) || ( ID [ ID ] == ID && ID [ ID - CONST ] = ID ) )', ' lvalue required as left operand of assignment'], 11524: ['if ( ( ( ID * ID ) == ( ID * ID ) + ( ID * ID ) ) || ( ( ID * ID ) == ( ID * ID ) + ( ID * ID ) ) || ( ( ID * ID ) = ( ID * ID ) + ( ID * ID ) ) ) {', ' lvalue required as left operand of assignment'], 11525: ['\tID = ( CONST / CONST ) * ( ID - CONST ) + CONST', ' expected  ;  before  printf '], 11526: ['    float  ID , ID , ID , ID , ID , , ID ;', ' expected identifier or  (  before  ,  token'], 11527: ['\t        for ( int ID = ID , ID = ID ; ID [ ID ] != CHART ; ID ++ , ID ++ ) {', '  ID  undeclared '], 11528: ['    while ( ID [ ID ] != CHART )', '  ID  undeclared '], 11529: ['\t else  ( ID == CONST )', ' expected  ;  before  printf '], 11530: ['    float ID , ;', ' expected identifier or  (  before  ;  token'], 11531: ['            if ( ( ID [ ID ] == ID [ ID ] ) || ( ID [ ID ] == ID [ ID ] ) || ( ID ( ID [ ID ] - ID [ ID ] ) ) == ID ( ID [ ID ] - ID [ ID ] ) ) )', ' expected statement before  )  token'], 11532: ['    printf ( STRING ) ; printf ( "\\ ( % ID , ID\\ , % ID , ID\\ ) STRING\\ ( % ID , ID\\ , CONST\\ )\\ , STRING ID STRING\\ ( % ID , ID\\ , CONST\\ ) STRING ID STRING % ID " , ID )', ' expected  ;  before  return '], 11533: ['        ID = ( char * ) malloc ( ID * ID * sizeof ( char ) )', ' expected  ;  before  }  token'], 11534: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 11535: ['            ID = ( ( ID * ID * ID ) - ( ID * ID * ID ) ) / CONST', ' expected  ;  before  printf '], 11536: ['    else if ( ID [ ID ] [ ID + CONST ] == CONST )', '  ID  undeclared '], 11537: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11538: ['     printf ( STRING . ID -> ID ) ;', ' request for member  ID  in something not a structure or union'], 11539: ['\t    if ( ID [ ID ] >= ID [ ID + CONST ] ) ID ( & ID [ ID ] , & ID [ ID + CONST ] ) ;', ' invalid operands to binary >= '], 11540: ['    for ( ID = ID - CONST ; ID >= CONST , ID -- )', ' expected  ;  before  )  token'], 11541: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11542: ['    char ID [ CONST ] = { CHARST }', ' expected  ,  or  ;  before  scanf '], 11543: ['    ID = ( ID * ( ID - CONST ) )', ' expected  ;  before  scanf '], 11544: ['\tscanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 11545: ['    printf ( STRING )', ' expected  ;  before  for '], 11546: ['\tprintf ( STRING , ID , ID , ID [ CONST ] )', ' expected  ;  before  return '], 11547: ['       if ( ID % CONST == CONST && ID % CONST != = CONST )', ' expected expression before  =  token'], 11548: ['}', ' expected declaration or statement at end of input'], 11549: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 11550: ['{ ID = CONST', ' expected  ;  before  ID '], 11551: ['\tint ID = ID ( ID ) ;', ' redeclaration of  ID  with no linkage'], 11552: ['printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 11553: ['            if ( ( - ID [ ID ] [ ID ] ) = ID [ ID ] [ ID ] )', ' lvalue required as left operand of assignment'], 11554: ['    printf ( STRING )', ' expected  ;  before  return '], 11555: ['}', ' expected declaration or statement at end of input'], 11556: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 11557: ['    while ( ID )', '  ID  undeclared '], 11558: ['    else if ( ID == CONST )', '  else  without a previous  if '], 11559: ['        ID ++', ' expected  ;  before  }  token'], 11560: ['    printf ( STRING )', ' expected  ;  before  printf '], 11561: ['    else ( ID >= CHARST ) {', ' expected  ;  before  {  token'], 11562: ['            ID = ID + ID [ ID ] ;', '  ID  undeclared '], 11563: ['         else if ( * ( ID + ID ) == CONST && * ( ID + ID ) <= * ( ID + ID % ID ) && * ( ID + ID - CONST ) == ID ) )', ' expected statement before  )  token'], 11564: ['    printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 11565: ['        ID = ID + ID [ ID ]', ' expected  ;  before  }  token'], 11566: ['\tprintf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 11567: ['    ID [ ID ] = CHART ;', '  ID  undeclared '], 11568: ['\t   printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 11569: ['    ID ( ID , CONST , ID ) ;', ' too many arguments to function  ID '], 11570: ['    printf ( STRING , ID [ CONST ] [ CONST ] )', ' expected  ;  before  }  token'], 11571: ['else if ( ID != = CONST ) ;', ' expected expression before  =  token'], 11572: ['        ID = ID ( ID )', ' expected  ;  before  }  token'], 11573: ['\t    ID [ ID ] = ID ( ID [ ID ] , ID [ ID ] , ID , ID ) ;', ' too few arguments to function  ID '], 11574: ['int = ID ( ID ID , ID ID ) ;', ' expected identifier or  (  before  =  token'], 11575: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 11576: ['\treturn CONST ;', ' expected declaration or statement at end of input'], 11577: ['        ID ( CONST ) = CONST ;', ' lvalue required as left operand of assignment'], 11578: ['    if ( ( ID >= CONST ) && ( ID <= CONST ) )', ' expected expression before  else '], 11579: ['    printf ( STRING , ID , ID [ CONST ] , ID [ CONST ] ) ;', '  ID  undeclared '], 11580: ['   float ID = ( ( ID ) * ( ID ) * ( ID ) ) / CONST                                    ', ' expected  ,  or  ;  before  printf '], 11581: ['\t    ID = ID', ' expected  ;  before  while '], 11582: ['    ID ++', ' expected  ;  before  }  token'], 11583: ['        } printf ( STRING , ID [ ID - CONST ] ) ;', '  ID  undeclared '], 11584: ['\tprintf ( STRING , ID )', ' expected  ;  before  if '], 11585: ['        int ID = CONST + ID [ ID ] + ;', ' expected expression before  ;  token'], 11586: ['           { ID = ID + CONST', ' expected  ;  before  }  token'], 11587: ['\tID = ID', ' expected  ;  before  while '], 11588: ['\t   ID = ID + ID ( - CONST , ID + CONST + CONST ) * ( * ( ID + ID ) ) * ID ( ID , ID - CONST ) ;', ' invalid operands to binary * '], 11589: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11590: ['\t ID ++ } ', ' expected  ;  before  }  token'], 11591: ['\t        scanf = ( STRING , & ID ) ;', ' lvalue required as left operand of assignment'], 11592: ['      else', '  else  without a previous  if '], 11593: ['    ID ( ID , CONST , ID )', ' expected  ;  before  return '], 11594: ['\telse if ( ( ID == ID != ID ) || ( ID != ID == ID ) ID ( ID != ID == ID ) )', ' expected  )  before  ID '], 11595: ['            printf ( STRING , ID [ ID - CONST - ID ] )', ' expected  ;  before  }  token'], 11596: ['         else', '  else  without a previous  if '], 11597: ['    printf ( STRING , ID , ID ) ;', ' lvalue required as left operand of assignment'], 11598: ['         else ( ID == CONST ) {', ' expected  ;  before  {  token'], 11599: ['\tfor ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 11600: ['\t    ID = CHARST + ID', ' expected  ;  before  for '], 11601: ['    ID ( ID )', ' expected  ;  before  return '], 11602: ['    printf ( STRING . , ID ) ;', ' expected identifier before  ,  token'], 11603: ['\tfor ( ID = CONST , ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 11604: ['\t{ if ID ( ID ) == CONST', ' expected  (  before  ID '], 11605: ['}', ' expected  ; , identifier or  (  before  struct '], 11606: ['        printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 11607: ['\t        for ( ID = CONST ; ID <= ( ID - CONST ) ; ID ++ )', '  ID  undeclared '], 11608: ['\tfloat ID = ID ( ( ID - ID ) ^ CONST + ( ID - ID ) ^ CONST ) ;', ' invalid operands to binary ^ '], 11609: ['    printf ( STRING , ID [ CONST ] , ID , ID )', ' expected  ;  before  return '], 11610: ['    if ( ( int ) ID == ID ) { ID = ( int * ) malloc ( ( CONST ID + CONST ) * sizeof ( int ) ) ; }', ' invalid suffix "m" on integer constant'], 11611: ['    if ( ( ID == CHARST ) || ( ID = CHARST ) || ( ID == CHARST ) || ( ID == CHARST ) || ( ID = CHARST ) )', '  ID  undeclared '], 11612: [' if ( int ID % CONST == CONST )', ' expected expression before  int '], 11613: ['}', ' expected declaration or statement at end of input'], 11614: ['        for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 11615: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 11616: ['\tfor ( ID = CONST ; ID < strlen ( ID ) , ID += ID ) {', ' expected  ;  before  )  token'], 11617: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 11618: ['    printf ( STRING , CONST * ) ;', ' expected expression before  )  token'], 11619: ['           ID [ ID + CONST ] = ID ;', '  ID  undeclared '], 11620: ['    for ( ID = CONST ; * ID [ ID ] != CHAR ; ID ++ ) {', ' invalid type argument of unary  *  '], 11621: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 11622: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 11623: ['printf ( STRING )', ' expected  ;  before  return '], 11624: ['    scanf ( STRING , & ID , & ID )', ' expected  ;  before  return '], 11625: ['        ID ( ID , ID , ID + CONST ) ;', '  ID  undeclared '], 11626: ['    ID = ID ( ID , ID , ID , ID ) ;', '  ID  undeclared '], 11627: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11628: ['    printf ( STRING )', ' expected  ;  before  return '], 11629: ['    for ( ID = CONST ; ID < ID && ID != CHART ; ID ++ ) {', '  ID  undeclared '], 11630: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 11631: ['    ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 11632: ['    int ID , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 11633: ['}', ' expected declaration or statement at end of input'], 11634: ['\t    if ( ID == CONST && ID == CONST && ID [ CONST ] == ID )', '  ID  undeclared '], 11635: ['}', ' expected declaration or statement at end of input'], 11636: ['   printf ( STRING , ID )', ' expected  ;  before  return '], 11637: ['    if ( ( ID / ID ) = = ( ID / ID ) )', ' expected expression before  =  token'], 11638: ['        ID ++', ' expected  ;  before  if '], 11639: ['    ID = ID - ID ;', ' assignment to expression with array type'], 11640: ['     printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 11641: ['    printf', ' expected  ;  before  return '], 11642: ['      printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 11643: ['\t       printf ( ID ) ; break ;', '  ID  undeclared '], 11644: ['\t      ( ID [ ID ] . ID . ID ) = ID ;', '  list_entries[i].head  is a pointer; did you mean to use  -> ?'], 11645: ['        ID = ID ( ID [ ID ] , ID [ ID - CONST ] )', ' expected  ;  before  }  token'], 11646: ['        if ( ID [ ID ] == CHARNST ) ', ' empty character constant'], 11647: ['    char ID ;', ' conflicting types for  ID '], 11648: ['                printf ( STRING ID ) ;', ' expected  )  before  ID '], 11649: ['        break', ' expected  ;  before  }  token'], 11650: ['           else', '  else  without a previous  if '], 11651: ['}', ' expected declaration or statement at end of input'], 11652: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 11653: ['        ID = ID ( ID , ID + ID [ ID ] ) ;', '  ID  undeclared '], 11654: ['    printf ( STRING , ID , ID [ ID ] ) ;', '  ID  undeclared '], 11655: ['            ID = ID + ID [ ID - ID ]', ' expected  ;  before  }  token'], 11656: ['  int * ID [ ID ] ;', '  ID  undeclared here '], 11657: ['    { printf ( STRING ) }', ' expected  ;  before  }  token'], 11658: ['        printf ( STRING , ID [ ID - CONST ] . ID , ID [ ID - CONST ] . ID , ID [ ID - CONST ] . ID ) ;', '  ID  {aka  struct birth_data } has no member named  ID '], 11659: ['printf ( STRING , ID )', ' expected  ;  before  }  token'], 11660: ['printf ( STRING STRING ID STRING ) ;', ' expected  )  before  ID '], 11661: ['\t    else', '  else  without a previous  if '], 11662: ['int main {', " expected  = , ',',  ; ,  asm  or  __attribute__  before  {  token"], 11663: ['        ( * ( ID + ID ) + ID ) = ( * ( ID + ID ) + ( CONST - ID ) )  ;', ' lvalue required as left operand of assignment'], 11664: ['  int ID = CHARST', ' expected  ,  or  ;  before  scanf '], 11665: ['\t        ID [ ( ( ID - CONST ) - ID ] = ID [ ID ] ;', ' expected  )  before  ]  token'], 11666: ['\tID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 11667: ['    scanf ( STRING , & ID ) ;                      ', '  ID  undeclared '], 11668: ['    while ( ID [ ID ] != CHART ) ID ++ ;', '  ID  undeclared '], 11669: ['    printf ( STRING , int ( CHARST ) * CONST ) ;', ' expected expression before  int '], 11670: [' \t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 11671: ['\tprintf ( STRING , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 11672: ['       ID += ( ID + ID > ID ) && ? CONST : CONST ;', ' expected expression before  ?  token'], 11673: ['    printf ( "\\ ( % CONST\\ , % CONST\\ )\\ , \\ ( % CONST\\ , CONST\\ )\\ , \\ ( " )', ' expected  ;  before  return '], 11674: ['       return void ;', ' expected expression before  ID '], 11675: ['\t    continue', ' expected  ;  before  else '], 11676: ['     if ( ID > ID + / CONST )', ' expected expression before  ID  token'], 11677: ['    ID = ID ( ID ) ;', '  ID  undeclared '], 11678: ['               for ( int ID = ID + CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 11679: ['    int ID = ( int ) ID [ ID ] ) * ID ; printf ( STRING , ID ) ;', ' expected  ,  or  ;  before  )  token'], 11680: ['\t         while ( ID < CONST && )', ' expected expression before  )  token'], 11681: ['        ID ( ID , ID , ( ID / ID ) )', ' expected  ;  before  for '], 11682: ['    ID = ID ( ID ) ;', '  ID  undeclared '], 11683: ['        printf ( STRING , ID -> ID ) ;', '  ID  undeclared '], 11684: ['  else', '  else  without a previous  if '], 11685: ['else if ( ID % CONST == CONST && ID % CONST != = CONST )', ' expected expression before  =  token'], 11686: ['        ID [ ID ] = CHART', ' expected  ;  before  printf '], 11687: ['}', ' expected declaration or statement at end of input'], 11688: ['    scanf ( STRING , & ID . ID , & ID . ID , & ID . ID )', ' expected  ;  before  }  token'], 11689: ['        printf ( STRING , ID , ID , ID , ID , ID ) ;', '  ID  undeclared '], 11690: ['\t{ if ( ID [ ID ] == ID [ CONST ] ) ; )', ' expected statement before  )  token'], 11691: [' scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 11692: ['   float ID = ID * ID / CONST ;                                ', ' redeclaration of  ID  with no linkage'], 11693: ['    ID = ID ;', '  ID  undeclared '], 11694: ['    for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 11695: ['    for ( ID = CONST ; ID < CONST , ID ++ ) {', ' expected  ;  before  )  token'], 11696: ['\t        { ID = ID + CONST }', ' expected  ;  before  }  token'], 11697: ['printf ( STRING , ID , ) ;', ' expected expression before  )  token'], 11698: ['    printf ( STRING )', ' expected  ;  before  return '], 11699: ['                            break', ' expected  ;  before  }  token'], 11700: ['        ID = ( ID * ) calloc ( sizeof ( ID ) ) ;', ' too few arguments to function  calloc '], 11701: ['    printf ( STRING , ID ( CONST ) )', ' expected  ;  before  return '], 11702: ['\t        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 11703: ['            if ( ID [ ID ] == ID [ ID ] ) {', '  ID  undeclared '], 11704: ['\t        ID += ID * pow ( ID - CONST ) ;', ' too few arguments to function  pow '], 11705: ['\t    ID += CONST', ' expected  ;  before  }  token'], 11706: ['        printf ( STRING )', ' expected  ;  before  else '], 11707: ['        for ( ; ID < ID ; ID ++ )', '  ID  undeclared '], 11708: ['            ID = CONST', ' expected  ;  before  }  token'], 11709: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 11710: ['    float ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 11711: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 11712: ['      if ( ( ID * ID + ID * ID ) = ( ID * ID ) )                     {', ' lvalue required as left operand of assignment'], 11713: ['\t        printf ( STRING , ) ;', ' expected expression before  )  token'], 11714: ['\t            printf ( STRING , ) ;', ' expected expression before  )  token'], 11715: ['\tscanf ( STRING , ID ) ; printf ( STRING , ID [ CONST ] )', ' expected  ;  before  for '], 11716: ['\t    ID = CONST', ' expected  ;  before  for '], 11717: ['}', ' expected declaration or statement at end of input'], 11718: ['\t    } ID [ ID ] = ID ;', ' subscripted value is neither array nor pointer nor vector'], 11719: ['  printf ( STRING , ID ) ;', '  ID  undeclared '], 11720: ['    int ID [ ] , ID , ID ;', ' array size missing in  ID '], 11721: ['    if ( ID [ ID ] > CONST && ID [ ID ] % CONST != CONST )', '  ID  undeclared '], 11722: ['        printf ( STRING )', ' expected  ;  before  }  token'], 11723: ['                        if ( ID [ ID + ID ] [ ID + ID - ID ] != CONST || ID [ ID + ID - ID [ ID + ID ] != CONST ] )', ' subscripted value is neither array nor pointer nor vector'], 11724: ['\t float ID = CONST * CONST * CONST ;                                                                                                            printf ( STRING ID float ) ; ', ' expected  )  before  ID '], 11725: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 11726: ['  ID = ID [ ID - ID - ] ;', ' expected expression before  ]  token'], 11727: ['        ID [ ID ] = char ( ID % CONST + CHARST ) ;', ' expected expression before  CHAR '], 11728: ['    ID . ID = ( ID . ID ) ^ ( CONST ) ;', ' invalid operands to binary ^ '], 11729: ['    if ( ID == ( ( ID - ID ) / ( ID * ID - ID * ID ) ) && ( ( ID * ID - ID * ID ) != = CONST ) && ID == ( ( ID - ID ) / ( ID * ID - ID * ID ) ) ) {', ' expected expression before  =  token'], 11730: ['}\treturn CONST ;', ' expected identifier or  (  before  return '], 11731: ['    static int ID = ID ;', ' initializer element is not constant'], 11732: ['                    if ( ID [ ID + ID - ID ] )', ' expected expression before  }  token'], 11733: ['        * ID = * ID -> ID ;', '  *head  is a pointer; did you mean to use  -> ?'], 11734: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 11735: ['         printf ( STRING , ( ID [ ID ] . ID -> ID ) ) ;', '  ID  undeclared '], 11736: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 11737: ['        for ( ID = ID + CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 11738: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 11739: ['        ID = ID / CONST', ' expected  ;  before  }  token'], 11740: ['printf ( STRING , CONST * ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 11741: ['\t    ID = ( ID ) % CONST ;', '  ID  undeclared '], 11742: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 11743: ['        for ( ID = ID , ID <= ID ; ID = ID + CONST )', ' expected  ;  before  )  token'], 11744: ['\tint ID = CONST ;', ' redefinition of  ID '], 11745: ['    return CONST ;', '  else  without a previous  if '], 11746: ['\tprintf ( STRING , ID )', ' expected  ;  before  ID '], 11747: [' scanf ( STRING , & ID ) ;', '  ID  undeclared '], 11748: ['float ID = ( CONST / CONST ) * ( ID ) * ( ( ID * ID * CONST ) - ( ID * ID ) ) ;', '  ID  undeclared '], 11749: ['        ID ( ID ) ;', ' too few arguments to function  ID '], 11750: ['    float ID = ( ID + ID + ID ) / CONST ;', ' redeclaration of  ID  with no linkage'], 11751: ['\t    printf ( STRING , ID [ ID ] , ID [ ID ] , ID [ ID ] )', ' expected  ;  before  }  token'], 11752: ['    int ID [ ID ] = { CHARST } ;', ' variable-sized object may not be initialized'], 11753: ['    if ( ID == CONST && ID [ CONST ] == CONST && ID [ CONST ] == CONST && ID [ CONST ] == CONST && ID [ CONST ] == CONST && ID [ CONST ] = CONST )', ' lvalue required as left operand of assignment'], 11754: ['for ( ID = CONST ; ID = < CONST ; ID + CONST ) {', ' expected expression before  <  token'], 11755: ['        { ID = CONST', ' expected  ;  before  ID '], 11756: ['\t       ID [ ID + CONST ] = CHARNST ;', ' empty character constant'], 11757: ['    ID = ID * ID ;', ' invalid operands to binary * '], 11758: ['printf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 11759: ['    printf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 11760: ['int ID ( int ID , int ID ) ;', ' expected identifier or  (  before  {  token'], 11761: ['            ID = ID + ID [ ID ] [ ID - CONST - ID + ID ] ;', '  ID  undeclared '], 11762: ['    printf ( STRING , ( ID [ ID ] - ID [ ID ] ) ) ;', '  ID  undeclared '], 11763: ['\tprintf ( STRING . , ID , ID , ID ) ;', ' expected identifier before  ,  token'], 11764: ['                ID = ID + CONST', ' expected  ;  before  }  token'], 11765: ['    if ID [ ID ] > ID [ CONST - ID + ID ]', ' expected  (  before  ID '], 11766: ['}', ' expected declaration or statement at end of input'], 11767: ['\t    if ( ID [ ID ] = ID )', ' assignment to expression with array type'], 11768: ['    if ( ID % ID == CONST )', '  ID  undeclared '], 11769: ['            ID [ ID [ ID ] ] = ID [ ID [ ID ] ] + CONST', ' expected  ;  before  ID '], 11770: ['        else continue ;', '  else  without a previous  if '], 11771: ['\telse ( )', ' expected expression before  )  token'], 11772: ['\telse printf ( STRING )', ' expected  ;  before  return '], 11773: ['        if ( ID % CONST = CONST )                                                                          ', ' lvalue required as left operand of assignment'], 11774: ['\tfor ( ; ( ID >= ( - CONST ) && ID = < CONST ) && ID < ID ; ID = ID + ( ( ID - ID ) / ID ) )', ' expected expression before  <  token'], 11775: ['    ID ( ID , CONST , CONST ) ;', ' too few arguments to function  ID '], 11776: ['    for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 11777: ['        printf ( STRING , ID )\t', ' expected  ;  before  }  token'], 11778: ['}', ' expected identifier or  (  before  }  token'], 11779: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 11780: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 11781: ['printf ( STRING )', ' expected  ;  before  return '], 11782: ['\tprintf ( STRING )', ' expected  ;  before  else '], 11783: ['    for ( ID = CONST ; ID [ ID ! ] = CHART ; ID ++ )', ' expected  ]  before  !  token'], 11784: ['    int ID = ID ^ CONST - CONST ID ;', ' invalid suffix "ac" on integer constant'], 11785: [' ID = ID * ID - CONST * ID * ID ;', '  ID  undeclared '], 11786: ['    printf ( STRING , ID , ID )', ' expected  ;  before  if '], 11787: ['    free ( ID , ID , ID ) ;', ' too many arguments to function  free '], 11788: ['    gets ( ID ) ;', '  ID  undeclared '], 11789: ['    char ID [ ] ;', ' array size missing in  ID '], 11790: ['            ID [ ID ] = int ID - CHARST ;', ' expected expression before  int '], 11791: ['printf ( STRING )', ' expected  ;  before  return '], 11792: ['    char ID [ ] = STRING', ' expected  ,  or  ;  before  printf '], 11793: ['    for ( ID = CONST , ID <= ID - CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 11794: ['    for ( ID = ( ( ID > CONST ) ? ID [ ID ] + CONST : CONST ) ; ID <= ID ; ID ++ )', '  ID  undeclared '], 11795: ['}', ' expected  ; , identifier or  (  before  int '], 11796: ['        for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 11797: ['          scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 11798: ['        scanf ( STRING , & ( ID + ID ) ) ;', ' lvalue required as unary  &  operand'], 11799: ['        if ( ID [ ID ] == ID [ CONST ] ) ', '  ID  undeclared '], 11800: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 11801: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 11802: ['  printf ( STRING ID [ CONST ] ) ;', ' expected  )  before  ID '], 11803: ['    printf ( STRING ! ) ;', ' expected  )  before  !  token'], 11804: ['    printf ( STRING )', ' expected  ;  before  return '], 11805: ['    if ( ID < CONST ) ID = ( - CONST ) * ID ;', '  ID  undeclared '], 11806: ['else ( ID == CONST )', ' expected  ;  before  {  token'], 11807: [' ID ( ID , ID , CONST )                                 ', ' expected  ;  before  return '], 11808: ['   if ( ID == CONST ) {', '  ID  undeclared '], 11809: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 11810: ['   ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 11811: ['ID = ID * pow ( ID , CONST )', ' expected  ;  before  ID '], 11812: ['int ID , ID , ;', ' expected identifier or  (  before  ;  token'], 11813: ['    char * ID = ID ( ID , CONST , ID - CONST ) ;', ' conflicting types for  ID '], 11814: ['        ID = return ( ID ( ID - CONST , ID ) + ID ( ID - CONST , ID - CONST ) ) ;', ' expected expression before  return '], 11815: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 11816: ['            ID = ID + ID [ CONST ] [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 11817: ['        printf ( STRING ) ; break ;', ' break statement not within loop or switch'], 11818: ['    if ( ID > CONST || ) {', ' expected expression before  )  token'], 11819: ['        {   ID = ID + ID - strlen ( ID )', ' expected  ;  before  }  token'], 11820: ['}', ' expected declaration or statement at end of input'], 11821: ['    ID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 11822: ['    while ( ( ID < ID ) && ( ID < ID + CONST ) && * ( ID < ID + CONST ) ) {', ' invalid type argument of unary  *  '], 11823: ['\tprintf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 11824: ['        while ( ID [ ID ] !=\\ CONST )', ' stray  \\  in program'], 11825: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11826: ['    scanf ( STRING & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 11827: ['       for ( ID = ID ; ID = > ID >= CONST ; ID -- )', ' expected expression before  >  token'], 11828: ['     ID = CONST , ID = CONST , ;', ' expected expression before  ;  token'], 11829: ['        else if ( ID [ ID ] == CHARST )', '  else  without a previous  if '], 11830: ['    scanf ( STRING , & CHART ) ;', ' lvalue required as unary  &  operand'], 11831: ['    if ( ( ID * ID + ID * ID < ID * ID ) || ( ID * ID + ID * ID < ID * ID ) || ( ID * ID + ID * ID < ID * ID ) ) )                        ', ' expected statement before  )  token'], 11832: ['    scanf ( STRING , & ID , & ID )', ' expected  ;  before  printf '], 11833: ['ID = ID - ID', ' expected  ;  before  else '], 11834: ['            printf ( STRING , * ( ID [ ID ] + ID ) )', ' expected  ;  before  }  token'], 11835: ['\t    printf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  }  token'], 11836: ['\t    ID = ID ( ID + ID , ID )', ' expected  ;  before  }  token'], 11837: ['    printf ( STRING , ID ) ; }  }', ' expected identifier or  (  before  }  token'], 11838: ['              printf ( STRING ID , ID , ID ) ;', ' expected  )  before  ID '], 11839: ['\t  printf ( STRING )', ' expected  ;  before  }  token'], 11840: ['\t    if ( ID % CONST == CONST ) && ( ID % CONST != CONST ) {', ' expected identifier before  (  token'], 11841: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 11842: ['        if ID [ ID ] = ID [ ID ] { printf ( STRING ) ; }', ' expected  (  before  ID '], 11843: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 11844: ['    printf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 11845: ['}', ' expected declaration or statement at end of input'], 11846: ['printf ( STRING , ID , ID , ID , ID )', ' expected  ;  before  return '], 11847: ['                 ID = CHARST', ' expected  ;  before  printf '], 11848: ['    ID = ID ( * ID ) ;', '  ID  undeclared '], 11849: ['    ID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 11850: ['    int CHART ;', ' expected identifier or  (  before  \\x6368 '], 11851: ['\tID = strlen ( ID [ ] ) ;', ' expected expression before  ]  token'], 11852: ['    if ( ID == CONST )', '  ID  undeclared '], 11853: ['    }', ' expected identifier or  (  before  }  token'], 11854: ['    if ( ID == ID / CONST ) printf ( STRING ) ; break ;', ' break statement not within loop or switch'], 11855: ['    int ID = ID ( & ID [ ] ) ;', ' expected expression before  ]  token'], 11856: ['          if ID > CONST', ' expected  (  before  ID '], 11857: ['        scanf ( STRING , * ( ID + ID ) ) ;', '  ID  undeclared '], 11858: ['     ID = ( ID == ID ) + ( ID == ID ) + ( ID == ID )', ' expected  ;  before  return '], 11859: ['    printf ( STRING )', ' expected  ;  before  while '], 11860: ['\t    printf ( STRING , ( ID - ID ) / ( ID * ID - ID * ID ) , ( ID - ID ) / ( ID * ID - ID * ID ) )', ' expected  ;  before  }  token'], 11861: ['\tprintf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 11862: ['    }', ' expected expression before  ->  token'], 11863: ['    ID [ ID ] = ID ;', '  ID  undeclared '], 11864: ['{ switch ( ID )', '  ID  undeclared '], 11865: ['    for ( int ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 11866: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 11867: ['    printf ( STRING , ( ID . ID . ID ) )', ' expected  ;  before  return '], 11868: ['int main ( ) { printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 11869: ['ID = CONST * ID * ( ID . pow ( ID , CONST ) ) ;', '  ID  undeclared '], 11870: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 11871: ['\t            ID ( ID , ID , ID , ID ) ;', ' too few arguments to function  ID '], 11872: ['        scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 11873: ['    printf ( STRING , ID . ID , ID . ID , ID . ID ) ;', '  ID  {aka  struct birth_data } has no member named  ID '], 11874: ['\tprintf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 11875: ['    if ( ID == ID || * ID = CHART ) return ;', ' lvalue required as left operand of assignment'], 11876: ['}', ' expected declaration or statement at end of input'], 11877: ['    scanf', ' expected  ;  before  return '], 11878: ['printf ( STRING , ID * ID * ID )           ', ' expected  ;  before  printf '], 11879: ['    printf ( STRING , ID * ID - CONST ID * ID ) ;', ' invalid suffix "a" on integer constant'], 11880: ['\twhile ( ID != CHART )', '  ID  undeclared '], 11881: ['                ID = ID + ID [ ID ] ;', '  ID  undeclared '], 11882: ['     if ( return ( ID ) )', ' expected expression before  return '], 11883: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 11884: ['\tfor ( ID = CONST ; ID = < ID ; ID ++ ) {', ' expected expression before  <  token'], 11885: ['  gets ( STRING , ID [ CONST ] ) ;', ' too many arguments to function  gets '], 11886: ['\t    ID = ID ( ID . ID , ID ) ;', ' incompatible types when assigning to type  struct node  from type  struct node * '], 11887: ['    printf ( STRING )', ' expected  ;  before  return '], 11888: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 11889: ['else { printf ( STRING , ID [ ID ] ) }', ' expected  ;  before  }  token'], 11890: ['    for ( ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 11891: ['    scanf ( STRING , & ID )', ' expected  ;  before  if '], 11892: ['        for ( ID = ID , ID <= CONST ; ID -- )', ' expected  ;  before  )  token'], 11893: ['}', ' expected declaration or statement at end of input'], 11894: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 11895: ['            continue', ' expected  ;  before  }  token'], 11896: ['    float ID = CONST * CONST * CONST ;', ' redeclaration of  ID  with no linkage'], 11897: ['    if ( ID < CONST ) break ;', ' break statement not within loop or switch'], 11898: ['    int ID = CONST ; ID = CONST ;', '  ID  undeclared '], 11899: ['    CHARCHARID ;', ' lvalue required as left operand of assignment'], 11900: ['        ID ++', ' expected  ;  before  }  token'], 11901: ['           if ( ( ID + ID ) ! <= ID || ( ID + ID ) ! <= ID || ( ID + ID ) ! <= ID )', ' expected  )  before  !  token'], 11902: ['for ( ID = ( ID - CONST ) ; ID >= ( ID * ID ) ) {', ' expected  ;  before  )  token'], 11903: ['\t   else', ' expected expression before  }  token'], 11904: ['        for ( ID = CONST ; <= ID - CONST ; ID ++ )', ' expected expression before  <=  token'], 11905: ['\t       printf ( STRING )', ' expected  ;  before  }  token'], 11906: ['\tID = ( ID - ID ) / ID', ' expected  ;  before  for '], 11907: ['         printf ( STRING , char ) ;', ' expected expression before  CHAR '], 11908: ['    if ( ID = ID )', '  ID  undeclared '], 11909: ['            {   ID [ ID + ID + CONST ] = CHART', ' expected  ;  before  printf '], 11910: ['        scanf ( STRING , & ID [ ID ] . ID , & ID [ ID ] . ID , & ID . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 11911: ['    }', ' expected  ; , identifier or  (  before  struct '], 11912: ['\tfor ( ID = CONST ; ID != CHARNST ; ID ++ ) {', ' empty character constant'], 11913: ['}', ' expected declaration or statement at end of input'], 11914: ['     while ( ID = ID )', ' expected expression before  int '], 11915: ['    if ( ID [ CONST ] == CHARST && ID = CONST ) printf ( STRING ) ;', ' lvalue required as left operand of assignment'], 11916: ['\tID = getchar ( CONST ) ;', ' too many arguments to function  getchar '], 11917: ['           { ID = ID }', ' expected  ;  before  }  token'], 11918: ['\t    for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 11919: ['{ ID = ID ( ) ;', ' too few arguments to function  ID '], 11920: ['\t    ID [ ID + CONST ] = CHART', ' expected  ;  before  }  token'], 11921: ['        ID = ID [ ID ] + ID [ ID ] - CHARST - CONST ;', '  ID  undeclared '], 11922: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 11923: ['    ID ( CONST , ID , ID ) = CONST ;', ' lvalue required as left operand of assignment'], 11924: ['    ID = ID', ' expected  ;  before  }  token'], 11925: ['\t    else { ID = ID + CONST }', ' expected  ;  before  }  token'], 11926: ['    if ID ( ID , ID , ID ) {', ' expected  (  before  ID '], 11927: ['    ID . ID = union ( ID . ID , ID . ID ) ;', ' expected expression before  union '], 11928: ['    if ( ID % CONST = CONST )', ' lvalue required as left operand of assignment'], 11929: ['    return ID ( ID , ID , ID , ID + CONST , ID ) || ID ( ID , ID , ID , ID , ID + CONST )', ' expected  ;  before  }  token'], 11930: ['            printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 11931: [' else if ( ID == ID && ID != ID ) ', ' expected expression before  else '], 11932: ['\tprintf ( STRING CHARNG . ) ;', ' expected  )  before  \\x6c696e65 '], 11933: ['        ID = ID / CONST', ' expected  ;  before  }  token'], 11934: ['\tscanf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 11935: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 11936: ['int ID ( ID [ ] , int ID ) {', ' unknown type name  ID '], 11937: ['    while ( ID != ID && ID < CONST && ID = CHART ) {', ' lvalue required as left operand of assignment'], 11938: ['    for ( int ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 11939: ['    if ( ID [ ID - CONST ] >= ID && ID [ ID - CONST ] != ID )', '  ID  undeclared '], 11940: ['\t for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 11941: ['   int ID = ;', ' expected expression before  ;  token'], 11942: ['     ID [ ID ] = ID [ ID - ID - CONST ]', ' expected  ;  before  }  token'], 11943: ['\t    if ( ID [ ID ] == CHART ) {', '  ID  undeclared '], 11944: ['    int ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 11945: ['     ID [ ID ] = CHART', ' expected  ;  before  printf '], 11946: ['printf ( STRING )\t', ' expected  ;  before  return '], 11947: ['    printf ( STRING , ID * ID )', ' expected  ;  before  for '], 11948: ['printf ( STRING , CONST / CONST * ( ID - CONST ) + CONST )', ' expected  ;  before  return '], 11949: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 11950: ['printf ( STRING )', ' expected  ;  before  return '], 11951: ['        ID [ ID ] = ( int * ) ID ( ID * sizeof ( int ) ) ;', '  ID  undeclared '], 11952: ['        if ( ID == CHARST || ID = CHART ) break ;', ' lvalue required as left operand of assignment'], 11953: ['}', ' expected declaration or statement at end of input'], 11954: ['    printf ( STRING , ID )', ' expected  ;  before  scanf '], 11955: ['}', ' expected identifier or  (  before  }  token'], 11956: ['    printf ( STRING , * * ( ID ) ) ;', ' expected expression before  ID  token'], 11957: ['\tprintf ( STRING ID - CHARST ) ;', ' expected  )  before  ID '], 11958: ['       for ( ID = CONST ; ID < ID ) {', ' expected  ;  before  )  token'], 11959: ['    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 11960: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 11961: ['\tID = ID * ID ^ ID ;', ' invalid operands to binary ^ '], 11962: ['        printf ( STRING )', ' expected  ;  before  }  token'], 11963: ['\tfloat ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 11964: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 11965: ['}', ' expected declaration or statement at end of input'], 11966: ['        } else ID = CONST ; printf ( STRING , ID )', ' expected  ;  before  }  token'], 11967: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 11968: ['   printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 11969: ['    if ( ID * ID = ID * ID ) {', ' lvalue required as left operand of assignment'], 11970: ['\tprintf ( STRING , ID . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 11971: ['    break', ' expected  ;  before  printf '], 11972: ['      if ( ID % ID = CONST )', ' lvalue required as left operand of assignment'], 11973: ['    CHARST = ( ID % CONST == CONST || ID == CONST ) ;             ', ' lvalue required as left operand of assignment'], 11974: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 11975: ['\t    } printf ( STRING ID [ ID - CONST ] ) ;', ' expected  )  before  ID '], 11976: ['\tscanf ( STRING , & ID )', ' expected  ;  before  return '], 11977: ['\tfor ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 11978: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 11979: ['}', ' expected statement before  ]  token'], 11980: ['    float ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 11981: ['\t  printf ( STRING . ID ) ;', ' request for member  ID  in something not a structure or union'], 11982: ['                printf ( STRING )', ' expected  ;  before  }  token'], 11983: ['        printf ( STRING , [ ID ] ) ;', ' expected expression before  [  token'], 11984: ['        ID = ( ID * CONST ) + ID % % CONST ;', ' expected expression before  %  token'], 11985: ['        if ( ID [ ID - CONST ] != ID [ ID - CONST ] )', '  ID  undeclared '], 11986: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 11987: ['\t} printf ( STRING )', ' expected  ;  before  return '], 11988: ['\tif ( ID [ CONST ] == CONST )', ' expected expression before  else '], 11989: ['    printf ( STRING CONST ) ;', ' expected  )  before numeric constant'], 11990: ['        printf ( STRING , ID )', ' expected  ;  before  return '], 11991: ['        printf ( STRING , & ID [ ID ] ) ; }', ' expected identifier or  (  before  }  token'], 11992: ['        ID = ++ ;', ' expected expression before  ;  token'], 11993: ['   printf ( ID ) ;', ' incompatible type for argument 1 of  printf '], 11994: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 11995: ['        break ; }', ' break statement not within loop or switch'], 11996: ['\t printf ( STRING , ID )', ' expected  ;  before  }  token'], 11997: ['}', ' expected  ; , identifier or  (  before  int '], 11998: ['\t    ID = ID [ ID ] < ID ? ID [ ID ] : ;', ' expected expression before  ;  token'], 11999: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 12000: ['if ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST && ID [ ID + CONST ] <= CHARST && ID [ ID + CONST ] >= CHARST && ID [ ID + CONST ] == ID [ ID + CONST ] - CONST ) )    ', ' expected statement before  )  token'], 12001: ['\telse printf ( STRING ) ;', '  else  without a previous  if '], 12002: ['        printf ( STRING )', ' expected  ;  before  }  token'], 12003: ['\t} while ( ID [ ID ] != / CONST ) ;', ' expected expression before  ID  token'], 12004: ['    for ( ID = CONST ; ID < ID / CONST ; ID ++ ) {', ' invalid operands to binary / '], 12005: ['}', ' expected identifier or  (  before  }  token'], 12006: ['        return CONST', ' expected  ;  before  else '], 12007: ['              ID == ID ;', '  ID  undeclared '], 12008: ['    printf ( STRING , ID STRING , ID ) ;', ' expected  )  before string constant'], 12009: ['int ID = ID - ID ;', ' redeclaration of  ID  with no linkage'], 12010: ['    char ID [ ] ;', ' array size missing in  ID '], 12011: ['        ID += ID [ ID ] ;', '  ID  undeclared '], 12012: ['printf ( STRING , ID , ID , ID , ) ;    return CONST ;', ' expected expression before  )  token'], 12013: ['    int ID [ ID ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 12014: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 12015: ['int main ( ) {', ' two or more data types in declaration specifiers'], 12016: ['    char ID [ ] = STRING ;', ' redeclaration of  ID  with no linkage'], 12017: ['    scanf ( STRING , ID [ ] ) ;                 ', ' expected expression before  ]  token'], 12018: ['            printf ( STRING , ID ) ;', '  ID  undeclared '], 12019: ['\tif ( ID = ID ) {', '  ID  undeclared '], 12020: ['            ID [ ID ] = ID [ ID - CONST - ID ]', ' expected  ;  before  }  token'], 12021: ['    ( ID > ID ) ? ID = ID : ID = ID ;', ' lvalue required as left operand of assignment'], 12022: ['\t          ID = ID [ ID - CONST ] [ ID ]', ' expected  ;  before  break '], 12023: ['    ID = CONST', ' expected  ;  before  while '], 12024: ['\tfor ( ID >= CONST ; ID <= ID - CONST )', ' expected  ;  before  )  token'], 12025: ['                *\x01 ( ID + ID ) = ID ;', ' stray  \\1  in program'], 12026: ['            ID [ ID ] == ID [ ID ] ID ++ ;', ' expected  ;  before  ID '], 12027: ['    for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 12028: ['           ( ID = CONST * ID * ID ) ;', '  ID  undeclared '], 12029: ['    else if ( ID != CONST ) return ID ( ID , ID - CONST ) ;', '  else  without a previous  if '], 12030: ['    else if ( ID != ID = ID )', ' lvalue required as left operand of assignment'], 12031: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 12032: ['\tprintf ( STRING , ID [ CONST ] [ CONST ] )', ' expected  ;  before  return '], 12033: ['ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 12034: ['\tint ID = ( ID + CONST ) CONST ;', ' expected  ,  or  ;  before numeric constant'], 12035: ['            scanf ( STRING , & ID [ ID ] [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 12036: ['        if ( ID [ ID ] == ID ) printf ( STRING , ID )', ' expected  ;  before  }  token'], 12037: ['    ID . ID = ID [ ID . ]', ' expected identifier before  ]  token'], 12038: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 12039: ['\tif ( ID != ID [ ID ] ) printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 12040: ['    if ID == ID - CONST ;', ' expected  (  before  ID '], 12041: ['}', ' expected declaration or statement at end of input'], 12042: ['    else {', '  else  without a previous  if '], 12043: ['    { ID [ ID ] [ ] = ( int * ) ( malloc ( ( ID ) * sizeof ( int ) ) ) ;', ' expected expression before  ]  token'], 12044: [' return ID ( ID , ID - CONST , ID , ID ) :                   ', ' expected  ;  before  :  token'], 12045: ['   scanf ( STRING , & CHARST ) ;', ' lvalue required as unary  &  operand'], 12046: ['        for ( int ID = CONST ; ID != ID ; ID ++ ) {', '  ID  undeclared '], 12047: ['            printf ( STRING , ID . ID [ ] ) ;', ' expected expression before  ]  token'], 12048: ['     printf ( STRING , ID )   ', ' expected  ;  before  return '], 12049: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 12050: ['    ID , ID , ID , ID )', ' expected  ;  before  return '], 12051: ['}', ' expected declaration or statement at end of input'], 12052: ['\t    ID = ( - ID ) + ID', ' expected  ;  before  else '], 12053: ['        ID [ ID ] = ID ( ID [ ID ] , ID [ ID ] ) ;', ' too few arguments to function  ID '], 12054: ['printf ( STRING )', ' expected  ;  before  }  token'], 12055: ['}', ' expected declaration or statement at end of input'], 12056: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 12057: ['\tprintf ( STRING , ID [ ID - CONST ] [ ID - CONST ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 12058: ['\t    ID = ( ID * ID ( ID - ID ) ) / ( ( ID * ID ) - ( ID * ID ) ) ;', ' called object  ID  is not a function or function pointer'], 12059: ['}', ' expected  ; , identifier or  (  before  int '], 12060: ['\tscanf ( STRING , & ID , & ID )', ' expected  ;  before  ID '], 12061: ['        printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 12062: ['}', ' expected declaration or statement at end of input'], 12063: ['    int ID = ( ID + ID ) / CONST', ' expected  ,  or  ;  before  if '], 12064: ['\t                } printf ( STRING )', ' expected  ;  before  }  token'], 12065: ['        if ( ( ID . ID . ID <= ID . ID . ID && ID . ID . ID <= ID . ID . ID ) && ID . ID . ID <= ID . ID . ID && ID . ID . ID <= ID . ID . ID ) )', ' expected statement before  )  token'], 12066: ['        for ( ID = CONST ; ID != CONST ; ID ++ ) printf ( STRING , ID [ ID ] [ ID ] ) ; ', '  ID  undeclared '], 12067: ['    printf ( STRING', ' expected  )  before numeric constant'], 12068: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 12069: ['    if ( ( ID * ID ) = ( ID * ID ) ) {', ' lvalue required as left operand of assignment'], 12070: ['\tif', ' expected  (  before  return '], 12071: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 12072: ['    if ( ID + ID = ID / CONST ) {', ' lvalue required as left operand of assignment'], 12073: ['    scanf ( STRING , & ID , & ID ) ;', '  ID  undeclared '], 12074: ['int ID ( int * ID , , int ID , int ID ) {', ' expected declaration specifiers or  ...  before  ,  token'], 12075: ['    ID ( ID , CONST , CONST , ID - CONST , ID - CONST )', ' expected  ;  before  ID '], 12076: ['        if ( * ( ID + ID ) <= * ( ID + ID - CONST ) && * ( ID + ID - CONST ) >= * ( ID + ID - CONST ) )', '  ID  undeclared '], 12077: ['int ID = ID ( ID ID , ID ID ) ;', ' expected expression before  ID '], 12078: ['  printf ( STRING , CONST ID ) ;', ' invalid suffix "fk" on floating constant'], 12079: ['\t    putchar ( ID [ ID ] ) ; ID ++ ;', '  ID  undeclared '], 12080: ['    printf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 12081: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 12082: ['              else ( )', ' expected expression before  )  token'], 12083: ['\t    printf ( STRING ID [ ID ] ) ; ID ++ ;', ' expected  )  before  ID '], 12084: ['\t  for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 12085: ['  printf ( STRING , CONST )', ' expected  ;  before  return '], 12086: ['\tfloat ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 12087: ['        printf ( STRING ID -> ID ) ;', ' expected  )  before  ID '], 12088: ['    scanf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 12089: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 12090: ['            if ( ID + ID = ID + ID )', ' lvalue required as left operand of assignment'], 12091: ['int ID ( int ID , int ID , ID [ ID ] [ ID ] )', ' unknown type name  ID '], 12092: ['        ID = ID * ( CONST ID ) + ( float ) ( ID [ ID ] - CHARST ) ;', ' invalid suffix "f" on integer constant'], 12093: ['        if ( ID == CHARST )', ' expected expression before  }  token'], 12094: ['    printf ( STRING )', ' expected  ;  before  }  token'], 12095: ['\t      CHART printf ( STRING , ID ) ;', ' expected  ;  before  printf '], 12096: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 12097: ['    for ( int ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 12098: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 12099: ['    for ( ID = ID ; ID < CONST ; ID ++ ) {', '  ID  undeclared '], 12100: ['    printf ( STRING / ID ) ;', '  ID  undeclared '], 12101: ['        ID ++', ' expected  ;  before  }  token'], 12102: ['\tID = ID ;', '  ID  undeclared '], 12103: ['for ( ID = CONST ; ID <= ID ; ID = ID + CONST ) {', '  ID  undeclared '], 12104: ['           printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 12105: ['printf ( STRING , ID )', ' expected  ;  before  return '], 12106: ['             scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 12107: ['      break ;', ' break statement not within loop or switch'], 12108: ['    if ( CONST <= ID [ ID ] && ID [ ID ] <= CONST && )', ' expected expression before  )  token'], 12109: ['          ID = ID }', ' expected  ;  before  }  token'], 12110: ['            ID = ID', ' expected  ;  before  }  token'], 12111: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 12112: ['    ID = CONST ;', '  ID  undeclared '], 12113: ['    putchar ( ID [ CONST ] )', ' expected  ;  before  return '], 12114: ['        scanf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 12115: ['    printf ( STRING , ID , ID             ID , ID , ID ) ;', ' expected  )  before  ID '], 12116: ['    ID = ( ID + CONST ) / CONST', ' expected  ;  before  while '], 12117: ['                    ID = ID [ ID ] * ID [ CONST ]', ' expected  ;  before  }  token'], 12118: ['    scanf ( STRING , & ID & ID & ID & ID & ID & ID ) ;                  ', ' invalid operands to binary & '], 12119: ['const float ID = CONST', ' expected  ,  or  ;  before  int '], 12120: ['     scanf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 12121: ['        scanf ( STRING , & ID [ ID ] . ID , & ID [ ID ] . ID ) ;', '  ID  undeclared '], 12122: ['        return = CONST ;', ' expected expression before  =  token'], 12123: ['\tint ID = CONST ;', ' redefinition of  ID '], 12124: ['\treturn CONST', ' expected  ;  before  }  token'], 12125: ['\t    ID = ID + ID [ ID - ID ]          ', ' expected  ;  before  }  token'], 12126: ['    for ( ID = CONST ; ID !=\\ CONST ; ID ++ )', ' stray  \\  in program'], 12127: ['    printf ( STRING , ID )', ' expected  ;  before  for '], 12128: ['         ID ( ID , CONST , ID ) ;', ' too few arguments to function  ID '], 12129: ['}', ' expected declaration or statement at end of input'], 12130: ['        if ( ( ( ID [ CONST ] >= CHARST && ID [ CONST ] <= CHARST ) && ( ID [ CONST ] >= CHARST && ID [ CONST ] ) <= CHARST ) ) && ( ( ID [ CONST ] >= CONST && ID [ CONST ] <= CONST ) )', ' expected identifier before  (  token'], 12131: ['    for ( ID = CONST ; ID <= sqrt ( ID ) ; ID ++ ) {', '  ID  undeclared '], 12132: ['        printf ( STRING )', ' expected  ;  before  else '], 12133: ['\tscanf ( STRING , ID , & ID ) ;', '  ID  undeclared '], 12134: ['float ID = CONST / CONST * ID * ID * ID * ;', ' expected expression before  ;  token'], 12135: ['            printf ( STRING )', ' expected  ;  before  ID '], 12136: ['\t      scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 12137: ['\tfor ( ID = CONST ; ID = < ID ; ID ++ ) {', ' expected expression before  <  token'], 12138: ['\t    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 12139: ['    else if ', ' expected  (  before  ID '], 12140: ['    else if ( ID == ID != ID , ID != ID == ID , ID == ID != ID , )', ' expected expression before  )  token'], 12141: [' printf ( STRING , ) ;', ' expected expression before  )  token'], 12142: ['    } while ( ID < ID && ID < ID )', ' expected  ;  before  printf '], 12143: ['        scanf ( STRING , & ( ID [ ID ] . ID ) , & ( ID [ ID ] . ID ) , & ( ID [ ID ] . ID ) )', ' expected  ;  before  }  token'], 12144: ['    printf ( STRING , / sqrt ( ID ) ) ;', ' expected expression before  ID  token'], 12145: ['      printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 12146: ['        break ;', ' break statement not within loop or switch'], 12147: ['}', ' expected declaration or statement at end of input'], 12148: ['      ID * ID , ;         ', ' expected identifier or  (  before  ;  token'], 12149: ['\t    printf ( STRING . ID ) ;', ' request for member  ID  in something not a structure or union'], 12150: ['\tfor ( ID = ID + ID - CONST - ; ID >= ID ; ID ++ ) {', ' expected expression before  ;  token'], 12151: ['\tscanf ( STRING ID ) ;', ' expected  )  before  ID '], 12152: ['               ID = ID + CONST', ' expected  ;  before  }  token'], 12153: ['\t          if ( ID [ CONST ] !=  CONST ) printf ( STRING ) ;', '  ID  undeclared '], 12154: ['    char ID [ CONST ] ; int ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  scanf "], 12155: ['    ID = ID ( ID ) ;', ' called object  ID  is not a function or function pointer'], 12156: ['\t    ID = ID', ' expected  ;  before  }  token'], 12157: ['                    ID = CONST', ' expected  ;  before  ID '], 12158: ['        else continue ;', '  else  without a previous  if '], 12159: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 12160: ['         printf ( STRING )', ' expected  ;  before  }  token'], 12161: ['\t        if ( ID + ID = ID && ID ( ID ) == CONST && ID ( ID ) == CONST ) {', ' lvalue required as left operand of assignment'], 12162: ['        printf ( STRING , * ID [ ID ] ) ;', ' invalid type argument of unary  *  '], 12163: ['        if ( ID != CONST )', '  ID  undeclared '], 12164: ['    ID = CONST', ' expected  ;  before  scanf '], 12165: ['                        break', ' expected  ;  before  }  token'], 12166: ['    for ( ID = CONST ; ID < ID + CONST ; ID ++ ) printf ( STRING , ID [ ID ] )', ' expected  ;  before  return '], 12167: ['    printf ( STRING , ID , ID )', ' expected  ;  before  return '], 12168: ['printf ( STRING ) ', ' expected  ;  before  return '], 12169: ['    return ID ( ID , ID , ID , ID )', ' expected  ;  before  }  token'], 12170: ['        printf ( STRING , ( ID . ID ) [ ID ] ) ;', ' request for member  ID  in something not a structure or union'], 12171: ['float CONST * ID * ID ;', ' expected identifier or  (  before numeric constant'], 12172: ['printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 12173: ['    if ( * ID == CHART ) ID ;', '  ID  undeclared '], 12174: ['     ( ID + ID ) = ID ;', ' lvalue required as left operand of assignment'], 12175: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 12176: ['    else', '  else  without a previous  if '], 12177: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 12178: ['scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 12179: ['}', ' expected declaration or statement at end of input'], 12180: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 12181: ['    return ; }', ' expected identifier or  (  before  }  token'], 12182: ['\tprintf ( STRING , ID , ID , ID , ID , , ID , ID , ID ) ;', ' expected expression before  ,  token'], 12183: ['            return ID ( ID - CONST , ID + ID [ ID - CONST ] , ID - ID [ ID - CONST ] ) ', ' expected  ;  before  }  token'], 12184: ['           else ID ( STRING ) ;', '  else  without a previous  if '], 12185: ['    for ( int ID = CONST ID ; ID < CONST ; ID ++ ) ', ' invalid suffix "x1" on floating constant'], 12186: ['\tID = ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 12187: ['      printf ( STRING ID ) ;', ' expected  )  before  ID '], 12188: ['    else', '  else  without a previous  if '], 12189: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 12190: ['                ID = ID + ID    ', ' expected  ;  before  }  token'], 12191: ['    for ( ID = CONST ; ID < ID - CONST ; ID ++ ) {', '  ID  undeclared '], 12192: ['    ID = CONST * ID * ID', ' expected  ;  before  printf '], 12193: ['\t    if ( ID [ ID ] == CHARNST )', ' empty character constant'], 12194: ['   continue', ' expected  ;  before  }  token'], 12195: ['    }', ' expected identifier or  (  before  }  token'], 12196: ['      printf ( STRING )', ' expected  ;  before  }  token'], 12197: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 12198: ['\t    else if ( ID == CHARST )', ' expected expression before  }  token'], 12199: ['\t    if ( ID [ ID ] != ID [ ] )', ' expected expression before  ]  token'], 12200: ['            for ( ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 12201: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 12202: ['    if ( ID = CONST || ID = ID - CONST ) {', ' lvalue required as left operand of assignment'], 12203: ['\tscanf ( STRING , & ID , & ID )', ' expected  ;  before  ID '], 12204: ['        ( * ID + ID ) = CONST ;', ' lvalue required as left operand of assignment'], 12205: ['else if ( ID <= ( ID + CONST ) / CONST && ID <= ( ID - CONST ) / CONST + ID && ID >= ( ID + CONST ) / CONST - ID )', '  else  without a previous  if '], 12206: ['    for ( ID = CONST ; ID <= ID )', ' expected  ;  before  )  token'], 12207: ['\twhile ( ID != = ID ) {', ' expected expression before  =  token'], 12208: ['            printf ( STRING , ID - CONST )', ' expected  ;  before  }  token'], 12209: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 12210: ['    ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 12211: ['    int ID [ CONST ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 12212: ['      ID [ ID ] = CHART ;', '  ID  undeclared '], 12213: ['          ID ++ ;', '  ID  undeclared '], 12214: ['if ( ID ( ID [ ] , ID [ ] ) == CONST ) {', ' expected expression before  ]  token'], 12215: ['\t   for ( int ID = CONST ; ID < ID - ID + CONST ) { ', ' expected  ;  before  )  token'], 12216: ['    ID ( ID [ ] , CONST , ID - CONST ) ;', ' expected expression before  ]  token'], 12217: ['        printf ( STRING , ID [ ID ] , ID [ ID ] )', ' expected  ;  before  }  token'], 12218: ['\tprintf ( STRING , ID / CONST ) ;', '  ID  undeclared '], 12219: ['\t} printf ( STRING ) }', ' expected  ;  before  }  token'], 12220: ['    return CONST', ' expected  ;  before  }  token'], 12221: ['        ID [ ID ] = ID - ID ;', ' subscripted value is neither array nor pointer nor vector'], 12222: ['\tint ID = CONST ;', ' redeclaration of  ID  with no linkage'], 12223: ['printf ( STRING , ID { ID } ) ;', ' expected  )  before  {  token'], 12224: ['    if ( ID == ID )', '  ID  undeclared '], 12225: ['\t  if ', ' expected  (  before  return '], 12226: ['       printf ( STRING )', ' expected  ;  before  }  token'], 12227: ['    for ( ID = CONST , ID < ID ( ID ) ; ID ++ ) {', ' expected  ;  before  )  token'], 12228: ['    else if ( ( ID >= CHARST ) && ( ID = < CHARST ) )', ' expected expression before  <  token'], 12229: ['    if ', ' expected  (  before  return '], 12230: ['    printf ( STRING ID double ID & STRING ) ;', ' expected  )  before  ID '], 12231: ['    ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 12232: ['    ID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 12233: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 12234: ['    }', ' expected declaration or statement at end of input'], 12235: ['                ID ( ID + ID , ID + ID - CONST )', ' expected  ;  before  printf '], 12236: ['\t   if ( ID ( ID , ID ) ) break ;                       ', '  ID  undeclared '], 12237: ['    for ( int ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 12238: ['\tfor ( ID = CONST ; ID , = ( ID / CONST ) ; ID ++ ) {', ' expected expression before  =  token'], 12239: ['      printf ( STRING , ID CONST ) ;                                 ', ' expected  )  before numeric constant'], 12240: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 12241: ['printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 12242: ['        if ( ID [ ID ] == ID )', '  ID  undeclared '], 12243: ['\tscanf ( STRING , * ID ) ;', ' invalid type argument of unary  *  '], 12244: ['}', ' expected declaration or statement at end of input'], 12245: ['ID = ID % ID', ' expected  ;  before  return '], 12246: ['    ID = CONST ID ;', ' invalid suffix "n" on integer constant'], 12247: ['        printf ( STRING )', ' expected  ;  before  return '], 12248: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 12249: ['            if ( ID >= ID ) printf ( STRING , CHARST + ( CHARST - ID ) ) ;', '  ID  undeclared '], 12250: [' ID = ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ;', '  ID  undeclared '], 12251: ['        while ( ID < ID ) {', '  ID  undeclared '], 12252: ['}', ' expected declaration or statement at end of input'], 12253: ['        ID -> ID = ID -> ID ;                                      ', '  ID  undeclared '], 12254: ['        scanf ( STRING , & ID )', ' expected  ;  before  }  token'], 12255: ['\tchar * ID = ID ;', '  ID  undeclared '], 12256: ['     int ID [ ] [ ID ] ;', ' array size missing in  ID '], 12257: ['\t{ printf ( STRING , ID [ ID ] ) } ;', ' expected  ;  before  }  token'], 12258: ['         if ( ID [ ID ] [ ID ] != CONST && )', ' expected expression before  )  token'], 12259: ['    int ID = ID ( )', ' expected  ,  or  ;  before  printf '], 12260: ['    if ( ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) || ( ID [ ID ] <= CHARST && ID [ ID ] >= CHARST ) ) {', '  ID  undeclared '], 12261: ['   printf ( STRING ID ( CONST , CONST ) ) ;', ' expected  )  before  ID '], 12262: ['if ( ( ( ( ID != ID ) && ( ID == ID ) && ( ID == ID ) ) || ( ( ID == ID ) && ( ID != ID ) && ( ID == ID ) ) || ( ( ID != ID ) && ( ID == ID ) && ID == ID ) ) ) ) { printf ( STRING ) ; }', ' expected statement before  )  token'], 12263: ['        ID = ID [ ID ] [ ] ;', ' expected expression before  ]  token'], 12264: ['ID = ID * ( ID ^ CONST ) ;', ' invalid operands to binary ^ '], 12265: ['free ( ID [ ID ] )', ' expected  ;  before  return '], 12266: ['printf ( STRING ID ID STRING ) ;\t', ' expected  )  before  ID '], 12267: ['    return ID ( ID + CONST , ID + ID [ ID ] )', ' expected  ;  before  }  token'], 12268: ['printf ( STRING , ) ;', ' expected expression before  )  token'], 12269: ['\tfor ( ID = CONST ; ID <= ( ID - CONST ) , ID ++ )', ' expected  ;  before  )  token'], 12270: ['\tprintf ( STRING , ID ( ID , ID [ CONST ] , ID - ID [ ] ) == CONST ? STRING : STRING ) ;', ' expected expression before  ]  token'], 12271: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 12272: ['    printf ( STRING , ) ;', ' expected expression before  )  token'], 12273: ['ID ( ID , ID , ID )', ' expected  ;  before  }  token'], 12274: ['           scanf ( STRING , * ( ID + ID ) + ID ) ;', '  ID  undeclared '], 12275: ['    printf ( STRING , ID , ID + CONST , ID + CONST ) ;', '  ID  undeclared '], 12276: ['printf ( STRING )', ' expected  ;  before  return '], 12277: ['int ID ( ID [ ] )', ' unknown type name  ID '], 12278: ['    {   printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 12279: ['\t        scanf ( STRING , ID [ ID ] , [ ID ] ) ;', ' expected expression before  [  token'], 12280: ['    printf ( STRING . ) ;', ' expected identifier before  )  token'], 12281: ['        if ( ID ( ID [ ] ) )', ' expected expression before  ]  token'], 12282: ['        ID = ( * ( ID + ID ) ) . ID ;', '  ID  undeclared '], 12283: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 12284: ['        if ( ID == CHARST && ID == CHARST ) { ID ( ID , ID ) ; ID ( ID , ID ) ; }', '  ID  undeclared '], 12285: ['        } else  ( ( ID [ ID [ ID ] ] < ID [ ID [ ID ] - CONST ] ) && ( ID [ ID [ ID ] + CONST ] ) > ID [ ID [ ID ] ] ) printf ( STRING ) ;', ' expected  ;  before  printf '], 12286: ['scanf ( STRING , & ID & ID , & ID ) ;', ' invalid operands to binary & '], 12287: ['\tif ( ID [ ID ] > CONST ) { printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 12288: ['    printf ( STRING , ++ ID [ CONST ] , ++ ID [ CONST ] , ++ ID [ CONST ] ++ ) ;', ' lvalue required as increment operand'], 12289: ['            ID += ID [ ID ] [ ID ] ; printf ( STRING , ID )', ' expected  ;  before  }  token'], 12290: ['\t        ID = putchar ( ) ;', ' too few arguments to function  putchar '], 12291: ['\t    ID = ID + ID [ ID ] * ID [ ID ] * ID [ ID ] ; ID += CONST', ' expected  ;  before  }  token'], 12292: ['    ID = ( ID - ID ) ( ID - ID ) ;', ' called object is not a function or function pointer'], 12293: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 12294: ['        printf ( STRING ID ) ;', ' expected  )  before  ID '], 12295: ['    else printf ( STRING )', ' expected  ;  before  return '], 12296: ['\tprintf ( STRING , ID , ID )', ' expected  ;  before  return '], 12297: ['}', ' expected declaration or statement at end of input'], 12298: ['\tID = ( CONST / CONST ) ( ID ) ( ( ID * ID ) + ( ID * ID ) ) ;', ' called object is not a function or function pointer'], 12299: ['           float ID = abs ( ID ) + abs ( ID ) + ID ( ( ID * ID ) + ( ID * ID ) ) ) ;', ' expected  ,  or  ;  before  )  token'], 12300: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 12301: ['\tint ID [ CONST ] = { CHARST , CHARST , CHARST , CHARST , CHARST }', ' expected  ,  or  ;  before  scanf '], 12302: ['    printf ( STRING ID / STRING ) ;    ', ' expected  )  before  ID '], 12303: ['    int ID = strlen ( ID [ ] ) ;', ' expected expression before  ]  token'], 12304: ['}', ' expected declaration or statement at end of input'], 12305: ['\tscanf ( STRING , ID , & ID , & ID , ID ) ;', '  ID  undeclared '], 12306: ['    scanf ( STRING , ID )', ' expected  ;  before  return '], 12307: ['  {  ID ++', ' expected  ;  before  ID '], 12308: ['    printf ( STRING )', ' expected  ;  before  return '], 12309: ['\tID [ ID ] = ID', ' expected  ;  before  }  token'], 12310: ['        if ( ID [ ID [ ID ] < ID [ ID [ ID - CONST ] ] && ID [ ID [ ID ] ] < ID [ ID [ ID + CONST ] ] )', ' expected  ]  before  )  token'], 12311: ['    int ID , ID ID , ID , ID ;', " expected  = , ',',  ; ,  asm  or  __attribute__  before  ID "], 12312: ['        if ( ID == ID || ID = ID )', ' lvalue required as left operand of assignment'], 12313: ['    printf ( STRING )', ' expected  ;  before  return '], 12314: ['\tint ID = ID * ID * ID + ID * ID * ID + ID * ID * ID + ID * ID * ID ;', ' redeclaration of  ID  with no linkage'], 12315: ['                if ID = ID + ID ;', ' expected  (  before  ID '], 12316: ['            ID -= ID', ' expected  ;  before  }  token'], 12317: ['{   int ID ;', '  ID  redeclared as different kind of symbol'], 12318: ['    ID ( ID [ ] ) ;', ' expected expression before  ]  token'], 12319: ['    ID = ( ID ( CONST + ( ( ID * ID ) / CONST ) ) ) ;', ' called object  ID  is not a function or function pointer'], 12320: ['            if ( int ( CHARST + ID + ID ) > int ( CHARST ) )', ' expected expression before  int '], 12321: ['          ID --', ' expected  ;  before  }  token'], 12322: ['     ID ( ID , ID , ID , ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 12323: ['        ID = ID + ID [ ] [ ID ] ;', ' expected expression before  ]  token'], 12324: ['\t{ ID = CONST', ' expected  ;  before  ID '], 12325: ['            {   ID = ID', ' expected  ;  before  ID '], 12326: ['       if ( ID [ ID ] = CHARNST )  printf ( STRING , ID [ ID - CONST ] ) ;', ' empty character constant'], 12327: ['       ID ( ID , ID + ID , ID ) ;', ' too few arguments to function  ID '], 12328: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 12329: ['    if ( ID % CONST = CONST ) {', ' lvalue required as left operand of assignment'], 12330: ['             break ;            ', ' break statement not within loop or switch'], 12331: ['        return ( ID ( ID , ID , ID , ID + CONST , ID + CONST , ID , CONST ) + ID ( ID , ID , ID , ID + CONST , ID , CONST ) ) ;', ' too few arguments to function  ID '], 12332: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 12333: ['    float ID = ID ^ CONST - CONST * ID * ID ;', '  ID  undeclared '], 12334: ['\t    if ( ID [ ID ] == CHART ) )', ' expected statement before  )  token'], 12335: ['    scanf ( STRING , & ( ID -> ID ) , & ( ID -> ID ) , & ( ID -> ID ) ) ; )', ' expected statement before  )  token'], 12336: ['}', ' expected declaration or statement at end of input'], 12337: ['    ID = ID', ' expected  ;  before  while '], 12338: ['\tprintf ( STRING , ID + ID )', ' expected  ;  before  for '], 12339: ['                * ( ID + ID ) = * ( ID + ID ) ;', '  ID  undeclared '], 12340: ['        if ( ID [ ID ] ==\\ CONST )', ' stray  \\  in program'], 12341: ['\t    if', ' expected  (  before  for '], 12342: ['        printf ( STRING , ID . ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 12343: ['     scanf ( STRING , & ( ID . ( ID ) ) ) ;', ' expected identifier before  (  token'], 12344: ['    char * ID = malloc ( ) ;', ' too few arguments to function  malloc '], 12345: [' scanf ( STRING , & ID )', ' expected  ;  before  ID '], 12346: ['    return ID [ ] ;', ' expected expression before  ]  token'], 12347: ['        if ( ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) || ( ID [ ID ] = > CHARST && ID [ ID ] <= CHARST ) ) {', ' expected expression before  >  token'], 12348: ['\t    ID ( ID , ID , ID + ID )', ' expected  ;  before  ID '], 12349: ['\tint ', ' expected identifier or  (  before  return '], 12350: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 12351: ['ID += ID [ ID ] [ ID ]', ' expected  ;  before  return '], 12352: ['            scanf ( STRING , & ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 12353: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 12354: ['              ID [ ID ] [ ID ] = CONST', ' expected  ;  before  }  token'], 12355: ['    printf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 12356: ['    int ID = CONST pow ( CONST ) ;                                 ', ' invalid suffix "pow" on integer constant'], 12357: ['\t          ID [ ID - ID - CONST ] = ID + ID [ ID ] ;', '  ID  undeclared '], 12358: ['                printf ( STRING )', ' expected  ;  before  }  token'], 12359: ['         printf (\\ ID ) ;', ' stray  \\  in program'], 12360: ['\t           printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 12361: ['    printf ( STRING . ID [ ID ] ) ;', ' request for member  ID  in something not a structure or union'], 12362: ['\tfor ( ID = ID ; ID > CONST , ID = ID - CONST )', ' expected  ;  before  )  token'], 12363: ['    ID = getchar', ' expected  ;  before  while '], 12364: ['    ID = CONST', ' expected  ;  before  while '], 12365: ['\tID = ( ( ID ) + ( ID ) * ( ID + CONST / CONST ) ) ;', '  ID  undeclared '], 12366: ['         printf ( STRING ID ) ;', ' expected  )  before  ID '], 12367: ['          printf ( STRING , ID )', ' expected  ;  before  else '], 12368: ['    if ( ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID || ID * ID + ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 12369: ['\t scanf ( STRING & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 12370: ['}', ' expected declaration or statement at end of input'], 12371: ['        ID [ ID ] = ID [ ID ]', ' expected  ;  before  ID '], 12372: ['         ID [ CONST ] = ID [ CONST ] = CONST ;', '  ID  undeclared '], 12373: ['                printf ( STRING )', ' expected  ;  before  ID '], 12374: ['                    int ID = ID ( ID , ID , ID , ID ) ;', ' too few arguments to function  ID '], 12375: [' scanf ( STRING , & ID . ID . ID , & ID . ID . ID , & ID . ID . ID , & ID . ID . ID , & ID . ID . ID , & ID , ID . ID , & ID . ID . ID , & ID . ID . ID ) ;', '  ID  undeclared '], 12376: ['    ID = CONST / CONST * ID * ( ID * ID - ID * ID )', ' expected  ;  before  printf '], 12377: ['ID = ID ( CONST + ID * ID ) / CONST ;', ' called object  ID  is not a function or function pointer'], 12378: ['   return ( ID ( ID + CONST , ID ) || ID ( ID + CONST , ID - ID [ ID ] ) ) ', ' expected  ;  before  }  token'], 12379: ['        return ID ( ID , ID , ID ) || ID ( ID , ID + CONST , ID )', ' expected  ;  before  }  token'], 12380: ['  int ID = CONST , ID ;', ' expected identifier or  (  before  return '], 12381: ['        ID ++', ' expected  ;  before  }  token'], 12382: ['   while ( ID ! CONST ) {', ' expected  )  before  !  token'], 12383: ['    return CONST', ' expected  ;  before  }  token'], 12384: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 12385: ['            scanf ( STRING , & ( * ( ID + ID ) + ID ) ) ;', ' lvalue required as unary  &  operand'], 12386: ['    int ID [ ID ] [ ID ] = CONST ;', ' variable-sized object may not be initialized'], 12387: ['        break ;', ' break statement not within loop or switch'], 12388: ['printf ( CHARNG , ID ) ;', ' expected  )  before string constant'], 12389: ['\t    ID = ID', ' expected  ;  before  printf '], 12390: ['        ID ID + CONST ;', ' expected  ;  before  ID '], 12391: ['\tfor ( int ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 12392: ['    if ( ID % CONST == CONST && )                                 ', ' expected expression before  )  token'], 12393: ['\t        { if ( ID [ ID ] != CHARST CHARST CHARST ) printf ( STRING , ID [ ID - CONST ] ) ;', ' expected  )  before  > '], 12394: ['    printf ( STRING , char ID ) ;', ' expected expression before  CHAR '], 12395: ['    if ( ID == CONST ) { ID = - CONST ; ID = - CONST }', ' expected  ;  before  }  token'], 12396: ['    printf ( STRING , ID ( ID , CONST , CONST , CONST ) ) ;', ' too many arguments to function  ID '], 12397: ['}', ' expected identifier or  (  before  }  token'], 12398: ['\t ID = ID * CONST + ID ;', '  ID  undeclared '], 12399: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 12400: [' else if ( ID = ID ) { if ( ID = ID ) { if ( ID = ID ) { if ( ID = ID ) { if ( ID = ID ) { ( ID = ID ) { printf ( STRING ) ; } } } } } }', ' expected  ;  before  {  token'], 12401: ['\t    int * ID [ ID ] = ( int * ) malloc ( sizeof ( int ) * ( ID + CONST ) ) ;', ' variable-sized object may not be initialized'], 12402: ['\t    ID [ ID ] = ID [ ID - ID / CONST ]', ' expected  ;  before  }  token'], 12403: ['\tfor ( ID = CONST ; ID != ID ; ID ++ ) {', '  ID  undeclared '], 12404: ['\tif ( ID == CHARST || ID == CHARST || ID == CHARST || ID == CHARST || )', ' expected expression before  )  token'], 12405: ['printf ( STRING , ID )', ' expected  ;  before  return '], 12406: ['  for ( ; ID >= CONST || ID >= CONST ; ID ++ , ID -- , ID -- , ID -- ) {', '  ID  undeclared '], 12407: ['\t        scanf ( STRING , & ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 12408: ['\tprintf ( STRING , ID )', ' expected  ;  before  ID '], 12409: ['   if ( ID ( CONST , CONST , ID / CONST ) )', ' too many arguments to function  ID '], 12410: ['for ( ID = CONST , ID < CONST ; ID ++ )', ' expected  ;  before  )  token'], 12411: ['    for ( ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 12412: ['    { if ( ID % ID == CONST )', '  ID  undeclared '], 12413: ['\tfor ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 12414: ['        printf ( STRING )', ' expected  ;  before  }  token'], 12415: ['    printf ( STRING , ID [ ID ] , ) ;', ' expected expression before  )  token'], 12416: ['        for ( ID <= ID ; ID ++ ) {', ' expected  ;  before  )  token'], 12417: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 12418: ['}', ' expected declaration or statement at end of input'], 12419: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 12420: ['\tfor ( ID = CONST ; ID = < ID ; ID = ID + CONST )', ' expected expression before  <  token'], 12421: ['\twhile ( ID [ ID ] == CHARNST )', ' empty character constant'], 12422: ['   ID = ID ( CONST ) ', ' expected  ;  before  printf '], 12423: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 12424: ['    for ( ID = CONST ; )', ' expected expression before  )  token'], 12425: ['        ID = CHARST', ' expected  ;  before  }  token'], 12426: ['\tID = [ ( ID - ID ) * ( ID * ID * ID * ID ) ] / ( ID * ID - ID * ID ) ;', ' expected expression before  [  token'], 12427: ['     puts ( ID )  ', ' expected  ;  before  }  token'], 12428: ['        for ( ID = ID ; ID < CONST ; ID -- ) {', '  ID  undeclared '], 12429: ['}', ' expected  ; , identifier or  (  before  ID '], 12430: ['\t    ID [ ID ] = ID [ ID - CONST ] ++', ' expected  ;  before  }  token'], 12431: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  ID '], 12432: ['int ID ( char [ ] )', ' parameter name omitted'], 12433: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 12434: ['\tprintf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 12435: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 12436: ['}', ' expected declaration or statement at end of input'], 12437: ['\t        printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 12438: ['           printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 12439: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 12440: ['\tif ( ( ID * ID ) == ( ID * ID ) || ( ID == CONST && ID == CONST ) || ( ID = CONST && ID = CONST ) ) {', ' lvalue required as left operand of assignment'], 12441: ['   ID = ID ( ID [ ID ] , ID , ) ;', ' expected expression before  )  token'], 12442: ['    scanf ( STRING & ID ) ;                          ', ' invalid operands to binary & '], 12443: ['\t    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 12444: ['        ID [ ID ] = ID ;', ' incompatible types when assigning to type  struct list_entry  from type  struct node * '], 12445: ['ID ( ID , ID )', ' expected  ;  before  printf '], 12446: ['\tprintf ( STRING , ID -> ID -> ID , ID -> ID -> ) ;', ' expected identifier before  )  token'], 12447: ['    ID = ID', ' expected  ;  before  scanf '], 12448: ['        ID [ ID ] = CHART ;', '  ID  undeclared '], 12449: ['    ID = ( char * ) malloc ( ID * sizeof ( char ) ) ;', ' invalid operands to binary * '], 12450: ['    ( ID == ID ( ID ) )', ' expected  ;  before  printf '], 12451: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 12452: ['     ID = ID + ID % CONST', ' expected  ;  before  ID '], 12453: ['\t} ID [ ID ] = / CONST ;', ' expected expression before  ID  token'], 12454: ['        { ID [ ID ] = ID [ ID ] + ID [ ID ] [ ID ]', ' expected  ;  before  ID '], 12455: ['    enum ID = { ID , ID , ID , ID } ;', ' expected identifier or  (  before  =  token'], 12456: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 12457: ['\tscanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 12458: ['        if ( ID [ ID ] == ID )', '  ID  undeclared '], 12459: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 12460: ['    for ( ID = CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 12461: ['float ID = ID * ( CONST + ID * ID / CONST ) ;', ' redeclaration of  ID  with no linkage'], 12462: ['\t    ID ++', ' expected  ;  before  scanf '], 12463: ['\tprintf ( STRING ID , ID , ID , ID , ID ( ID ) ) ;', ' expected  )  before  ID '], 12464: ['            ID [ ID ] = CONST', ' expected  ;  before  for '], 12465: ['\twhile ( ID [ ID ] !=\\ CONST ) {', ' stray  \\  in program'], 12466: ['\t          ID = ID ( ID , ID , ID , ID )', ' expected  ;  before  if '], 12467: ['    printf ( STRING )', ' expected  ;  before  return '], 12468: ['\tscanf ( STRING , & ID )', ' expected  ;  before  while '], 12469: ['    return ID [ ID ]', ' expected  ;  before  return '], 12470: ['            printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 12471: ['        scanf ( STRING , & CHART ) ;', ' lvalue required as unary  &  operand'], 12472: ['        else printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 12473: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  ID '], 12474: [' printf ( STRING STRING , ID STRING ) ;', ' expected  )  before string constant'], 12475: ['    } printf ( STRING , ID )', ' expected  ;  before  return '], 12476: ['        for ( ID = ID + CONST ; ID < ID , ID ++ ) {', ' expected  ;  before  )  token'], 12477: ['\t    ID = ID [ ID ]', ' expected  ;  before  break '], 12478: ['            return ID', ' expected  ;  before  }  token'], 12479: ['    getchar ( ID [ ID ] ) ;', ' too many arguments to function  getchar '], 12480: ['scanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 12481: ['    return CONST', ' expected  ;  before  }  token'], 12482: ['            printf ( STRING , ID )', ' expected  ;  before  if '], 12483: ['            ID ( ID , ID - CONST , CONST )', ' expected  ;  before  return '], 12484: ['      ID = ID + ID % CONST ;', '  ID  undeclared '], 12485: ['       for ( int ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 12486: ['for ( ID = CONST ; ID [ ID ] != CHART , ID ++ ) ;', ' expected  ;  before  )  token'], 12487: ['    ID = ( ( ID * ID ) ( ID - ID ) ) / ( ID * ID - ID * ID ) ;', ' called object is not a function or function pointer'], 12488: ['        break ;', ' break statement not within loop or switch'], 12489: ['            if ( ID [ ID ] . ID > ID [ ID + CONST ] . ID )', '  ID  undeclared '], 12490: ['            scanf ( STRING , & ( * * ID + ID * ID + ID ) ) ;', ' lvalue required as unary  &  operand'], 12491: ['    ID = ( struct ID * ) calloc ( CONST * sizeof ( struct ID ) ) ;', ' too few arguments to function  calloc '], 12492: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 12493: ['    int ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 12494: ['    printf ( STRING , ID , ID , ID ) ;', '  ID  undeclared '], 12495: ['}', ' expected  ; , identifier or  (  before  struct '], 12496: ['    ID = ID ( ID , ID , ID , ID )', ' expected  ;  before  printf '], 12497: [' if ( ID + ID < ID ) || ( ID + ID < ID ) || ( ID + ID < ID ) {                                                                                                      ', ' expected expression before  ||  token'], 12498: ['    ID ( ID , , ID , ID - CONST , ID + CONST ) ;', ' expected expression before  ,  token'], 12499: ['\t    ID = ID [ ID - ID ] ;', '  ID  undeclared '], 12500: ['    for ( ID = CONST ; ID = < ID || ID >= ID ; ID ++ ) {                                    ', ' expected expression before  <  token'], 12501: ['           if ( ID [ ID ] [ ID ] == - ID [ ID + ] [ ID + CONST ] && ID [ ID ] [ ID + CONST ] == ID [ ID + CONST ] [ ID - CONST ] )', ' expected expression before  ]  token'], 12502: [' ID = ID + ID [ ID ] [ CONST ]', ' expected  ;  before  printf '], 12503: ['\tif ( ID = int )', ' expected expression before  int '], 12504: ['    } else {', '  else  without a previous  if '], 12505: ['            ID = ID [ ID ]', ' expected  ;  before  }  token'], 12506: ['        else ( ID > ID ) {', ' expected  ;  before  {  token'], 12507: [' for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 12508: ['\treturn CONST ;', ' expected declaration or statement at end of input'], 12509: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 12510: ['float ID = CONST * ID * ID ;', ' redeclaration of  ID  with no linkage'], 12511: ['                        printf ( STRING , ID )', ' expected  ;  before  }  token'], 12512: ['  printf ( STRING , ID )', ' expected  ;  before  }  token'], 12513: ['          printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 12514: ['printf ( STRING , ID , ID )', ' expected  ;  before  return '], 12515: ['        strcpy ( ID , ID )', ' expected  ;  before  ID '], 12516: ['    scanf ( STRING , & ID ) :', ' expected  ;  before  :  token'], 12517: ['printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 12518: ['printf ( STRING , ID , ID , ID , ID , ID . ) ;', ' expected identifier before  )  token'], 12519: ['            if ( ID [ ID - CONST ] < ID [ ID - CONST ] ) printf ( STRING )', ' expected  ;  before  else '], 12520: ['printf ( STRING , ID )', ' expected  ;  before  return '], 12521: ['    int ID = ID ;', '  ID  undeclared '], 12522: ['\t    ID = getchar ( ) ;', ' assignment to expression with array type'], 12523: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 12524: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 12525: ['    int ID [ ] ;', ' array size missing in  ID '], 12526: ['\t        ID ++', ' expected  ;  before  }  token'], 12527: ['        ID = CONST {', ' expected  ;  before  {  token'], 12528: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 12529: ['            scanf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 12530: ['            if ( ID [ ID ] == ID [ ID ] ) printf ( STRING )', ' expected  ;  before  else '], 12531: ['float ID = ID * ID * ID', ' expected  ,  or  ;  before  ID '], 12532: ['    int ID , ID , ID , ID , ID = ID ;', '  ID  undeclared '], 12533: ['ID ( ID , ID , ID )', ' expected  ;  before  ID '], 12534: ['            ID [ ID ] [ ID ] = ID ( ID , ID , ID , ID , ID [ ] [ CONST ] ) ;', ' expected expression before  ]  token'], 12535: ['\t    while ( ID < CONST && ID [ ID ] != = CHART ) {', ' expected expression before  =  token'], 12536: ['        printf ( STRING )', ' expected  ;  before  }  token'], 12537: ['\tfor ( ID = ID ; ID != CHART ; ++ )', ' expected expression before  )  token'], 12538: ['    ID [ ID ] = ( ID [ ID ] ) * ( ID [ ID ] )', ' expected  ;  before  ID '], 12539: ['    char ID [ CONST ] = STRING', ' expected  ,  or  ;  before  ID '], 12540: ['    printf ID ;', ' expected  ;  before  ID '], 12541: ['else if ( ID + ID = ID || ID + ID = ID || ID + ID = ID ) {', ' lvalue required as left operand of assignment'], 12542: ['\t    ID [ ID ] [ ID ] = CONST + ID ( ID [ ID - CONST ] [ ID ] , ID [ ID ] [ ID - CONST ] , ID [ ID - CONST ] [ ID - CONST ] ) ;', ' called object  ID  is not a function or function pointer'], 12543: ['    gets ( ID )', ' expected  ;  before  printf '], 12544: ['ID struct ID ID ;', ' expected  ; , identifier or  (  before  struct '], 12545: ['    char ID [ ID ] , [ ID ] ;', ' expected identifier or  (  before  [  token'], 12546: ['\t{ ID = ID + ( ID ( ID - CONST ID ) ) * ID ; }', ' invalid suffix "x" on integer constant'], 12547: ['\telse ( ID > CONST )', ' expected  ;  before  {  token'], 12548: ['\t    scanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 12549: ['        else ( ID >= CONST ) { ID = ID + ID * ID * ID * ID ; }', ' expected  ;  before  {  token'], 12550: ['\tif ( ID == ID )', '  ID  undeclared '], 12551: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 12552: ['  char ID [ CONST ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  ID "], 12553: ['      printf ( STRING , ID )                                 ', ' expected  ;  before  return '], 12554: ['\tfloat ID = CONST , ID = CONST ;                             float ID = ID * ID * ID ;                                    printf ( STRING ID ) ;                   ', ' expected  )  before  ID '], 12555: ['    for ( int ID = CONST ; ID < CONST , ID ++ ) {', ' expected  ;  before  )  token'], 12556: ['\t    printf ( STRING )', ' expected  ;  before  ID '], 12557: ['        printf ( STRING , & ID ) ;', '  ID  undeclared '], 12558: ['        break ;', ' break statement not within loop or switch'], 12559: ['\twhile ( ID >= CONST ) {', '  ID  undeclared '], 12560: ['    double ID = ( ID -> ID ) - ( ID - ID ) ;', '  ID  undeclared '], 12561: ['   ID * ID ;', ' unknown type name  ID '], 12562: ['        ID = ID ( ID , ID -> ID )', ' expected  ;  before  }  token'], 12563: ['\tif ( ID [ ID ] == ID ) {', '  ID  undeclared '], 12564: ['\t    scanf ( STRING , & ID [ ] ) ; ID ++ ;', ' expected expression before  ]  token'], 12565: ['    if ( ID == CONST ) {', '  ID  undeclared '], 12566: ['\tID  }', ' expected  ;  before  }  token'], 12567: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 12568: ['ID = ID ;', '  ID  undeclared '], 12569: ['ID ( STRING )', ' expected  ;  before  return '], 12570: ['    int [ ID ] ;', ' expected identifier or  (  before  [  token'], 12571: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 12572: ['    }', ' expected declaration or statement at end of input'], 12573: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 12574: ['        ID = ID * CONST + ID % CONST', ' expected  ;  before  ID '], 12575: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 12576: ['          if ( ID [ ID ] == ID || ID [ CONST ID ] == ID )', '  ID  undeclared '], 12577: ['    ID ( ID [ ] , CONST ) ;', ' expected expression before  ]  token'], 12578: ['    if ( ID ! / CONST )', ' expected  )  before  !  token'], 12579: ['                 ID = ID + ID', ' expected  ;  before  }  token'], 12580: ['   if', ' expected  (  before  printf '], 12581: ['        printf ( STRING , ID )', ' expected  ;  before  ID '], 12582: ['    for ( int ID = CONST ; ID < ID - CONST ; ID ++ )', '  ID  undeclared '], 12583: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 12584: ['\t            ID = ID + CONST', ' expected  ;  before  }  token'], 12585: ['    while ( ID < CONST && getchar != ID ) {', '  ID  undeclared '], 12586: ['\t  printf ( STRING , ID )', ' expected  ;  before  for '], 12587: ['    printf ( STRING )', ' expected  ;  before  else '], 12588: ['        printf ( STRING )', ' expected  ;  before  }  token'], 12589: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 12590: ['scanf ( STRING , & ID , & ID , % ID , & ID ) ;                          ', ' expected expression before  %  token'], 12591: ['                if ( ID ( ID [ ] [ ID ] , ID , ID , ID ) )', ' expected expression before  ]  token'], 12592: ['    float ID = CONST * CONST * CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 12593: ['   printf ( , STRING ID ) ; ', ' expected expression before  ,  token'], 12594: ['        ID ++', ' expected  ;  before  }  token'], 12595: ['    else printf ( STRING ) ;', '  else  without a previous  if '], 12596: ['    if ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST && ID [ ID + CONST ] <= CHARST ID [ ID ] >= CHARST && ID [ ID + CONST ] == ( ID [ ID ] + CHARST - CHARST ) ) { ID += CONST ; }', ' expected  )  before  ID '], 12597: ['           printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 12598: ['        ID [ ID ] = ID [ ID ] + ( ID [ ID ] - ID + CONST ) ;', '  ID  undeclared '], 12599: ['\tprintf ( STRING ID ) ;', ' expected  )  before  ID '], 12600: ['    for ( ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 12601: ['            printf ( STRING , ID ) ;', '  ID  undeclared '], 12602: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 12603: ['    ID [ ] = STRING ;', ' expected expression before  ]  token'], 12604: ['    ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 12605: ['    printf ( STRING ID / STRING ) ;    ', ' expected  )  before  ID '], 12606: ['    ID ( ID , ID + CONST ) ;', '  ID  undeclared '], 12607: ['    ID = ID + ID / CONST ;', '  ID  undeclared '], 12608: ['printf ( STRING , ID [ CONST ] . ID . ID ) ;', '  struct rect  has no member named  ID ; did you mean  ID ?'], 12609: ['    if ( ID == ID )', '  ID  undeclared '], 12610: ['  int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 12611: ['    return ID', ' expected  ;  before  }  token'], 12612: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 12613: ['\tchar ID = ID ;', '  ID  undeclared '], 12614: ['     if ( ID [ ID ] > ID [ ID - CONST ] && ) {', ' expected expression before  )  token'], 12615: ['    } while ( ID < CONST || ID = ID ) ;', ' lvalue required as left operand of assignment'], 12616: ['        ID ++', ' expected  ;  before  }  token'], 12617: ['    int ID = CONST', ' expected  ,  or  ;  before  while '], 12618: ['\t    if ( ID [ ID != ( char ) ID ) {', ' expected  ]  before  )  token'], 12619: ['\t    if ( ( ID == CONST ) || ( ID == CONST ) || ( ID == ID ) || ID == ID ) )', ' expected statement before  )  token'], 12620: ['   ID = * ID [ CONST ] ;', ' invalid type argument of unary  *  '], 12621: ['    if ID > CONST {', ' expected  (  before  ID '], 12622: ['  printf ( STRING )', ' expected  ;  before  else '], 12623: [' scanf ( STRING , & ID . ID ) ;', '  ID  undeclared '], 12624: ['    printf ( STRING , ID [ CONST ] - CONST ) ;', '  ID  undeclared '], 12625: ['    ID = ID', ' expected  ;  before  ID '], 12626: ['    int ID [ ID ]', " expected  = , ',',  ; ,  asm  or  __attribute__  before  while "], 12627: ['        while ( char != ID , char = CHARST )', ' expected expression before  CHAR '], 12628: [' scanf ( STRING , % ID ) ;    ', ' expected expression before  %  token'], 12629: ['        for ( ID = ID - CONST ; ID >= ; ID -- )', ' expected expression before  ;  token'], 12630: ['const double ID = CONST', ' expected  ,  or  ;  before  int '], 12631: ['    printf ( STRING , ID [ ID ] + ID [ ID ] - CHARST )', ' expected  ;  before  else '], 12632: ['printf ( STRING ID ID STRING ) ;\t', ' expected  )  before  ID '], 12633: ['    scanf ( STRING STRING STRING STRING STRING STRING , & ID , & ID & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 12634: ['    printf ( STRING , ID = , ID = , ID = ) ;', ' expected expression before  ,  token'], 12635: ['\t    ID [ ID + CONST ] = ID [ ID ]', ' expected  ;  before  }  token'], 12636: ['        ID [ ID ] = ID [ ID ] - CONST', ' expected  ;  before  }  token'], 12637: ['    if ( ID = getchar ( ) && ID = getchar ( ) && ID = ID ) {', '  ID  undeclared '], 12638: ['       for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 12639: ['\tID [ ID ] = ID ( ID ( CONST + ID [ ID ] ) , CONST ) ;   ', ' too few arguments to function  ID '], 12640: ['      return ID ( ID - CONST , ID , ID , ID ) + ID ( ID - CONST , ID , ID , ID ) ;', '  ID  undeclared '], 12641: ['while {', ' expected  (  before  {  token'], 12642: ['scanf ( STRING , & ID , & ID , & ID & ID ) ;', ' invalid operands to binary & '], 12643: ['void ID ( char int ID [ ] , int ID ) {', ' two or more data types in declaration specifiers'], 12644: ['    ID ( ID , ID , CONST , CONST , ID )', ' expected  ;  before  return '], 12645: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 12646: ['    int ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 12647: ['\t    for ( int ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 12648: ['                    ID = ID ; ID = ID ;', '  ID  undeclared '], 12649: ['        if ( ID == ID [ ID ] )', '  ID  undeclared '], 12650: ['}', ' expected declaration or statement at end of input'], 12651: ['  { ID = ID + ID * ( ID % ID ) ;', '  ID  undeclared '], 12652: ['        if ( ID ( ID , CONST , CONST , CONST , CONST ) )', ' too few arguments to function  ID '], 12653: ['if ( ID [ ID - CONST ] != CHARST )', '  ID  undeclared '], 12654: ['            scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 12655: ['int ID ( int ID , int ID ) ;', ' expected identifier or  (  before  {  token'], 12656: ['          ID ++', ' expected  ;  before  }  token'], 12657: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 12658: ['  \tID = ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 12659: ['        if ( char ( ID ) == CHART ) break ;', ' expected expression before  CHAR '], 12660: ['            ID ( ID , ID + CONST , ID + ID , ID )', ' expected  ;  before  }  token'], 12661: ['\tID = ID ( CONST + ( ( ID * ID ) / CONST ) ) ;', ' called object  ID  is not a function or function pointer'], 12662: ['    if ( ( ID == ID || ID == ID || ID == ID || ID == ID || ID == ID ) && ( ( ID == ID || ID == ID || ID == ID || ID == ID || ID == ID ) || ( ID = ID = || ID == ID || ID == ID || ID == ID || ID == ID ) ) )    ', ' expected expression before  ||  token'], 12663: ['        ID = ID + ID [ ID + ID ] ;', '  ID  undeclared '], 12664: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 12665: ['printf ( STRING , ID )', ' expected  ;  before  return '], 12666: ['\tID = & ID [ ] ;', ' expected expression before  ]  token'], 12667: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 12668: ['\tID ( ID , ID )', ' expected  ;  before  return '], 12669: ['\tID < ID', ' expected  ;  before  ID '], 12670: ['} }', ' expected identifier or  (  before  }  token'], 12671: ['    if ( ID == ID && ID == ID )', '  ID  undeclared '], 12672: ['            ID = ID', ' expected  ;  before  }  token'], 12673: ['    printf ( , ID ) ;', ' expected expression before  ,  token'], 12674: ['\t    if ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST && ID [ ID + CONST ] >= CHARST && ID [ ID + CONST ] <= CHARST && ID [ ID + CONST ] = ID [ ID + CONST ] + CONST )', ' lvalue required as left operand of assignment'], 12675: ['\tfor ( int ID = CONST ; ID [ ID ! ] = CHART ; ID ++ ) {', ' expected  ]  before  !  token'], 12676: ['    if ( ID < ID && ID < ID && < ID ) {', ' expected expression before  <  token'], 12677: ['        printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 12678: ['\tscanf ( STRING , & ID [ ID - CONST ] ) ;', '  ID  undeclared '], 12679: ['if ( ID ( ID + CONST , ID + ID [ ] ) || ID ( ID + CONST , ID ) == CONST ) return CONST ; else return CONST ;', ' expected expression before  ]  token'], 12680: ['\tprintf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 12681: ['    if ( ID / ID == ID / ID || ID == ID && ID = ID )                              ', ' lvalue required as left operand of assignment'], 12682: ['\tID [ ID ] = CHART', ' expected  ;  before  return '], 12683: ['    while ( )', ' expected expression before  )  token'], 12684: ['\tID = ID ( ID [ ] ) ;                   ', ' expected expression before  ]  token'], 12685: ['        { scanf ( STRING , & ID [ ID ] [ ID ] ) ; printf ( STRING , ID [ ID ] [ ID ] ) ; }', '  ID  undeclared '], 12686: ['\t    while ( ID [ ID ] = CHARNST ) {', ' empty character constant'], 12687: ['    printf ( STRING ID + ID ) ;', ' expected  )  before  ID '], 12688: ['            printf ( STRING )', ' expected  ;  before  }  token'], 12689: ['\t  break', ' expected  ;  before  }  token'], 12690: ['        scanf ( STRING )', ' expected  ;  before  }  token'], 12691: ['  for ( ID = CONST ; ID [ ID ] != ID ; ID ++ )', '  ID  undeclared '], 12692: ['\tprintf ( STRING , * ( * ( ID + CONST ) + CONST ) )', ' expected  ;  before  for '], 12693: ['    printf ( STRING )', ' expected  ;  before  return '], 12694: ['\tint ID [ CONST ] ;', ' conflicting types for  ID '], 12695: ['    for ( int ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 12696: ['      getchar ( ID [ ID ] ) ;', ' too many arguments to function  getchar '], 12697: ['       while ( ID > CONST && ID > CONST )', ' expected  ;  before  return '], 12698: ['\t                    ID = ( ID [ ID ] ) * ( ID [ ID ] ) ;', '  ID  undeclared '], 12699: ['        if ( ID -> ID == ID )', '  ID  {aka  struct node } has no member named  ID '], 12700: ['            if ( ID >= ( ID + CONST ) / CONST - ID + CONST && ID = > ( ID + CONST ) / CONST + ID - CONST )', ' expected expression before  >  token'], 12701: ['       printf ( STRING , ID ) ; break ;', ' break statement not within loop or switch'], 12702: ['         else', ' expected expression before  }  token'], 12703: ['\tID = ID + CONST', ' expected  ;  before  printf '], 12704: ['        scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  while '], 12705: ['else ( ID * ID == ID * ID && ID == ID ) {', ' expected  ;  before  {  token'], 12706: ['\tif ( ! ( CHARST = < ID [ ID ] && ID [ ID ] <= CHARST ) )', ' expected expression before  <  token'], 12707: ['\tfor ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 12708: ['         if ( ID [ ID ] != ID )', '  ID  undeclared '], 12709: ['} printf ( STRING , ID ) ;', ' expected declaration or statement at end of input'], 12710: ['\twhile ( ID < CONST && ID [ ID ] != (\\ CONST ) ) {', ' stray  \\  in program'], 12711: ['    ID ( ID , ID )', ' expected  ;  before  return '], 12712: ['    for ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 12713: ['printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 12714: ['    ID [ CONST ] ;', '  ID  undeclared '], 12715: ['    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  for '], 12716: ['}\x01', ' stray  \\1  in program'], 12717: ['        for ( ID = CONST ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 12718: ['        if ( ID [ ID ] = < ID [ ID + CONST ] )', ' expected expression before  <  token'], 12719: ['    ID . ID = ( int * ) malloc ( ( ID . ID ) * sizeof ( int * ) )', ' expected  ;  before  scanf '], 12720: ['    for ( ID = CONST ; ID <= CONST ; CONST ++ )', ' lvalue required as increment operand'], 12721: ['    for ( ID = CONST ; ID < ID ; ID = ++ ) {', ' expected expression before  )  token'], 12722: ['\t    printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 12723: ['            printf ( STRING , ID , ID - CONST , ID )', ' expected  ;  before  }  token'], 12724: ['    int ID , ID = CONST , ID = CONST', ' expected  ,  or  ;  before  while '], 12725: ['        ID ++ ;', '  ID  undeclared '], 12726: ['    printf ( STRING ID [ CONST ] [ CONST ] , ID [ CONST ] [ CONST ] , ID [ CONST , CONST ] , ID [ CONST , CONST ] ) ;', ' expected  )  before  ID '], 12727: ['            for ( int ID = CONST ; ID <= ( ID - ID ) ; ID ++ )', '  ID  undeclared '], 12728: ['\tprintf ( STRING , ( CONST / CONST ) * ID * ID * ID * ID , CONST * ID * ID * ID * ID ) ;', '  ID  undeclared '], 12729: ['\tdouble ID = double ( ( ID - ID ) / ID ) ;', ' expected expression before  double '], 12730: ['     ID [ ID ] = ID * ( ID + CONST ) ;', ' invalid operands to binary * '], 12731: ['    printf ( STRING , ID , ) ;', ' expected expression before  )  token'], 12732: ['    puts [ ID ] ;', ' array subscript is not an integer'], 12733: ['    else', '  else  without a previous  if '], 12734: ['\tif ( ID [ CONST ] = ID [ CONST ] && ID [ CONST ] = ID [ CONST ] )', ' lvalue required as left operand of assignment'], 12735: ['    \t    if ( ( ID [ ID ] <= ID ) && ( ( CONST + ID [ ID ] ) > ID [ ID ] ) ) ) {', ' expected statement before  )  token'], 12736: ['\t            ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 12737: ['                else', ' expected expression before  }  token'], 12738: ['    ID ( STRING )', ' expected  ;  before  }  token'], 12739: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID )', ' expected  ;  before  return '], 12740: ['        printf ( STRING )', ' expected  ;  before  }  token'], 12741: ['\t                    if ( ID [ ID ] == ID [ ID ] ) {', '  ID  undeclared '], 12742: ['}', ' expected  ; , identifier or  (  before  int '], 12743: [' printf ( STRING )   ', ' expected  ;  before  return '], 12744: ['  ID = CONST', ' expected  ;  before  for '], 12745: ['        ID = ID + ID ( ID [ ID ] ) * ID', ' expected  ;  before  }  token'], 12746: ['\tscanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 12747: ['    else ( ( CONST <= CHARST ) && ( CHARST <= CHARST ) )', ' expected  ;  before  printf '], 12748: ['    printf ( STRING )', ' expected  ;  before  return '], 12749: ['    }', ' expected identifier or  (  before  }  token'], 12750: ['}', ' expected declaration or statement at end of input'], 12751: ['    free ( ID )', ' expected  ;  before  return '], 12752: ['            while ( ID <= ID )', '  ID  undeclared '], 12753: ['    ID = ID ( ID )', ' expected  ;  before  return '], 12754: ['     }', ' expected declaration or statement at end of input'], 12755: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 12756: ['    char ID [ ] ;                                    ', ' array size missing in  ID '], 12757: ['        for ( ID - CONST ; ID >= ID - CONST ; ID -- )', '  ID  undeclared '], 12758: ['\t        ID ++', ' expected  ;  before  }  token'], 12759: ['\tint ID ;', ' redeclaration of  ID  with no linkage'], 12760: ['         if else ( ID [ ID ] == CONST ) { printf ( STRING ) ; }', ' expected  (  before  else '], 12761: ['\t           ID ++', ' expected  ;  before  }  token'], 12762: ['    ID = ( int * ) calloc ( sizeof ( int ) * ID ) ;', ' too few arguments to function  calloc '], 12763: ['    }', ' expected  ; , identifier or  (  before  struct '], 12764: ['    else', '  else  without a previous  if '], 12765: ['\tprintf ( STRING , ID + ID )', ' expected  ;  before  ID '], 12766: ['         } if ( ID ! >= CONST )', ' expected  )  before  !  token'], 12767: ['            printf ( STRING , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 12768: ['         if ( ID * ID = ID * ID + ID * ID ) { printf ( STRING ) ; }', ' lvalue required as left operand of assignment'], 12769: ['\tID ( ID [ ID ] [ ID ] , ID [ ID ] [ ID ] , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 12770: ['    int ID = ( ID ( ID ) )', ' expected  ,  or  ;  before  while '], 12771: ['    printf ( STRING , & ID ) ;', '  ID  undeclared '], 12772: ['    ID ( ) ;', ' too few arguments to function  ID '], 12773: ['            int ID [ ] = ID ;', ' invalid initializer'], 12774: ['        break ;', ' break statement not within loop or switch'], 12775: ['        ID ++', ' expected  ;  before  }  token'], 12776: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 12777: ['scanf ( STRING & ID , & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 12778: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 12779: ['\t        else if ( ID == CONST || ID == ID ) {', '  else  without a previous  if '], 12780: ['    int ID = ID ( ID ) ;', ' redeclaration of  ID  with no linkage'], 12781: ['}', ' expected declaration or statement at end of input'], 12782: ['\tfor ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 12783: ['            ID += CONST', ' expected  ;  before  continue '], 12784: ['    printf ( STRING , sqrt ( ( CONST / CONST ) * ID ) )\t', ' expected  ;  before  return '], 12785: ['           int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 12786: ['        printf ( STRING , % ID ) ;', ' expected expression before  %  token'], 12787: ['   } else if ( ID ( ID , ID , CONST , CONST ) ) {', ' too few arguments to function  ID '], 12788: ['       printf ( STRING )', ' expected  ;  before  }  token'], 12789: ['\t    ID = ID + CONST', ' expected  ;  before  }  token'], 12790: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 12791: ['    ID = abs ( ID ) + abs ( ID ) + ID', ' expected  ;  before  printf '], 12792: ['\t    printf ( STRING , ( ID - ID + CONST ) * ID )', ' expected  ;  before  }  token'], 12793: ['    { for ( ID = ID ; ) { for ( ID = CONST ; ID <= ID ; ID ++ )', ' expected expression before  )  token'], 12794: ['}', ' expected declaration or statement at end of input'], 12795: ['    if ( ID [ ID ] == ID [ ID ] && ID != = ID )', ' expected expression before  =  token'], 12796: ['if ', ' expected  (  before  ID '], 12797: ['\tint ID = ID ;', ' redeclaration of  ID  with no linkage'], 12798: ['    printf ( STRING )', ' expected  ;  before  return '], 12799: ['          printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 12800: ['      scanf ( STRING , & ID )', ' expected  ;  before  while '], 12801: ['        if ( ID [ ID ] == CHART ) {', '  ID  undeclared '], 12802: ['      if ( ID <= ID )', '  ID  undeclared '], 12803: ['\tscanf ( STRING , & ID )', ' expected  ;  before  return '], 12804: ['\tCONST', ' expected  ;  before  return '], 12805: ['        if ( ID > ID ) { ID = ID ; ID = ID }', ' expected  ;  before  }  token'], 12806: ['           if ( ID % CONST == CONST ) || ( ID % CONST == CONST )', ' expected expression before  ||  token'], 12807: ['        printf ( STRING , ID ( ID , ID , CONST ) , ID ) ;', ' too many arguments to function  ID '], 12808: ['        ID == CONST', ' expected  ;  before  ID '], 12809: ['   if ID <= ID', ' expected  (  before  ID '], 12810: ['}', ' expected declaration or statement at end of input'], 12811: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 12812: ['             ID = ID ( ID + ID [ ID ] [ ID ] , ID + ID [ ID + CONST ] [ ID ] ) ', ' expected  ;  before  printf '], 12813: ['        int ID = ID % ( ID ( CONST , ID ) )', ' expected  ,  or  ;  before  printf '], 12814: ['          printf ( STRING ID ) ;', ' expected  )  before  ID '], 12815: ['int main ( ) { int ID , ID , * ID ] ;', " expected  = , ',',  ; ,  asm  or  __attribute__  before  ]  token"], 12816: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 12817: ['}', ' expected declaration or statement at end of input'], 12818: ['\t       else ID ++ ;', '  else  without a previous  if '], 12819: ['\tscanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 12820: ['\t{ float ID = ( ID * ( ( ID * ID ) - ( ID * ID ) ) ) / CONST', ' expected  ,  or  ;  before  return '], 12821: ['    int ID = ID [ CONST ] [ CONST ] , ID = ID [ CONST ] [ CONST ] ;', '  ID  undeclared '], 12822: ['\t            ` ID = ID - ID - CONST ;', ' stray  `  in program'], 12823: ['float ID = CONST * CONST * CONST', ' expected  ,  or  ;  before  printf '], 12824: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 12825: ['ID = sqrt ( ( ( ID ) * ID / CONST ) ) ;', '  ID  undeclared '], 12826: ['\t         printf ( STRING , ) ; ', ' expected expression before  )  token'], 12827: ['    ID ( CHARST , CHARST , ID , ID ) ;', '  ID  undeclared '], 12828: ['  ID = CONST - / CONST * ( ID - CONST ) + CONST ;', ' expected expression before  ID  token'], 12829: ['            ID == CONST', ' expected  ;  before  ID '], 12830: ['void ID ( char * ID , char * ID , char * ID , int ID , int ID , )', ' expected declaration specifiers or  ...  before  )  token'], 12831: ['    printf ( STRING , * ID [ CONST ] ) ;', ' invalid type argument of unary  *  '], 12832: ['    } * /', ' expected expression before  ID  token'], 12833: ['        ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 12834: ['}', ' expected declaration or statement at end of input'], 12835: ['        printf ( STRING )', ' expected  ;  before  }  token'], 12836: ['\t    for ( ID = ID ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 12837: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  if '], 12838: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 12839: ['    }', ' expected  ,  or  ;  before  printf '], 12840: ['int main ( ) { printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 12841: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 12842: ['    scanf ( STRING , ID )', ' expected  ;  before  ID '], 12843: ['\tprintf ( STRING ID [ CONST ] + CONST ) ;', ' expected  )  before  ID '], 12844: ['    ID = ( struct ID * ) malloc ( struct ID ) ;', ' expected expression before  struct '], 12845: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 12846: ['\tfor ( ID = CONST ; ID <= ( ( ID + CONST ) / CONST ) , ID ++ )', ' expected  ;  before  )  token'], 12847: ['# include', ' #include expects "FILENAME" or <FILENAME>'], 12848: ['    float ID = ID ;', '  ID  undeclared '], 12849: ['    ID = ID ^ CONST - CONST ID ;', ' invalid suffix "ac" on integer constant'], 12850: ['    scanf ( STRING , & ID [ CONST ] )', ' expected  ;  before  for '], 12851: ['\tfor ( ID = ID ; ) {', ' expected expression before  )  token'], 12852: ['        for ( ID = CONST ; ( ID + ID ) = < ID ; ID ++ )', ' expected expression before  <  token'], 12853: ['        break ;', ' break statement not within loop or switch'], 12854: ['else ( ID * ID == ID * ID ) {', ' expected  ;  before  {  token'], 12855: ['\t   ID = ID', ' expected  ;  before  ID '], 12856: ['  ID = sqrt ( CONST ID / CONST ) ;', ' invalid suffix "a" on integer constant'], 12857: ['void ID ( int ID [ ] , int ID , ID )', ' unknown type name  ID '], 12858: ['        ID * [ ID ] = ( int * ) malloc ( ID * sizeof ( int ) ) ;', ' expected expression before  [  token'], 12859: ['          ID [ ] = CHART ;', ' expected expression before  ]  token'], 12860: ['}', ' expected declaration or statement at end of input'], 12861: ['    printf ( STRING , ID STRING , ID , STRING , ID , STRING , ID , STRING , ID ) ;', ' expected  )  before string constant'], 12862: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 12863: ['    if ( CHARST = < ID <= CHARST ) {', ' expected expression before  <  token'], 12864: ['  ID ( ID , ID , CONST )', ' expected  ;  before  return '], 12865: ['\t        printf ( STRING , ID [ ID - ID ] ) ;', '  ID  undeclared '], 12866: ['if ( ID > ID )', '  ID  undeclared '], 12867: ['    printf ( STRING , ID [ ID - CONST ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 12868: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 12869: ['        if ( ID ( ID ) == CONST && ID ( int ID ) == CONST ) {', ' expected expression before  int '], 12870: ['        printf ( STRING )', ' expected  ;  before  }  token'], 12871: [' printf ( STRING , ID )                                    ', ' expected  ;  before  return '], 12872: ['            if ( ID [ ID ] == ID [ ID - ID ] ) && ( ID [ ID ] == ID [ ID - ID ] ) && ( ID [ ID ] [ ] )', ' expected identifier before  (  token'], 12873: ['    ID -> ID = ID', ' expected  ;  before  ID '], 12874: ['\tID ( ID , ID , ID , ID , CONST , ID ) ;', '  ID  undeclared '], 12875: ['   if ( sqrt ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) ) = ID )', ' lvalue required as left operand of assignment'], 12876: ['    ID = ID % CONST + ID / CONST + CONST', ' expected  ;  before  if '], 12877: ['\tprintf ( STRING ( ID - ID ) ) ;', ' called object is not a function or function pointer'], 12878: ['\tscanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 12879: ['    int ID = ( ID [ ID ] % CONST == CONST && ID [ ID ] % CONST != CONST ) CONST : CONST ;', ' expected  ,  or  ;  before numeric constant'], 12880: ['\t   ID [ ID ] = ID [ ID ] + CHARST ;', '  ID  undeclared '], 12881: ['\t    if ( ID [ ID ] ==\\ CONST )', ' stray  \\  in program'], 12882: ['\t    for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 12883: ['    } break ;', ' break statement not within loop or switch'], 12884: ['   } printf ( STRING , ID ) } if ( ID == CONST )', ' expected  ;  before  }  token'], 12885: ['    char CHARST ;', ' expected identifier or  (  before  o '], 12886: ['    int ID , ID , ID [ ID ] ;', '  ID  redeclared as different kind of symbol'], 12887: ['            ID [ ID ] [ ID ] = ID ( ID , ID , ID , ID , ID [ ] [ ID ] ) ;', ' expected expression before  ]  token'], 12888: ['\t            ID ++', ' expected  ;  before  }  token'], 12889: ['\tscanf ( STRING , & ID & ID & ID & ID ) ;', ' invalid operands to binary & '], 12890: ['\tID ( ID )', ' expected  ;  before  scanf '], 12891: ['\tprintf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 12892: ['    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 12893: [' ID = ( CONST / CONST ) ID * ( pow ( ID , CONST ) - pow ( ID , CONST ) ) ;', ' expected  ;  before  ID '], 12894: ['    float ID = ID * ID * ID', ' expected  ,  or  ;  before  printf '], 12895: ['                continue', ' expected  ;  before  }  token'], 12896: ['            printf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 12897: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 12898: ['printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 12899: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 12900: ['            if ( ID [ ID + ID ] [ ID + ID ] == CONST && ID [ ID + ID + CONST ] [ ID ] = - ( ID [ ID ] [ ID + ID + CONST ] ) ) {                          ID [ ID ] [ ID ] = CONST ;', ' lvalue required as left operand of assignment'], 12901: ['\t    while ( ID == CONST || ID == ID || <= ID )', ' expected expression before  <=  token'], 12902: ['        printf ( STRING , * ) ;', ' expected expression before  )  token'], 12903: ['else printf ( STRING )', ' expected  ;  before  return '], 12904: ['    printf ( STRING * ( ID + CONST ) ) ;', ' invalid operands to binary * '], 12905: ['                    if ( ID [ ID ] [ ID ] != CONST )', ' expected expression before  int '], 12906: ['    printf ( STRING )', ' expected  ;  before  return '], 12907: ['         ID = CONST', ' expected  ;  before  return '], 12908: ['    printf ( STRING )', ' expected  ;  before  return '], 12909: ['    int ID [ CONST ] = { CHART , CHARNST , CHART , CHART , CHART , CHART , CHART , CHART , CHART , CHART , CHART , CHART } ;', ' empty character constant'], 12910: ['int ID ( char * ID , int ID , )', ' expected declaration specifiers or  ...  before  )  token'], 12911: ['            for ( ID = CONST ; ID [ ID ] != CONST , ID ++ ) {', ' expected  ;  before  )  token'], 12912: ['\tif ( ID >= ID )', '  ID  undeclared '], 12913: ['\tID [ ID ] = ( CONST * ( ID [ ID ] ) - CONST )', ' expected  ;  before  printf '], 12914: ['\t   printf ( STRING )', ' expected  ;  before  {  token'], 12915: ['\tID = ID ( ID , ID ( ID , CONST , ID ) , ID ( ) ) ;', ' too few arguments to function  ID '], 12916: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 12917: ['    ID ( ID / CONST , ID , ID ) ;', ' too many arguments to function  ID '], 12918: ['                    ID ( & ID [ ID ] , & ID [ ID + ID - ID - CONST ] ) ;', '  ID  undeclared '], 12919: ['    float ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 12920: ['scanf ( STRING , & ID )', ' expected  ;  before  while '], 12921: ['      return ID ( ID + CONST , ID ) || ID ( ID + CONST , ID + ID [ ID ] ) ;', '  ID  undeclared '], 12922: ['\tID = CONST * ID -> ID ;', ' invalid operands to binary * '], 12923: ['\tID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 12924: ['    printf ( STRING , ID ( ID , ID , ID , ID ) ) ;', ' invalid use of void expression'], 12925: ['}', ' expected identifier or  (  before  }  token'], 12926: ['    printf ( STRING )', ' expected  ;  before  return '], 12927: ['         if ( ID == CONST && ) {', ' expected expression before  )  token'], 12928: ['    printf ( STRING )', ' expected  ;  before  return '], 12929: ['        for ( ID = ID , ID = ID - CONST ; ID >= CONST && ID >= CONST ; ID -- , ID -- ) {', '  ID  undeclared '], 12930: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 12931: ['        if ( ID [ ID ] >= ID ( ID - CONST ) ) {', ' called object  ID  is not a function or function pointer'], 12932: ['    ID ( CONST , ID - CONST , ID , ID ) ;', '  ID  undeclared '], 12933: ['int ID = CONST ;', ' redefinition of  ID '], 12934: ['    float ID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 12935: ['} printf ( STRING ID + ID ) ;', ' expected  )  before  ID '], 12936: ['\tprintf ( STRING , ID )', ' expected  ;  before  for '], 12937: ['                ID [ ID ] . ID = ID [ ID + CONST ] ;', ' incompatible types when assigning to type  int  from type  struct student '], 12938: ['    printf ( STRING , ID )', ' expected  ;  before  for '], 12939: ['    ID ( ID + CONST , ID - CONST ) ;', ' too few arguments to function  ID '], 12940: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 12941: ['  for ( ID = CONST ; ID < ID ; ID ++ )                         ', '  ID  undeclared '], 12942: ['    int * * ID = ( int * * ) malloc ( sizeof ( int * ) * ID ) ;', ' redeclaration of  ID  with no linkage'], 12943: ['\t   ID = ( ID [ ID ] + ID ) % CONST', ' expected  ;  before  printf '], 12944: ['      return CONST', ' expected  ;  before  return '], 12945: ['        if ( ( ID / CONST ) != = CONST )', ' expected expression before  =  token'], 12946: ['            ( ID [ ID ] [ ID ] ) = ID [ ID ] [ ID ] ;', ' subscripted value is neither array nor pointer nor vector'], 12947: ['        if ( ID [ ID ] == CHARNST || ID [ ID ] == CHART )', ' empty character constant'], 12948: ['\tfor ( ID = ID ; ID < ( ) ; ID ++ )', ' expected expression before  )  token'], 12949: ['   int ID , ID , ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 12950: ['\t    printf ( STRING , * ID + ID )', ' expected  ;  before  }  token'], 12951: ['        if ID == CONST printf ( STRING , ID ) ;', ' expected  (  before  ID '], 12952: ['\t    for ( ID = CONST ; ID <= ID , ID = ID + CONST )', ' expected  ;  before  )  token'], 12953: ['    ID = ID', ' expected  ;  before  return '], 12954: ['        printf ( STRING , ID [ ID ] + CONST )', ' expected  ;  before  }  token'], 12955: ['    for ( ID = CONST ; ID [ ID ] != CHART , ID ++ )', ' expected  ;  before  )  token'], 12956: ['    return ID ( ID + CONST , ID + ID [ ID ] ) ;', '  ID  undeclared '], 12957: ['    while ( ID [ ID ] != ID && ID < ID ) {', '  ID  undeclared '], 12958: ['# include < stdio.h >', ' expected identifier or  (  before  }  token'], 12959: ['\tif ( ID %= = CONST )', ' expected expression before  =  token'], 12960: ['   if ( ( ID - ID ) == CONST || ( ( ID - ID == ) CONST ) ) return ;', ' expected expression before  )  token'], 12961: ['\t        printf ( STRING , CHARST + ID + ID - CONST - CONST - CONST )', ' expected  ;  before  }  token'], 12962: ['    ID = * ;', ' expected expression before  ;  token'], 12963: ['    else if ( ( ( ID < CHARST ) || ( ID > CHARST && ID < CHARST ) || ( ID > CHARST ) ) && ID = ID - CONST )', ' lvalue required as left operand of assignment'], 12964: ['    printf ( STRING , int ( ID ) ) ;', ' expected expression before  int '], 12965: ['\tprintf ( STRING , )', ' expected expression before  )  token'], 12966: ['    for ( int ID = CONST ; < ID [ ID ] != CHART ; ID ++ )', ' expected expression before  <  token'], 12967: ['    for ( int ID = ; ID < ID ; ID ++ )', ' expected expression before  ;  token'], 12968: ['            printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 12969: ['\t        { printf ( STRING ) }', ' expected  ;  before  }  token'], 12970: ['    int ID =', ' expected expression before  return '], 12971: ['          return  CONST + ID ( ID , ++ ID , -- ID , ID ) ;', '  ID  undeclared '], 12972: ['    for ( ID = ID - CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 12973: ['\tprintf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 12974: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 12975: ['    char ID [ ] ;', ' array size missing in  ID '], 12976: ['    scanf ( STRING , & ID , % ID , % ID ) ;', ' expected expression before  %  token'], 12977: ['    for ( ID = CONST ; ID < ( * ID ) ; ID = ID + CONST ) {', ' invalid type argument of unary  *  '], 12978: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 12979: ['\t    for ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 12980: ['    ID = CONST / CONST * ID ( ID * ID - ( ID * ID ) ) ;', ' called object  ID  is not a function or function pointer'], 12981: ['  printf ( STRING , ID )', ' expected  ;  before  scanf '], 12982: ['    ID = ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) ( ID - ID ) ) ;', ' called object is not a function or function pointer'], 12983: ['    scanf = ( STRING , & ID -> ID ) ;', ' lvalue required as left operand of assignment'], 12984: ['}', ' expected identifier or  (  before  }  token'], 12985: ['    printf ( STRING , ID ( ID - CONST ) ) ;', '  ID  undeclared '], 12986: ['}', ' expected statement before  )  token'], 12987: ['\tscanf ( STRING , % ID [ ID ] ) ;', ' expected expression before  %  token'], 12988: ['    ID ( ( ( ( ID * ID ) - ( ID * ID ) ) != CONST ) && ( ( ( ID * ID ) - ( ID * ID ) ) != CONST ) )', ' expected  ;  before  {  token'], 12989: ['printf ( ID ) ;', ' incompatible type for argument 1 of  printf '], 12990: ['   return CONST ;', ' expected declaration or statement at end of input'], 12991: ['    int ID = ID ( ID . ID , ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 12992: ['     scanf ( STRING , & ID ) ;', '  ID  undeclared '], 12993: ['    for ( int ID = CONST ; ID < ID )', ' expected  ;  before  )  token'], 12994: ['\t    printf ( STRING )', ' expected  ;  before  for '], 12995: ['\t    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 12996: ['        ID = ID [ ID ]', ' expected  ;  before  }  token'], 12997: ['    ID ( ID , ID )', ' expected  ;  before  return '], 12998: ['    ID [ ID + CONST ] == CHART', ' expected  ;  before  printf '], 12999: ['\tscanf ( STRING , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 13000: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 13001: ['    ID ( ID ) ;', ' too few arguments to function  ID '], 13002: ['printf ( STRING , ID * ( ID * CONST + ID ) )', ' expected  ;  before  return '], 13003: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 13004: ['    printf ( STRING , ID = ) ;', ' expected expression before  )  token'], 13005: ['\t    printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 13006: ['printf ( STRING , ID [ ID + CONST ] )', ' expected  ;  before  for '], 13007: ['    scanf ( STRING , & ID , & ID , & ID , & ID , ) ;                    ', ' expected expression before  )  token'], 13008: ['        ID = ID ( ID ID , ID + CONST , ID ) ;', ' expected expression before  ID '], 13009: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 13010: ['   if ( CONST <= ID <= CONST || CONST <= ID <= CONST )', '  ID  undeclared '], 13011: ['        ID ( ID , ID = ID - CONST , ID [ ID + CONST ] , ID ) ;', '  ID  undeclared '], 13012: ['    for ( ID = CONST ; ID <= ID - CONST ; ID ++ )', '  ID  undeclared '], 13013: ['\t{ scanf ( STRING , ID , & * ID [ ID ] ) ; }', ' invalid type argument of unary  *  '], 13014: ['         ID - ID = ID ;', '  ID  undeclared '], 13015: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 13016: ['\tID = ID * ID * ID', ' expected  ;  before  printf '], 13017: ['\tprintf ( STRING , ID ( ID , CONST ) )', ' expected  ;  before  return '], 13018: ['        else if ( ID == CHARST )', '  else  without a previous  if '], 13019: ['    printf ( STRING , char [ ID ] [ ID ] ) ;', ' expected expression before  CHAR '], 13020: ['    for ( ID = CONST ; ( ID + ID ) <= ID , ; ID = ID + ID )', ' expected expression before  ;  token'], 13021: ['    int ID = CONST', ' expected  ,  or  ;  before  while '], 13022: ['            printf ( STRING , ID , ID )', ' expected  ;  before  printf '], 13023: ['char ID [ ] = { CHARST , CHARST , CHARST , CHARST , CHARST } ;', ' redeclaration of  ID  with no linkage'], 13024: ['          printf ( STRING ) ', ' expected  ;  before  }  token'], 13025: ['   if ( ID == CONST )', '  ID  undeclared '], 13026: ['    ID ( ID , ID )', ' expected  ;  before  return '], 13027: ['                return ID ( ID + CONST , ID - ID [ ID - CONST ] + ID [ ID ) ;', ' expected  ]  before  )  token'], 13028: ['    for ( ID = ID ; ID >= CONST ; = ID - CONST ) ', ' expected expression before  =  token'], 13029: ['}', ' expected declaration or statement at end of input'], 13030: ['   else ID ( ID + CONST , ID + CONST , ID + CONST )', ' expected  ;  before  }  token'], 13031: ['        while ( ID [ ID ] != CHART ID [ ID ] != CHART ) {', ' expected  )  before  ID '], 13032: ['printf ( STRING , ID * ID - CONST ID * ID ) ;', ' invalid suffix "a" on integer constant'], 13033: ['    if    ( ID * ID - ID * ID = CONST )', ' lvalue required as left operand of assignment'], 13034: ['        if ( ID -> ID == ID || ID -> ID > ID ) { ', "  ID  {aka  struct node } has no member named  ID  did you mean 'val'?"], 13035: ['scanf ( STRING , & ID ) ;', '  ID  undeclared '], 13036: ['     ID = ID ( ID [ ID ] , ID ) ;', '  ID  undeclared '], 13037: ['int main ( ) { printf ( STRING )', ' expected  ;  before  return '], 13038: ['    for ( ID = CONST ; ID < CONST ID - CONST ; ID ++ )', ' invalid suffix "n" on integer constant'], 13039: ['for\t( ID = ID + CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 13040: ['\tprintf ( STRING )', ' expected  ;  before  }  token'], 13041: ['    ID = ID', ' expected  ;  before  while '], 13042: ['       ID ( ID - CONST , ID , ID , ID )', ' expected  ;  before  ID '], 13043: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 13044: ['    return ID ( ID + CONST , ID ) || ID ( ID + CONST            , ID + ID [ ID ] )', ' expected  ;  before  }  token'], 13045: ['        scanf ( STRING , & ID [ ID ] & ID [ ID + CONST ] & ID [ ID + CONST ] ) ;', ' invalid operands to binary & '], 13046: ['        if ( ID [ ID ] == ID ) ID ++ ;', ' lvalue required as increment operand'], 13047: ['    if ( ID == ID ) {', '  ID  undeclared '], 13048: ['    printf ( STRING , ID [ ( ID - CONST ) / CONST ] )', ' expected  ;  before  for '], 13049: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 13050: ['    if ( ( ID * ( ID - ID ) - ID * ( ID - ID ) + ( ID * ID - ID * ID ) ) = CONST ) {', ' lvalue required as left operand of assignment'], 13051: ['           printf ( STRING , ID [ ID ] [ ID ] )', ' expected  ;  before  }  token'], 13052: ['        printf ( STRING )', ' expected  ;  before  }  token'], 13053: ['    scanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 13054: ['    else ( ( ID == CONST ) && ( ID [ CONST ] == CONST ) && ( ID [ CONST ] == CONST ) )', ' expected  ;  before  {  token'], 13055: ['             ID = ID - CONST', ' expected  ;  before  printf '], 13056: ['    else', '  else  without a previous  if '], 13057: ['             printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 13058: ['\t            printf ( STRING , ID [ ID - STRING ] ) ;', ' invalid operands to binary - '], 13059: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 13060: ['        printf ( STRING , ID )', ' expected  ;  before  break '], 13061: ['    printf ( STRING , ID ( CONST + ID * ID / CONST ) , ID , ID ) ;', ' called object  ID  is not a function or function pointer'], 13062: ['\tfor ( ID = CONST ; ID < ID ; ID = ID + CONST ) {', '  ID  undeclared '], 13063: ['         printf ( STRING )', ' expected  ;  before  printf '], 13064: ['                  ID = ID + CONST', ' expected  ;  before  }  token'], 13065: ['    if ( ID ( CONST , CONST , CONST ) )', ' too few arguments to function  ID '], 13066: ['    if ( ID == ID ! ! ID - ID == CONST )', ' expected  )  before  !  token'], 13067: ['\t int ID , ID , ID , ID , ID , ID ;', ' redeclaration of  ID  with no linkage'], 13068: ['printf ( STRING )', ' expected  ;  before  return '], 13069: ['    int ID = ID = CONST , ID = CONST ;', '  ID  undeclared '], 13070: ['    printf ( STRING , ) ; ', ' expected expression before  )  token'], 13071: ['    ID = ID ; ID = ID ;', '  ID  undeclared '], 13072: ['    for ( ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 13073: ['}', ' expected declaration or statement at end of input'], 13074: ['printf ( CHARST ID ID ID ID ID STRING ) ;', ' expected  )  before  ID '], 13075: ['    while ( )', ' expected expression before  )  token'], 13076: ['        ID [ ID ] . ID = ID [ ID ] . ID + ID [ ID ] . ID + ID [ ID ] . ID ;', '  struct rank  has no member named  ID ; did you mean  ID ?'], 13077: ['                    ID ( ID , ID , ID , ID ) ;', ' too many arguments to function  ID '], 13078: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 13079: ['}', ' expected declaration or statement at end of input'], 13080: ['         strncpy ( ID [ ID ] , ID + ID , ID - ID + CONST ) ;', '  ID  undeclared '], 13081: ['            ID ;', '  ID  undeclared '], 13082: ['\tint ID [ ] [ ] ;', ' array type has incomplete element type  int[] '], 13083: ['}', ' expected declaration or statement at end of input'], 13084: ['\tif ( ID == ID )', '  ID  undeclared '], 13085: ['    ID = ( CONST / CONST ) * ID * ( ( ID * ID ) - ( ID * ID ) )', ' expected  ;  before  printf '], 13086: ['\t    ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 13087: ['\t    ID = ID % CONST', ' expected  ;  before  }  token'], 13088: ['\t    printf ( STRING , ) ;', ' expected expression before  )  token'], 13089: ['    if ( ID == ID )  ', '  ID  undeclared '], 13090: ['\t    scanf ( STRING , & ID [ ID ] ) ;                        ', '  ID  undeclared '], 13091: ['}', ' expected declaration or statement at end of input'], 13092: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 13093: ['\tscanf ( STRING , & ID , & ID , & ID ) ;', '  ID  undeclared '], 13094: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 13095: ['\t    putchar ( ) ;', ' too few arguments to function  putchar '], 13096: ['    ID = ID ( ID ) ;                             ', ' too few arguments to function  ID '], 13097: ['    else if    ', ' expected  (  before  printf '], 13098: ['\t                if ( ID [ ID ] [ ID + CONST ] == CONST ) {', '  ID  undeclared '], 13099: ['}', ' expected declaration or statement at end of input'], 13100: ['               ID = ID', ' expected  ;  before  }  token'], 13101: ['            ID = ID + ID [ ID - CONST - ID ] [ abs ( ( ID - CONST ) ID - ID ) ] ;', ' expected  )  before  ID '], 13102: ['\treturn ID ;', '  ID  undeclared '], 13103: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 13104: ['           printf ( STRING ID ) ;', ' expected  )  before  ID '], 13105: ['    ID = ID ( ID [ ID ] [ ID ] , ID [ ID ] [ ID ] , ID [ ID ] [ ID ] ) ;', ' void value not ignored as it ought to be'], 13106: ['\t printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 13107: ['    for ( ID = CONST , ID < ID ; ID ++ ) {', ' expected  ;  before  )  token'], 13108: ['    for ( ID = CONST ; ID <= ID ; ID = ++ ) {', ' expected expression before  )  token'], 13109: ['\t { int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  for "], 13110: ['\tfor ( ID = ID + CONST ; ID < CONST ; ID ++ )', '  ID  undeclared '], 13111: ['    double ID = CONST ;', ' conflicting types for  ID '], 13112: ['\tID [ ] = getchar ( ) ;', ' expected expression before  ]  token'], 13113: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 13114: ['    printf ( STRING , ID , ) ;', ' expected expression before  )  token'], 13115: ['    printf ( STRING )', ' expected  ;  before  return '], 13116: ['\t        printf ( STRING )', ' expected  ;  before  }  token'], 13117: ['    { for ( ID = ID , ID <= ID ; ID = ID + CONST )', ' expected  ;  before  )  token'], 13118: ['    ID [ CONST ] = ID ;', '  ID  undeclared '], 13119: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 13120: ['    if ( ( ID [ ID ] - ID [ ID - CONST ] ) == ( ID [ ID ] ) - ( ID [ ID - CONST ] ) || ( ID [ ID ] ) - ( ID [ ID - CONST ] ) + ( ID [ ID ] ) - ( ID [ ID - CONST ] ) == CONST ) ) {', ' expected statement before  )  token'], 13121: ['    ID ( ID . ID , ID ) ;', '  ID  is a pointer; did you mean to use  -> ?'], 13122: ['void ID ( int ID ) {', ' redefinition of  ID '], 13123: ['    ID = ID ( ID , ID , ID ) ;', ' void value not ignored as it ought to be'], 13124: ['    float ID = CONST * ID * ID ;', ' redeclaration of  ID  with no linkage'], 13125: ['    ID ( ID , ID )', ' expected  ;  before  ID '], 13126: ['    printf ( STRING , ID , ID , ID ) ;  ', '  ID  undeclared '], 13127: ['             if ( ID > ID + ID ) && ( ID > ID + ID ) && ( ID > ID + ID ) ;', ' expected identifier before  (  token'], 13128: ['        else if ( ( ID [ ID + CONST ] ) != ID - ID + ID [ ID + CONST ] )', '  ID  undeclared '], 13129: ['    ID . ID = ( int * ) malloc ( ID * sizeof ( int ) ) ;', '  ID  undeclared '], 13130: ['        printf ( STRING )', ' expected  ;  before  }  token'], 13131: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 13132: ['\tfree ( * ( ID + ID ) ) ;', '  ID  undeclared '], 13133: ['     ID ( int ID ) ;', ' expected expression before  int '], 13134: ['\twhile ( ID [ ( ID - CONST ) ] != CHARNST ) ; {', ' empty character constant'], 13135: ['            else if ( ( ID * ID + ID * ID + ID * ID < CONST * ID * ID ) && ( ID * ID + ID * ID + ID * ID > * ID * ID ) )', ' invalid type argument of unary  *  '], 13136: ['    scanf ( STRING , & ID )', ' expected  ;  before  printf '], 13137: ['char ID ;', ' conflicting types for  ID '], 13138: ['\tfor ( ID = CONST ; ID !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 13139: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 13140: ['    ID = ( int * ) malloc ( sizeof ( int ) ) ; }', ' assignment to expression with array type'], 13141: ['}', ' expected  ; , identifier or  (  before  ID '], 13142: ['{\tprintf ( STRING , tolower ( ID ) ) } ;', ' expected  ;  before  }  token'], 13143: ['    printf ( STRING , ID )', ' expected  ;  before  if '], 13144: ['     printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 13145: ['        else if ( ID [ ID [ ID ] ] < ID [ ID + CONST ] && ID [ ID [ ID ] ] << ID [ ID - CONST ] )', '  else  without a previous  if '], 13146: ['       int ID , ID , ID , ID , ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  scanf "], 13147: ['}', ' expected declaration or statement at end of input'], 13148: ['     printf ( STRING , ID )', ' expected  ;  before  return '], 13149: ['\t    ID = putchar ( ) ;', ' too few arguments to function  putchar '], 13150: ['    for ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 13151: ['    for ( ID = CONST ; ID < strlen ( ) ; ID ++ )', ' too few arguments to function  strlen '], 13152: ['    printf ( STRING ID ( ID , ID ) + ID ( ID , ID ) + ID ( ID , ID ) + ID ( ID , ID ) ) ;', ' expected  )  before  ID '], 13153: ['    ID = ID * ID - CONST ID ;', ' invalid suffix "ac" on integer constant'], 13154: ['        int ID = CONST , ID = ID ;', '  ID  undeclared '], 13155: ['        else { ID = CONST ; }', ' assignment to expression with array type'], 13156: ['    else {', '  else  without a previous  if '], 13157: ['    scanf ( STRING , & , & ID , & ID ) ;', ' expected expression before  ,  token'], 13158: ['}', ' expected declaration or statement at end of input'], 13159: ['    if ( ID [ ID ] . ID . ID != ID )', '  list_entries[a].head  is a pointer; did you mean to use  -> ?'], 13160: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 13161: ['   printf ( STRING )', ' expected  ;  before  return '], 13162: ['printf ( STRING ID ) ;', ' expected  )  before  ID '], 13163: ['\t            if ( ID = > ID ) { printf ( STRING ) ; }', ' expected expression before  >  token'], 13164: ['\tprintf ( STRING , ID ( ID , ID ) )', ' expected  ;  before  return '], 13165: ['  ID = ID * CONST + ID', ' expected  ;  before  }  token'], 13166: ['    int ID = CONST ID - CONST ;', ' invalid suffix "n" on integer constant'], 13167: ['for ( ID = CONST ; ( ID <= CONST ) && ( ID [ ID ] != / CONST ) ; ID = ID + CONST )', ' expected expression before  ID  token'], 13168: ['  for ( ID == CONST && != ID ; ID <= ID ; ID = ID + CONST ) {', ' expected expression before  !=  token'], 13169: ['\tprintf ( STRING , float ID ) ;', ' expected expression before  float '], 13170: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 13171: ['\t        else ID [ ID ] ++', ' expected  ;  before  }  token'], 13172: ['\tint ID , ID = CONST ;', ' redeclaration of  ID  with no linkage'], 13173: ['    ID = ID ( ID , CONST , ID ) ;', ' too many arguments to function  ID '], 13174: ['    { ID = ID ( ID )', ' expected  ;  before  if '], 13175: ['\tID = ID * ( ID ^ CONST ) ;', ' invalid operands to binary ^ '], 13176: ['    else', '  else  without a previous  if '], 13177: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 13178: ['\tfor ( ID = CONST ; ID [ ID ] != CHART , ID ++ )', ' expected  ;  before  )  token'], 13179: ['        ID ( ID , ID )', ' expected  ;  before  printf '], 13180: ['        printf ( STRING , ID ) ;', '  ID  undeclared '], 13181: ['\t    else ( ID [ ID ] > ID [ ID ] ) {', ' expected  ;  before  {  token'], 13182: ['               ID [ ID ] = ID ; }', '  ID  undeclared '], 13183: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 13184: ['            continue :', ' expected  ;  before  :  token'], 13185: ['    printf ( STRING , ID ) ;', '  ID  undeclared '], 13186: ['\tID ( ID [ ] [ ID ] , ID [ ID ] [ ID ] , ID [ ID ] [ ID ] ) ;', ' expected expression before  ]  token'], 13187: ['    printf ( STRING , ID ) ', ' expected  ;  before  return '], 13188: ['        ID %= pow ( CONST , ID ) ;', ' invalid operands to binary % '], 13189: ['        printf ( STRING , ID [ ID ] ) , continue ;', ' expected expression before  continue '], 13190: ['        ID = ID ( ID ) ;', ' void value not ignored as it ought to be'], 13191: ['    ID ( ID , ID [ ] ) ;', ' expected expression before  ]  token'], 13192: ['\tID = ID ( ID [ ] , ID , ID [ ] , ID ) ;', ' expected expression before  ]  token'], 13193: ['    printf ( STRING , CONST )', ' expected  ;  before  return '], 13194: ['    } while ( ID != CONST )', ' expected  ;  before  return '], 13195: ['        scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 13196: ['scanf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 13197: ['        ID = ( float ) CONST / CONST * ID * ID                                              ', ' expected  ;  before  printf '], 13198: ['      printf ( STRING STRING ID , ID ) ;', ' expected  )  before  ID '], 13199: ['        ID ( ID , ID , ID + CONST )', ' expected  ;  before  }  token'], 13200: ['    for ( ID = CONST ; ( ( ID <= ID ) && ( ID << ID + ID ) ) = CONST ; ID ++ )', ' lvalue required as left operand of assignment'], 13201: ['}', ' expected declaration or statement at end of input'], 13202: ['\t    for ( ID = ID ; ID = > ( ID + CONST ) ; ID -- )', ' expected expression before  >  token'], 13203: ['    ID [ ID ] [ ID ] = CONST + ID ( ID [ ID - CONST ] [ ID ] , ID [ ID ] [ ID - CONST ] , ID [ ID - CONST ] [ ID - CONST ] ) ;', ' called object  ID  is not a function or function pointer'], 13204: ['    { ID = CONST ;', '  ID  undeclared '], 13205: ['                 for ( ID = ID - CONST ; ID >= ID - ID ; ID -- )', '  ID  undeclared '], 13206: ['void ID ( ID ID , ID ID ) ;                                                            ', ' unknown type name  ID ; did you mean  ID ?'], 13207: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 13208: ['}', ' expected declaration or statement at end of input'], 13209: ['        ID [ ID ] [ CONST ] = ID', ' expected  ;  before  ID '], 13210: ['    } int ID = ID + ID - ID * CONST ;', ' redeclaration of  ID  with no linkage'], 13211: ['            if ( ID = CONST || ID = ID || ID = CONST || ID = ID ) printf ( STRING , ID ) ;', ' lvalue required as left operand of assignment'], 13212: ['    if ( ID == CONST )', ' expected expression before  }  token'], 13213: ['        ID [ ID ] = ID - ID ;', '  ID  undeclared '], 13214: ['}', ' expected declaration or statement at end of input'], 13215: ['printf ( STRING )', ' expected  ;  before  return '], 13216: ['ID ( STRING , ID ) ;\t', '  ID  undeclared '], 13217: ['        ID = CONST', ' expected  ;  before  }  token'], 13218: ['    char ID [ CONST ] [ CONST ] = ;', ' expected expression before  ;  token'], 13219: ['        ID = CONST', ' expected  ;  before  for '], 13220: ['\tint ID = ID [ CONST ] ;', ' redeclaration of  ID  with no linkage'], 13221: ['      for ( ID = ID , ID >= CONST ; ID -- )', ' expected  ;  before  )  token'], 13222: ['    int ID , ID = CONST , ID , ID ;', '  ID  redeclared as different kind of symbol'], 13223: ['        for ( ID = CONST , ID < ID ; ID ++ , ID ++ )', ' expected  ;  before  )  token'], 13224: ['printf ( STRING , ID , ID , ID , ) ;', ' expected expression before  )  token'], 13225: ['\t        for ( ID = ; ID < ID ; ID ++ )', ' expected expression before  ;  token'], 13226: ['  for ( ID = CONST ; ID ++ ) {', ' expected  ;  before  )  token'], 13227: ['    ID = ID * ID - CONST * ID * ID', ' expected  ;  before  return '], 13228: ['    printf ( STRING % ID , ID , ( int ) ID ) ;', '  ID  undeclared '], 13229: ['                for ( int ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 13230: ['    scanf ( STRING , ID )', ' expected  ;  before  while '], 13231: ['    ID ( STRING )', ' expected  ;  before  }  token'], 13232: ['   if ( CHARST = < ID [ ID ] && ID [ ID ] <= CHARST ) { ID += CONST ; }', ' expected expression before  <  token'], 13233: ['printf ( STRING CONST ) ;', ' expected  )  before numeric constant'], 13234: ['    else if ( ( ID -> ID . ID >= ID . ID . ID ) && ( ID -> ID . ID <= ID -> ID . ID ) && ( ID -> ID . ID >= ID -> ID . ID ) && ( ID -> ID . ID <= ID -> ID . ID ) ) {', '  ID  is a pointer; did you mean to use  -> ?'], 13235: ['        ID ++', ' expected  ;  before  }  token'], 13236: ['\t    free ( * ID ) ;', ' incompatible type for argument 1 of  free '], 13237: ['\treturn CONST ;', ' expected declaration or statement at end of input'], 13238: ['\t        ID [ ID ] = ID [ ID - ID ]', ' expected  ;  before  printf '], 13239: ['                printf ( STRING , ID [ ID ] [ ID ] , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 13240: ['        int ID = CONST', ' expected  ,  or  ;  before  while '], 13241: ['            ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 13242: ['scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 13243: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 13244: ['\tfor ( ID = ID ; ID = < ID && ID <= ID ; ID -- ) {', ' expected expression before  <  token'], 13245: ['    for ( ID = CONST ; ID < CONST || ID = ID ; ID ++ )', ' lvalue required as left operand of assignment'], 13246: ['}', ' expected declaration or statement at end of input'], 13247: ['\tfor ( ID = CONST ; ID <= ID , ID ++ )', ' expected  ;  before  )  token'], 13248: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 13249: ['    ID = ID ;', '  ID  undeclared '], 13250: ['ID = CONST * CONST * CONST * CONST * CONST ;                                      printf ( STRING , ID ) ; printf ( STRING , ID ) ; return CONST ;', '  ID  undeclared '], 13251: ['\t ID ( ID , ID )', ' expected  ;  before  for '], 13252: ['    ID = ID - ID ; ID = ID - ID', ' expected  ;  before  }  token'], 13253: ['                    if ( ID [ CONST ] == ID [ CONST ] ) || ( ID [ ID - CONST ] == ID [ ID ] )', ' expected expression before  ||  token'], 13254: ['\tfor ( ID = CONST ; ID < CONST ; ID ++ ) printf ( STRING , ID [ ID ] , ) ;', ' expected expression before  )  token'], 13255: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 13256: ['        ID ( ID , ID + CONST , ID + CONST )', ' expected  ;  before  }  token'], 13257: ['int main ( ) { printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 13258: ['\t        printf ( STRING * ( * ( ID + ID ) + ID ) ) ;', ' invalid operands to binary * '], 13259: ['    scanf ( STRING , ID )', ' expected  ;  before  for '], 13260: ['printf ( "     ', ' missing terminating " character'], 13261: ['    scanf ( STRING , ID )', ' expected  ;  before  printf '], 13262: ['\t        if ( ID == CONST || ID = ID ) {', ' lvalue required as left operand of assignment'], 13263: ['    for ( ID = ID ; ID < ID + ID ; ID ++ ) {', '  ID  undeclared '], 13264: ['\t    printf ( STRING , ID , ID , ID , ) ;', ' expected expression before  )  token'], 13265: ['\tID = CONST * ID ( ( ID * ID ) - ( ID * ID ) ) ;', ' called object  ID  is not a function or function pointer'], 13266: ['        ID = ID + CONST printf ( STRING , ID [ ID ] ) ; ;', ' invalid suffix "printf" on integer constant'], 13267: ['\tif ( ID = CONST && ID = CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 13268: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 13269: ['    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 13270: ['    printf ( STRING ( ID + ID ) ) ;', ' called object is not a function or function pointer'], 13271: ['\tfor ( ID = CONST ; )', ' expected expression before  )  token'], 13272: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 13273: ['    printf ( STRING )', ' expected  ;  before  }  token'], 13274: ['    printf ( STRING , ID ( CONST ) )', ' expected  ;  before  return '], 13275: ['    if ( ID == ID ) printf ( STRING , ID )', ' expected  ;  before  else '], 13276: ['\tscanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 13277: ['            ID [ ID ] . ID = ID        ', ' expected  ;  before  }  token'], 13278: ['\t    printf ( STRING , ID ( ID [ ID ] , ID ) ) ;', ' too few arguments to function  ID '], 13279: ['    if ( ID != = ID )', ' expected expression before  =  token'], 13280: ['\t   if ( ( ID [ ID ] == ID || ID [ ID ] == ID ) && ( ID [ ID - CONST ] != ID && ID [ ID - CONST ] CONST != ID ) )', ' expected  )  before numeric constant'], 13281: [' scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 13282: ['if ( ID [ ID ] == CHART && )', ' expected expression before  )  token'], 13283: ['int ID = ID ^ CONST - CONST ID ;', ' invalid suffix "ac" on integer constant'], 13284: ['\tscanf ( STRING , ID ) ;    ', '  ID  undeclared '], 13285: ['    if ( ID [ CONST ] == ID ( ID , ID ) )', ' too many arguments to function  ID '], 13286: ['   ID = ID ( ID )', ' expected  ;  before  printf '], 13287: ['            ID ++', ' expected  ;  before  }  token'], 13288: ['    printf ( STRING , ID , ID , ID )', ' expected  ;  before  return '], 13289: ['}', ' expected declaration or statement at end of input'], 13290: ['            ID = ID', ' expected  ;  before  }  token'], 13291: ['    ID [ CONST ] = CONST = ID [ CONST ] = ID [ CONST ] = ID [ CONST ] = ID [ CONST ] = ID [ CONST ] = ID [ CONST ] ;', ' lvalue required as left operand of assignment'], 13292: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 13293: ['    ID = ID ( ( CONST + ( ID * ID / CONST ) ) ) ;', ' called object  ID  is not a function or function pointer'], 13294: ['# ID < ID . ID >', ' invalid preprocessing directive #inlcude; did you mean #include?'], 13295: ['    for ( ID = CONST ; ID < ID , ID ++ )', ' expected  ;  before  )  token'], 13296: ['\t} printf ( STRING , ID )', ' expected  ;  before  return '], 13297: ['\twhile ( ID [ ID ] != \\ CONST ) {', ' stray  \\  in program'], 13298: [' float ID = CONST / CONST * ID * ( ID * ID - ID * ID ) ;                              ', ' redeclaration of  ID  with no linkage'], 13299: ['            printf ( STRING , ID [ ID ] [ ID ] ) ;', '  ID  undeclared '], 13300: ['        case CONST : printf ( STRING ) : break ;', ' expected  ;  before  :  token'], 13301: ['    printf ( STRING )            ', ' expected  ;  before  return '], 13302: ['        if ( ID [ ID ] % CONST ) == CONST', ' expected expression before  ==  token'], 13303: ['        ID ++', ' expected  ;  before  }  token'], 13304: ['    double ID = CONST * CONST * CONST * CONST * CONST / CONST', ' expected  ,  or  ;  before  printf '], 13305: ['        ID = ID ( ID [ ID ] , ID , ID , ID )', ' expected  ;  before  ID '], 13306: ['printf ( STRING )', ' expected  ;  before  return '], 13307: ['printf ( STRING STRING )', ' expected  ;  before  return '], 13308: ['\tprintf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 13309: ['\tint ID [ ID ] , ID , ID ;', '  ID  redeclared as different kind of symbol'], 13310: ['    else ( ) {', ' expected expression before  )  token'], 13311: ['        for ( ID = ID + CONST ; ID <= CONST )', ' expected  ;  before  )  token'], 13312: ['  float  ID = CONST / CONST * ID ( ID * ID - ID * ID ) ;', ' called object  ID  is not a function or function pointer'], 13313: ['            ID ++', ' expected  ;  before  }  token'], 13314: ['    ID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 13315: ['    for ( ID = CONST , ID < ID ; ID = ID + CONST ) {', ' expected  ;  before  )  token'], 13316: ['        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 13317: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 13318: ['   int ID = CONST , ID [ ID ] ;', ' conflicting types for  ID '], 13319: ['        if ( ID [ ID ] == CONST ) return CONST ;', '  ID  undeclared '], 13320: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 13321: ['        if ( ID [ ID ] == CHART )', '  ID  undeclared '], 13322: ['    scanf ( , ) ;', ' expected expression before  ,  token'], 13323: ['  printf ( STRING , ID ) ;', '  ID  undeclared '], 13324: ['ID = CONST * ( cos ( ID ) ) ^ CONST - CONST * cos ( ID ) ;', ' invalid operands to binary ^ '], 13325: ['\tID = ID + ID                            ', ' expected  ;  before  }  token'], 13326: ['\tprintf ( STRING , ID ) ;', '  ID  undeclared '], 13327: ['    int ID , ID ;', '  ID  redeclared as different kind of symbol'], 13328: [' ID = ( int * ) malloc ( ID ( int ) * ID ) ;', ' expected expression before  int '], 13329: ['          printf ( STRING )', ' expected  ;  before  }  token'], 13330: ['\t    ID = ( ID + ( ID * ID ) )', ' expected  ;  before  if '], 13331: ['    if ( ID >> ( ID * ID ) )', ' invalid operands to binary >> '], 13332: ['\tprintf ( STRING , ID , ID ) ;', '  ID  undeclared '], 13333: ['        ID += CONST', ' expected  ;  before  ID '], 13334: ['    else { ID ( ID / ID ) ; ID ( ID % ID ) ; }', '  else  without a previous  if '], 13335: ['    ID ( ID [ ID ] [ ID ] , ID [ ID ] [ ID ] , ID [ ID ] [ ID ] )', ' expected  ;  before  printf '], 13336: ['    printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 13337: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 13338: ['    ID = strlen ( ID ) ;', '  ID  undeclared '], 13339: ['\t    ID % CONST = ID ;', ' lvalue required as left operand of assignment'], 13340: ['    scanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 13341: ['}', ' expected  ; , identifier or  (  before  int '], 13342: ['    if ( ID = ID && ID = ( ID + CONST ) ) {', ' lvalue required as left operand of assignment'], 13343: ['    ID ( ID , CONST , ID - CONST )', ' expected  ;  before  return '], 13344: ['\tID ( ID , ID )', ' expected  ;  before  printf '], 13345: ['     scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 13346: ['            break', ' expected  ;  before  }  token'], 13347: ['ID = CONST / CONST * ID * [ ( ID * ID ) - ( ID * ID ) ] ;', ' expected expression before  [  token'], 13348: ['else ( ID != ID != ID )', ' expected  ;  before  {  token'], 13349: ['               printf ( STRING , ID )', ' expected  ;  before  }  token'], 13350: ['    else', '  else  without a previous  if '], 13351: [' printf ( STRING . ) ;\t', ' expected identifier before  )  token'], 13352: ['    printf ( STRING )', ' expected  ;  before  return '], 13353: ['\tif ( )', ' expected expression before  )  token'], 13354: ['        else if ( ID == ( strlen ( ID ) - CONST ) && ID = ID ) {', ' lvalue required as left operand of assignment'], 13355: ['\t   printf ( STRING , ) ;', ' expected expression before  )  token'], 13356: ['\tif ( ID == CONST && ID != CHARNST ) {', ' empty character constant'], 13357: ['    printf ( STRING )', ' expected  ;  before  return '], 13358: ['printf ( STRING )', ' expected  ;  before  return '], 13359: [' printf ( STRING , ) ;', ' expected expression before  )  token'], 13360: ['          printf ( STRING ID [ ID + ID ] ) ;', ' expected  )  before  ID '], 13361: ['\t    if ( ID [ ID ] =\\ CONST )  break ;', ' stray  \\  in program'], 13362: ['        if ( ID == CONST )', ' expected expression before  else '], 13363: ['\twhile ( ID != CONST ) {', '  ID  undeclared '], 13364: ['\tID = CONST * ID * ID ^ CONST ;', ' invalid operands to binary ^ '], 13365: ['     printf ( STRING , ID )', ' expected  ;  before  return '], 13366: ['        ID ( ID - CONST , ID + CONST )', ' expected  ;  before  }  token'], 13367: ['printf ( STRING , ID , ID , ID , ID ) ;', '  ID  undeclared '], 13368: ['\t    { for ( int ID = CONST ; ID [ ID ] != CHART )', ' expected  ;  before  )  token'], 13369: ['   else ( ID = ID [ ID ] )', ' expected  ;  before  {  token'], 13370: ['    printf ( STRING . ID ) ;', ' request for member  ID  in something not a structure or union'], 13371: ['putchar [ ]', ' expected expression before  ]  token'], 13372: ['}', ' expected  ; , identifier or  (  before  struct '], 13373: ['\tscanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 13374: ['    if ( ( ID * ID ) = ( ID * ID ) ) ;', ' lvalue required as left operand of assignment'], 13375: ['    ID = ID / CONST ;', '  ID  undeclared '], 13376: ['\t    for ( int ID = ID ; ID = < ID + ID ; ID ++ ) {', ' expected expression before  <  token'], 13377: ['\tscanf ( STRING , ID , & ID , & ID , ID ) ;', '  ID  undeclared '], 13378: ['        ID = ID [ ID ]', ' expected  ;  before  ID '], 13379: ['    printf ( STRING ID ) ;', ' expected  )  before numeric constant'], 13380: ['   printf ( STRING , ID )', ' expected  ;  before  return '], 13381: ['  printf ( STRING , ID , ID )', ' expected  ;  before  return '], 13382: ['        scanf ( STRING & ID [ ID ] [ ID ] ) ;', ' invalid operands to binary & '], 13383: ['    for ( ID = CONST ; ID < ID ; ID ++ ) {', '  ID  undeclared '], 13384: ['    printf ( STRING )', ' expected  ;  before  return '], 13385: ['}', ' expected declaration or statement at end of input'], 13386: ['\t    scanf ( STRING , & ID [ ] ) ;', ' expected expression before  ]  token'], 13387: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 13388: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 13389: ['    ID = ( struct ID * ) malloc ID * sizeof ( struct ID * ) ;', ' expected  ;  before  ID '], 13390: ['    ID = ( ID * ) malloc ( sizeof ( ID * ID ) ) ;', ' expected  )  before  ID '], 13391: ['}', ' expected declaration or statement at end of input'], 13392: ['            printf ( STRING , ID )', ' expected  ;  before  }  token'], 13393: ['    while ( ID <= CONST ) { ID = ( ID / ID )', ' expected  ;  before  printf '], 13394: ['    scanf ( STRING , & ID )', ' expected  ;  before  ID '], 13395: ['    else', '  else  without a previous  if '], 13396: ['        ID = ID / CONST', ' expected  ;  before  }  token'], 13397: ['\t        ID [ ID ] = ID', ' expected  ;  before  }  token'], 13398: ['\t} while ( ID [ ID ] != ID )', ' expected  ;  before  return '], 13399: ['    scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 13400: ['        ID = ID + CONST', ' expected  ;  before  }  token'], 13401: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 13402: ['     printf ( ID ) ;', '  ID  undeclared '], 13403: [' if ( ID % CONST == CONST )               ', ' invalid operands to binary % '], 13404: ['\tif ( ID = > CONST && ID <= ID - CONST )', ' expected expression before  >  token'], 13405: ['\t{   ID [ ID ] = ID [ ID ] + CONST', ' expected  ;  before  }  token'], 13406: ['    int ID ; int ID , ID , ID ; int ID [ CONST ] ; int ID = CONST ; int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 13407: ['   ID ++ } }', ' expected  ;  before  }  token'], 13408: ['        ID ID ;', ' expected  ;  before  ID '], 13409: ['    if ( ID == CONST )', '  ID  undeclared '], 13410: ['\tscanf ( STRING , & )', ' expected expression before  )  token'], 13411: ['        scanf ( STRING , * ( ID + ID ) )', ' expected  ;  before  }  token'], 13412: ['   scanf ( STRING , & ID . ID , % ID . ID , & ID . ID ) ;', ' expected expression before  %  token'], 13413: ['\tID = if ( ID <= ID <= ( ID + CONST ) ) + if ( ID <= ID <= ( ID + CONST ) ) + if ( ID <= ID <= ( ID + CONST ) ) + if ( ID <= ID <= ( ID + CONST ) ) ;', ' expected expression before  if '], 13414: ['    ID = ( int * ) malloc ( ID * sizeof ( int ) ) ;', ' assignment to expression with array type'], 13415: ['\t        printf ( STRING , [ ID ] ) ;', ' expected expression before  [  token'], 13416: ['\t    while ( ID [ ID ] != CHARNST )', ' empty character constant'], 13417: ['        if ( ID [ ID ] == ID ) {', '  ID  undeclared '], 13418: ['}', ' expected declaration or statement at end of input'], 13419: ['struct ID * ID , ID * ID ;', " expected  = , ',',  ; ,  asm  or  __attribute__  before  *  token"], 13420: ['\tfor ( ID = ID ; ID < CONST ; ID ++ ) {', '  ID  undeclared '], 13421: ['  printf ( STRING )  ', ' expected  ;  before  return '], 13422: ['\tscanf ( STRING , & ID )', ' expected  ;  before  ID '], 13423: ['        printf ( STRING )', ' expected  ;  before  }  token'], 13424: ['\t      else { printf ( STRING , ID [ ID ] ) continue ; }', ' expected  ;  before  continue '], 13425: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 13426: ['       else ( ID == CONST )', ' expected  ;  before  {  token'], 13427: ['\treturn CONST ;', ' expected expression before  ,  token'], 13428: ['       ID = getchar ( ID ) ;', ' too many arguments to function  getchar '], 13429: ['\tprintf ( STRING )', ' expected  ;  before  }  token'], 13430: ['    printf ( STRING , ID ( CONST , CONST , ID ) ? STRING : STRING ) ;', ' too many arguments to function  ID '], 13431: ['   while ( ID [ ID ] =\\ CONST )', ' stray  \\  in program'], 13432: ['{  if ( ID [ ID ] == ID [ ID ] && ID = ID )', ' lvalue required as left operand of assignment'], 13433: ['    int ID , ID , ID , ID , ID [ CONST ] [ CONST ] , ID = CONST , ;', ' expected identifier or  (  before  ;  token'], 13434: ['     printf ( STRING )', ' expected  ;  before  }  token'], 13435: ['      if ( ID == ID ) ', '  ID  undeclared '], 13436: ['\tchar ID [ CONST ] = { ID , CHARHARRARCHARAR;', '  ID  undeclared '], 13437: ['    scanf ( STRING , & ID & ID ) ;                                 ', ' invalid operands to binary & '], 13438: ['\tID ( ID != ID ) {', ' expected  ;  before  {  token'], 13439: ['                ID = ID', ' expected  ;  before  ID '], 13440: ['    {   scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 13441: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 13442: ['\t        case CONST', ' expected  :  or  ...  before  printf '], 13443: ['              ID = ID -> ID ;', '  *curr  is a pointer; did you mean to use  -> ?'], 13444: ['                 ID = ID ( ID [ ID + CONST ] ) ; ', '  ID  undeclared '], 13445: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 13446: ['    if ( ID >= CHARST && ID <= CHARST ) printf ( STRING ) ;', '  ID  undeclared '], 13447: ['\tprintf ( STRING , ID ( ID , ID ) ) ;', ' invalid use of void expression'], 13448: ['    int ID = CONST ;', ' redeclaration of  ID  with no linkage'], 13449: ['        scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 13450: ['                printf ( STRING , ID )', ' expected  ;  before  }  token'], 13451: ['        for ( ID = CONST ; < ID ; ID = ID + CONST )', ' expected expression before  <  token'], 13452: ['        ID = CONST + ID + ( - CONST ) ID ;', ' expected  ;  before  ID '], 13453: ['\tID ( ID [ ] ) ;', ' expected expression before  ]  token'], 13454: ['ID ID * ID ;', ' unknown type name  ID '], 13455: ['    scanf ( STRING , % ID ) ;', ' expected expression before  %  token'], 13456: ['     if ( ID ! / CONST ) {', ' expected  )  before  !  token'], 13457: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  ID '], 13458: ['\tfor ( ID = CONST ; ID < ID && ( ID + CONST ) % CONST = CONST ; ID ++ ) {', ' lvalue required as left operand of assignment'], 13459: ['            ID = ID + ID [ ID ] ;', '  ID  undeclared '], 13460: ['    ID ( ID [ ] , ID ) ;', ' expected expression before  ]  token'], 13461: ['    if ( ID = ( ID * ID * ( ID - ID ) ) / ( ID * ID - ID * ID ) && ID = ( ID * ID * ( ID - ID ) ) / ( ID * ID - ID * ID ) ) {', ' lvalue required as left operand of assignment'], 13462: ['    printf ( STRING , )', ' expected expression before  )  token'], 13463: ['        printf ( STRING & ID [ ID - CONST ] ) ;', ' invalid operands to binary & '], 13464: ['    printf ( STRING )', ' expected  ;  before  return '], 13465: ['    else return ID * ID ( ID - CONST ) ;', ' too few arguments to function  ID '], 13466: ['\t    if ( ( ID [ ID ] ) <= CONST ) && ( CONST <= ( ID [ ID ] ) )', ' expected identifier before  (  token'], 13467: [' ID = ( char * ) malloc ( ID * sizeof ( char ) ) ;', ' invalid operands to binary * '], 13468: ['ID = ID + ID - ID * ;', ' expected expression before  ;  token'], 13469: ['        ID = ID [ ID ] + ID', ' expected  ;  before  }  token'], 13470: ['    while ( ID > CONST && ID < ID ) {', '  ID  undeclared '], 13471: ['# include < stdio.h >', ' expected identifier or  (  before  }  token'], 13472: ['        if ( ID [ ID + ID ] == ID [ ID ] ) {', '  ID  undeclared '], 13473: ['    printf ( STRING )', ' expected  ;  before  return '], 13474: ['        ID ID ;', ' expected  ;  before  ID '], 13475: ['    ID ( ID , CONST , ID - CONST ) ;', '  ID  undeclared '], 13476: ['        if ( ( CHARST <= ID [ ID ] && ID [ ID ] <= CHARST ) && ( CHARST <= ID [ ID ] ) && ID [ ID ] <= CHARST ) )', ' expected statement before  )  token'], 13477: ['    if ( ID >> CONST )', ' invalid operands to binary >> '], 13478: ['    printf ( STRING )', ' expected  ;  before  }  token'], 13479: ['\tfor ( ID = CONST ; ID < ID + CONST ; ID = ID + CONST ) { printf ( STRING , ID [ ID ] )', ' expected  ;  before  if '], 13480: ['    printf ( STRING , ID )', ' expected  ;  before  }  token'], 13481: ['    printf ( STRING , ID ( ID , ID ) ) ;', ' too few arguments to function  ID '], 13482: ['     printf ( STRING , ID )', ' expected  ;  before  return '], 13483: ['    else if ( ID != = ID  && ID == ID && ID == ID ) {', ' expected expression before  =  token'], 13484: ['\t\tprintf ( STRING , ID ) printf ( STRING , ID ) ;', ' expected  ;  before  printf '], 13485: ['    scanf ( STRING , % ID [ CONST ] ) ;', ' expected expression before  %  token'], 13486: ['     printf ( STRING , ID )', ' expected  ;  before  }  token'], 13487: ['               printf ( STRING , ID )', ' expected  ;  before  return '], 13488: ['        if ( ID [ ID ] == ID ) {', '  ID  undeclared '], 13489: ['    ID = ( ID - ID ) / ( ID * ID - ID * ID ) ;', '  ID  undeclared '], 13490: ['    scanf ( STRING , & ID . ID , & ID . ID )', ' expected  ;  before  if '], 13491: [' ID ( ID , ID - ID [ ID - CONST ] )   ', ' expected  ;  before  }  token'], 13492: ['    ID ( & ( ID + CONST ) , ID ) ;', ' lvalue required as unary  &  operand'], 13493: ['    printf ( STRING , , CONST / CONST * ID * ID * ID * ID , CONST * ID * ID * ID * ID ) ;', ' expected expression before  ,  token'], 13494: ['    if ( ( ID [ ID ] == CHARNST ) || ( ID == - CONST ) )', ' empty character constant'], 13495: [' } else ( ID = CONST , ID = CONST , ID = CONST , ID = CONST ) {', ' expected  ;  before  {  token'], 13496: [' }', ' expected identifier or  (  before  }  token'], 13497: ['printf ( ) ;', ' too few arguments to function  printf '], 13498: ['        for ( ID = ID - CONST ; ID >= ID - ID ) ID += ID [ ID ] ;', ' expected  ;  before  )  token'], 13499: ['    if ( ( ID % CONST == CONST && ID % CONST != CONST ) || ( ID % CONST == CONST && ID % CONST == CONST ) )', '  ID  undeclared '], 13500: ['    return ( * ID ) * ( int * ) ( * ID ) ;', ' invalid operands to binary * '], 13501: ['\t    ID [ ID ] = ID', ' expected  ;  before  }  token'], 13502: ['\t    scanf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 13503: ['\tint ID [ ID ] = { } ;', ' variable-sized object may not be initialized'], 13504: ['\telse if ( ( ID == CONST ) || ( ID == CONST ) )', '  ID  undeclared '], 13505: ['        for ( ID = ID ; ID > ID - ID ; ID -- )', '  ID  undeclared '], 13506: ['            goto ID ;', ' label  ID  used but not defined'], 13507: ['        ID = ID ( ID , ID [ ID ] ) ;', '  ID  undeclared '], 13508: ['\t    ID == ID', ' expected  ;  before  if '], 13509: ['\tgetchar ( ID ) ;', ' too many arguments to function  getchar '], 13510: ['            ID ( ID , ID , ID ) ;', ' too few arguments to function  ID '], 13511: ['\t        if ( ID == ID || ID = ID + CONST - ID )', ' lvalue required as left operand of assignment'], 13512: ['  float ID , ID , ID , ID , ID , ;                                   ', ' expected identifier or  (  before  ;  token'], 13513: ['\tprintf ( STRING , ID )', ' expected  ;  before  printf '], 13514: ['         ID = ID [ ID ]', ' expected  ;  before  }  token'], 13515: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 13516: ['}', ' expected declaration or statement at end of input'], 13517: ['    else if ( ! ( ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST || ID == CONST || ) )', ' expected expression before  )  token'], 13518: ['scanf ( STRING , CONST ID , & ID ) ;', ' invalid suffix "a" on integer constant'], 13519: ['    switch ( ID )', '  ID  undeclared '], 13520: ['    printf ( STRING )', ' expected  ;  before  return '], 13521: ['    printf ( STRING )', ' expected  ;  before  }  token'], 13522: ['        {  printf ( STRING ID ) ;', ' expected  )  before  ID '], 13523: ['\tfor ( ID = CONST ; ID [ ID - CONST ] !=\\ CONST ; ID ++ ) {', ' stray  \\  in program'], 13524: ['ID = CONST / CONST * ID * ID * ID * ID', ' expected  ;  before  printf '], 13525: ['    ID = CONST * CONST ^ CONST ;', ' invalid operands to binary ^ '], 13526: ['                        ID [ ID ] = ID [ ID ]', ' expected  ;  before  printf '], 13527: ['      ID = ID :', ' expected  ;  before  :  token'], 13528: ['    ID == ( CONST ) * ID * ID ^ CONST', ' expected  ;  before  printf '], 13529: ['\t    ID = ID [ ID ]', ' expected  ;  before  ID '], 13530: [' int ID = ID ( ID ) ;', ' too few arguments to function  ID '], 13531: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 13532: ['    printf ( STRING )', ' expected  ;  before  return '], 13533: ['         if ( ( ID [ ID ] [ ID ) == CONST ) {', ' expected  ]  before  )  token'], 13534: ['ID = ID ( CONST + ( ID * ID ) / CONST ) ;', ' called object  ID  is not a function or function pointer'], 13535: ['            ID - ID [ ID ] = CONST ;', ' lvalue required as left operand of assignment'], 13536: ['\t        ID = ID + CONST', ' expected  ;  before  }  token'], 13537: ['   ID [ ID ] = gets ( ID ) ;', '  ID  undeclared '], 13538: ['\t        printf ( STRING , ID [ STRING + CONST ] ) ;', ' array subscript is not an integer'], 13539: ['}', ' expected declaration or statement at end of input'], 13540: ['\t    ID = getchar ( )', ' expected  ;  before  ID '], 13541: ['                else if ( ID [ ID ] == ID ) {', ' invalid operands to binary == '], 13542: ['\tfor ( ID = CONST ; ID <= ID - CONST , ID ++ ) {', ' expected  ;  before  )  token'], 13543: ['\t    scanf ( STRING , & ID [ ID ] )    ', ' expected  ;  before  for '], 13544: ['   if ( ID = CONST || ID = CONST * ID + CONST ) {', ' lvalue required as left operand of assignment'], 13545: ['    for ( ID = CONST ; ID < CONST && ID [ ID ] = getchar ( ) != CHART ; ID ++ ) {', '  ID  undeclared '], 13546: ['         else return CONST', ' expected  ;  before  }  token'], 13547: ['    ID = ID / CONST    ', ' expected  ;  before  }  token'], 13548: ['    ID = CHARST', ' expected  ;  before  printf '], 13549: ['        scanf ( STRING , & ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 13550: ['    printf ( STRING . , ID , ID , ID , ID , ID ) ;', ' expected identifier before  ,  token'], 13551: ['scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 13552: ['    ID =', ' expected expression before  return '], 13553: ['\tID [ ] = CONST ;', ' expected expression before  ]  token'], 13554: ['\twhile ( ID [ ID ] != CHART ) { ID ++ ; ID ++ ; } )', ' expected statement before  )  token'], 13555: ['\t    ID = ID + ID ;', '  ID  undeclared '], 13556: ['\t        if ( ID = ( ID + CONST ) / CONST || ID = ( ID + CONST ) / CONST - ID )', ' lvalue required as left operand of assignment'], 13557: ['    scanf ( STRING , & ID )', ' expected  ;  before  while '], 13558: ['    printf ( STRING , ID ( CHARST , ID ) )', ' expected  ;  before  ID '], 13559: ['    int ID , ID = strlen ( ID ) ;', ' redeclaration of  ID  with no linkage'], 13560: ['    * ID = * ID - CONST', ' expected  ;  before  }  token'], 13561: ['            printf ( STRING , ID [ ID ] + ID - ID - CONST ) ;', '  ID  undeclared '], 13562: ['    scanf ( STRING , & ( * ID ) ) ;', ' invalid type argument of unary  *  '], 13563: ['  long  float ID , ID ;', ' both  long  and  float  in declaration specifiers'], 13564: ['            ID = ID', ' expected  ;  before  }  token'], 13565: ['if ( ID + ID = ID )', ' lvalue required as left operand of assignment'], 13566: ['\tif ( ID = ID & ID = ID ) {', ' lvalue required as left operand of assignment'], 13567: ['}', ' expected declaration or statement at end of input'], 13568: ['( ( ID [ ID ] > CHARST ) && ( ID [ ID ] < CHARST ) && ( ID [ ID + CONST ] > CHARST ) && ( ID [ ID + CONST ] < CHARST ) && ( ID [ ID + CONST ] > CHARST ) && ( ID [ ID + CONST ] < CHARST ) )', ' expected  ;  before  ID '], 13569: ['}', ' expected declaration or statement at end of input'], 13570: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 13571: ['ID = & ID , ID = * ID ;', ' invalid type argument of unary  *  '], 13572: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 13573: ['    for ( ID = CONST ; ID < ID . ID , ID ++ ) {', ' expected  ;  before  )  token'], 13574: ['            {   ID ++', ' expected  ;  before  ID '], 13575: ['\t            if ( ID == ID - CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 13576: ['    ID -> = ID', ' expected identifier before  =  token'], 13577: ['    ID -> ID = ID ;', '  ID  undeclared '], 13578: ['    if ( ID == ID && ID == ID ) {', '  ID  undeclared '], 13579: ['if ( ID + ID = CONST )', ' lvalue required as left operand of assignment'], 13580: ['for ( ID = CONST ; ID [ ID ] != CHART ; ID ++ )', '  ID  undeclared '], 13581: ['printf ( STRING )', ' expected  ;  before  return '], 13582: ['        ID [ ID - CONST ] = * ( ( ID - ID - CONST ) -> ID ) ;', ' invalid type argument of unary  *  '], 13583: ['    }', ' expected declaration or statement at end of input'], 13584: ['    float ID = CONST', ' expected  ,  or  ;  before  scanf '], 13585: ['\t    ID [ ID ] = ID [ ID ] + ID ;', '  ID  undeclared '], 13586: ['\t    if ( ID != ID [ CONST ] ) ID = CONST ;', '  ID  undeclared '], 13587: ['const double ID = CONST', ' expected  ,  or  ;  before  int '], 13588: ['    scanf ( STRING , & ID [ ID ] ) ;', '  ID  undeclared '], 13589: ['    if ( ID == ID )', '  ID  undeclared '], 13590: ['else printf ( STRING , ID , ID , ID , ID , - ID ) ;', '  else  without a previous  if '], 13591: ['        if ( ID != = CHARST )', ' expected expression before  =  token'], 13592: ['int ID', " expected  = , ',',  ; ,  asm  or  __attribute__  before  return "], 13593: ['    ID = sqrt ( ID * ID ) + sqrt ( ID * ID ) = sqrt ( ( ID * ID ) + ( ID * ID ) ) ;', ' lvalue required as left operand of assignment'], 13594: ['printf ( STRING )', ' expected  ;  before  return '], 13595: ['\tprintf', ' expected  ;  before  return '], 13596: ['printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 13597: ['\tID [ ID ] = CHART', ' expected  ;  before  printf '], 13598: ['\t        ID = ID ( ID , ID ) ;', ' void value not ignored as it ought to be'], 13599: ['          if ( ID [ ID ] == ID && ID [ ID + CONST ] == ID )', '  ID  undeclared '], 13600: ['    for ( ID = CONST ; ID <= ID ; ID ++ )', '  ID  undeclared '], 13601: ['    ID = ( ID + ID + ID ( ( ID * ID ) + ( ID * ID ) ) ) ;', '  ID  undeclared '], 13602: ['}', ' expected declaration or statement at end of input'], 13603: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 13604: ['    printf ( STRING CONST ) ;', ' expected  )  before numeric constant'], 13605: ['                ID = ID [ ID ] + ID [ ID ] - CHARST - CONST', ' expected  ;  before  }  token'], 13606: ['   ID = ID * ID - CONST * ID * ID ;                                                                                                             printf ( STRING , ID )', ' expected  ;  before  return '], 13607: ['            printf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 13608: ['}', ' expected declaration or statement at end of input'], 13609: ['    ID [ ID - CONST ] = CHART ;', '  ID  undeclared '], 13610: ['    scanf ( STRING , & ID & ID & ID ) ;', ' invalid operands to binary & '], 13611: ['\t( ID [ CONST ] ) printf ( STRING ) ; ', ' expected  ;  before  printf '], 13612: ['\telse if ( ( ID / ID ) == ( ID / ID ) ) {', '  else  without a previous  if '], 13613: ['            ID ++', ' expected  ;  before  }  token'], 13614: ['            ID = ID ( ID , ID , ID , ID + CONST ) ;', ' expected expression before  ID  token'], 13615: ['\tint ID = ID', ' expected  ,  or  ;  before  scanf '], 13616: [' else', '  else  without a previous  if '], 13617: ['    else if', ' expected  (  before  {  token'], 13618: ['    while ( ID <= ( ID / CONST ) ) {', '  ID  undeclared '], 13619: ['printf ( STRING ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 13620: ['          ID = ID + CONST', ' expected  ;  before  }  token'], 13621: ['\t    ID ++', ' expected  ;  before  }  token'], 13622: ['    return ID ;', '  ID  undeclared '], 13623: ['    printf ( ) ;', ' too few arguments to function  printf '], 13624: ['   for ( ID = CONST , ID <= ID ; ID ++ )', ' expected  ;  before  )  token'], 13625: ['printf ( STRING , ID ( ID , ID ) ) ;', ' too few arguments to function  ID '], 13626: ['    printf ( STRING )    ', ' expected  ;  before  }  token'], 13627: ['    int ID , ID = CONST ;', '  ID  redeclared as different kind of symbol'], 13628: ['\t    if ( ID == ID [ ID ] ) {', '  ID  undeclared '], 13629: ['    if ( ID = CONST && ID = CONST ) {', ' lvalue required as left operand of assignment'], 13630: ['    while ( )', ' expected expression before  )  token'], 13631: ['    static int ID = strlen ( ID ) ;', ' initializer element is not constant'], 13632: ['\tint ID = ( int ) [ ID ( CONST , ID ) - CONST ] ;', ' expected expression before  [  token'], 13633: ['            printf ( STRING . ID [ ID ] ) ;', ' request for member  ID  in something not a structure or union'], 13634: ['    printf ( STRING , ID )', ' expected  ;  before  for '], 13635: ['            ID ++ ;', '  ID  undeclared '], 13636: ['printf ( STRING ID ID STRING ) ;', ' expected  )  before  ID '], 13637: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 13638: ['    return ID ( ID [ ID - CONST ] ) ;', ' too few arguments to function  ID '], 13639: ['        printf ( STRING )', ' expected  ;  before  else '], 13640: ['printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 13641: ['\tID = ( ( float ) CONST / CONST ) * ID [ ( ID * ID - CONST ) + ( CONST - ID * ID ) ] ;', '  ID  undeclared '], 13642: ['               ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 13643: ['            ID [ ID ] = ID [ ID - CONST ]', ' expected  ;  before  }  token'], 13644: ['    scanf ( STRING , & ID , & ID & , ID ) ;                                                                         ', ' expected expression before  ,  token'], 13645: ['\tprintf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 13646: ['        if ( ID == ID - CONST && ID > * ( ID + ID - CONST ) )', '  ID  undeclared '], 13647: ['}', ' expected  ; , identifier or  (  before  struct '], 13648: ['        ID /= CONST', ' expected  ;  before  }  token'], 13649: ['printf ( STRING , ID )', ' expected  ;  before  return '], 13650: ['}', ' expected declaration or statement at end of input'], 13651: ['        ID [ ID ] . ID = ID', ' expected  ;  before  }  token'], 13652: ['        ID = ID * CONST + ID', ' expected  ;  before  }  token'], 13653: ['    else if ( ( ID == ID )  && ( ID != = ID ) ) {', ' expected expression before  =  token'], 13654: ['    scanf ( STRING , & ID , & ID )', ' expected  ;  before  for '], 13655: ['    printf ( STRING , ID * ID * ) ;', ' expected expression before  )  token'], 13656: ['\tprintf ( STRING , ID , ID ) ;', '  ID  undeclared '], 13657: ['\t            ID [ ID ] = ID', ' expected  ;  before  ID '], 13658: ['    if ( ID ( ID [ ] , ID ) == CONST ) {', ' expected expression before  ]  token'], 13659: ['     ID = STRING ;', '  ID  undeclared '], 13660: ['    for ( ID = CONST ; ID [ ID ] !=\\ CONST ; ID ++ )', ' stray  \\  in program'], 13661: ['     printf ( STRING , ID , ID , ID ) ;                     ', '  ID  undeclared '], 13662: ['        ID ++', ' expected  ;  before  }  token'], 13663: ['    if ( ( ID + ID ) > ID && ( ID + ID ) > ID && ( ID + ID ) > ID && ( ID - ) )', ' expected expression before  )  token'], 13664: ['                    ID ( ID [ ] [ ID ] , ID ) ;', ' expected expression before  ]  token'], 13665: ['        if ( ( ID % ID ) != = CONST ) {', ' expected expression before  =  token'], 13666: ['\tprintf ( STRING , ID )', ' expected  ;  before  return '], 13667: ['         ID [ ID ] = ID [ ID ]', ' expected  ;  before  }  token'], 13668: ['    if ( ( ID + ID ) ! > ID || ( ID + ID ) ! > ID || ( ID + ID ) ! > ID )', ' expected  )  before  !  token'], 13669: ['\tID = ID * ( ( ID * ID ) - ( ID * ID ) ) / CONST', ' expected  ;  before  printf '], 13670: ['scanf ( STRING , ID ID ID ID ) ;   ', ' expected  )  before  ID '], 13671: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 13672: ['\tscanf ( STRING , & ID ) ;', '  ID  undeclared '], 13673: ['        ID = ID [ ID ] / ID ;', '  ID  undeclared '], 13674: ['        if ( ID ( ID , ID , ID ) = ID )', ' lvalue required as left operand of assignment'], 13675: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 13676: ['\t    printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 13677: ['\tint ID , ID , ID , ;', ' expected identifier or  (  before  ;  token'], 13678: ['    else ( ( ID + ID < ID ) || ( ID + ID < ID ) || ( ID + ID < ID ) )', ' expected  ;  before  {  token'], 13679: ['}', ' expected declaration or statement at end of input'], 13680: ['        while ( ID >= CONST ID && ID >= ID - ID - CONST )', ' fixed-point types not supported for this target'], 13681: ['\t\tfor ( int ID = CONST ; ID < ( ID + ID - CONST ) )', ' expected  ;  before  )  token'], 13682: ['\tID = ID . ( ) ;', ' expected identifier before  (  token'], 13683: ['        ID = ID ;', '  ID  undeclared '], 13684: ['    printf ( STRING )', ' expected  ;  before  printf '], 13685: ['\tchar CHARST ;', ' expected identifier or  (  before  i '], 13686: ['\tif ( ID % CONST == CONST && ID % CONST = CONST && ID % CONST != CONST ) {', ' lvalue required as left operand of assignment'], 13687: ['   while ( ID != ID )', '  ID  undeclared '], 13688: ['    ID = ( STRING )', ' expected  ;  before  scanf '], 13689: ['    if ( ID == CONST && ID == CONST )', '  ID  undeclared '], 13690: ['    for ( ID = ID ; ID < ID ; ID ++ )', '  ID  undeclared '], 13691: ['    scanf ( STRING , ID , , , ID ) ;', ' expected expression before  ,  token'], 13692: ['int ID [ ] [ ] ;', ' array type has incomplete element type  int[] '], 13693: ['printf ( STRING )', ' expected  ;  before  return '], 13694: ['\t        printf ( STRING , ID )', ' expected  ;  before  }  token'], 13695: ['\tID = ID - CONST', ' expected  ;  before  for '], 13696: ['else if ( ID % CONST == CONST ) ', '  else  without a previous  if '], 13697: ['    char ID ; char ID [ ] ;', ' array size missing in  ID '], 13698: ['\twhile {', ' expected  (  before  {  token'], 13699: ['\tID ++', ' expected  ;  before  }  token'], 13700: ['        ID [ ID ] = int ( ID [ ID ] ) ;', ' expected expression before  int '], 13701: ['    for ( ID = CONST ; ID = < ID ; ID ++ )', ' expected expression before  <  token'], 13702: ['}', ' expected declaration or statement at end of input'], 13703: ['    ID = ( CONST / CONST ) * ID ( ID * ID - ID * ID ) ;', ' called object  ID  is not a function or function pointer'], 13704: ['        for ( ID = CONST , ID < ID ; ID ++ )', ' expected  ;  before  )  token'], 13705: ['    printf ( STRING , ID [ ID ] ) ;', ' subscripted value is neither array nor pointer nor vector'], 13706: ['    { printf ( STRING ) }', ' expected  ;  before  }  token'], 13707: ['\tprintf ( STRING , ID [ ID ] , ID ) ;', ' subscripted value is neither array nor pointer nor vector'], 13708: ['    if ( * ID ! ) {', ' expected  )  before  !  token'], 13709: ['    scanf ( STRING & ID , & ID ) ;                                     ', ' invalid operands to binary & '], 13710: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 13711: ['  float ID = CONST', ' expected  ,  or  ;  before  scanf '], 13712: ['    printf ( STRING , ( int ) ID [ CONST ] ) ;', '  ID  undeclared '], 13713: ['          ID [ ] = CHART ;', ' expected expression before  ]  token'], 13714: ['    else if ( ID . ID < ID . ID )', '  ID  {aka  struct birth_data } has no member named  ID ; did you mean  ID ?'], 13715: ['printf ( STRING , ID ) ;', ' expected declaration or statement at end of input'], 13716: ['    scanf ( STRING , ID )', ' expected  ;  before  for '], 13717: ['    printf ( STRING , ID , ID ) ;', '  ID  undeclared '], 13718: ['  else if ( CHARST >= CONST && CHARST CONST ) ;              ', ' expected  )  before numeric constant'], 13719: ['\t    printf ( STRING ID ) ;', ' expected  )  before  ID '], 13720: ['    printf ( STRING , ( int ) ID / CONST ) ;', '  ID  undeclared '], 13721: ['    return ID', ' expected  ;  before  }  token'], 13722: ['\t    int ID = ID % CONST ;', '  ID  undeclared '], 13723: ['    char ID [ CONST ] = CHARST ;', ' invalid initializer'], 13724: ['\t            ID ++', ' expected  ;  before  }  token'], 13725: ['    ID = if ( ID ( ID ) == ID ( ID ) ) {', ' expected expression before  if '], 13726: ['        ID ( ID , ID , ID + CONST )', ' expected  ;  before  }  token'], 13727: ['            printf ( STRING )', ' expected  ;  before  if '], 13728: ['scanf ( STRING & ID ) ;', ' invalid operands to binary & '], 13729: ['ID = getchar ( )', ' expected  ;  before  while '], 13730: ['                ID = ID ( ID , ID , ID ) ;', ' too many arguments to function  ID '], 13731: ['                printf ( STRING , ID , ID , ID , ID , ( ID [ ID ] [ ID ] ) * ( ID [ ID ] [ ID ] ) )', ' expected  ;  before  ID '], 13732: ['printf ( STRING , ID ID ) ;', ' expected  )  before  ID '], 13733: ['}', ' expected declaration or statement at end of input'], 13734: ['                ID [ ID ] == ID [ ID ] ? ID ++ : ID = ID + CONST ; ', ' lvalue required as left operand of assignment'], 13735: ['ID [ CONST ]', ' expected  ;  before  printf '], 13736: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 13737: ['\t    if ( ID [ ID ] == ID [ ID )', ' expected  ]  before  )  token'], 13738: ['\t        for ( ID = ID ; ID < ID && ; ID = ID + CONST )', ' expected expression before  ;  token'], 13739: ['printf ( STRING )', ' expected  ;  before  }  token'], 13740: ['\tfloat ID , ID ;', ' redeclaration of  ID  with no linkage'], 13741: ['      ID ( ID , ID , ID , ID ) ;', '  ID  undeclared '], 13742: ['            ID + = ID - ID + CONST ;', ' expected expression before  =  token'], 13743: ['        ID ID ( ID ) ;', ' unknown type name  ID '], 13744: ['    { printf ( STRING , * ( ID -> ID ) ) ;', ' invalid type argument of unary  *  '], 13745: ['}', ' expected declaration or statement at end of input'], 13746: ['    scanf ( STRING ID ) ;', ' expected  )  before  ID '], 13747: ['\t    if ( ( ID [ ID ] <= CHARST && ID [ ID ] >= CHARST ) && ( ID [ ID + CONST ] <= CHARST && ID [ ID + CONST ] >= CHARST ) && ( ID [ ID + CONST ] = ID [ ID + CONST ] - CHARST + CHARST ) ) { ID = ID + CONST }', ' expected  ;  before  }  token'], 13748: ['             { printf ( STRING , ID ) } ', ' expected  ;  before  }  token'], 13749: ['    float ID = ID * ( CONST + ( ID * ID ) / CONST ) ;', '  ID  undeclared '], 13750: ['  break ;', ' break statement not within loop or switch'], 13751: ['    printf ( STRING ID , ID , ID , ID ) ;', ' expected  )  before numeric constant'], 13752: ['\treturn CONST', ' expected  ;  before  }  token'], 13753: ['       { if ( * ( ID + ID ) > * ( ID ) + ID ) )', ' expected statement before  )  token'], 13754: ['        ID ++', ' expected  ;  before  }  token'], 13755: ['     printf ( STRING , ID ID ID ) ;', ' expected  )  before numeric constant'], 13756: ['}', ' expected declaration or statement at end of input'], 13757: ['            printf ( STRING )', ' expected  ;  before  }  token'], 13758: ['      ID ( ID , ID , CONST ) ;', ' too many arguments to function  ID '], 13759: ['    int ID = ID ( ID , ID , CONST , ID ) ;', '  ID  undeclared '], 13760: ['\tint ', ' expected identifier or  (  before  return '], 13761: ['# ID < ID . ID >', ' invalid preprocessing directive #iclude; did you mean #include?'], 13762: ['       ID [ ID ] = ID ;', '  ID  undeclared '], 13763: ['        ID . ID = ID ;', '  ID  is a pointer; did you mean to use  -> ?'], 13764: ['\t    ID = ID ( ID [ ID ] , ID [ ID + CONST ] )', ' expected  ;  before  }  token'], 13765: ['    ID = ID ( ID ( CONST , ID ) ) + ID ;', ' called object  ID  is not a function or function pointer'], 13766: ['                        for ( ; ID < ID + ID , ID ++ ) {', ' expected  ;  before  )  token'], 13767: ['   { return ID ; }', '  ID  undeclared '], 13768: ['\t    printf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 13769: ['\tprintf ( STRING )', ' expected  ;  before  return '], 13770: ['\tfor ( ID = CONST ; ID <= ; ID ++ )', ' expected expression before  ;  token'], 13771: [' scanf ( STRING , & ID , & ID , & ID , ) ;', ' expected expression before  )  token'], 13772: ['           ID = ID + ID [ ID ] [ ID ]', ' expected  ;  before  printf '], 13773: ['    printf ( STRING , ID ) ;    ', '  ID  undeclared '], 13774: ['\tif ( ID * ID = ID * ID ) { printf ( STRING ) ; }', ' lvalue required as left operand of assignment'], 13775: ['    scanf ( STRING ID ) ;', ' expected  )  before  ID '], 13776: ['\tprintf ( STRING , ID ( CONST ) )', ' expected  ;  before  return '], 13777: ['    ID = CONST', ' expected  ;  before  while '], 13778: ['       if ( ID [ ID ] > ID )', ' subscripted value is neither array nor pointer nor vector'], 13779: ['# include < stdlib.h >', ' expected identifier or  (  before  for '], 13780: ['         printf ( CONST STRING , ID [ ID ] ) ;', ' expected  )  before string constant'], 13781: ['        if ( ID % ID == CONST )', '  ID  undeclared '], 13782: ['           scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 13783: ['\tprintf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 13784: ['        scanf ( STRING , ID + ID ) ;', ' invalid operands to binary + '], 13785: ['\tfor', ' expected  (  before  return '], 13786: ['                * ( ID + ID ) = * ( ID + ID ) ;', ' invalid operands to binary * '], 13787: ['\tint ID ; double float ID , ID ;', ' two or more data types in declaration specifiers'], 13788: ['\t    printf ( STRING , ID + CHARST , ID [ ID ] )', ' expected  ;  before  }  token'], 13789: ['\tif ( )', ' expected expression before  )  token'], 13790: ['\t    printf ID [ ID ] ;', ' expected  ;  before  ID '], 13791: ['    ID ( CONST , CONST )', ' expected  ;  before  printf '], 13792: ['    {   if ( ID [ ID ] == ID [ ID ] )', '  ID  undeclared '], 13793: ['\tprintf ( STRING , ( CONST / CONST ) * ID * ID * ID * ID )', ' expected  ;  before  return '], 13794: ['\tif ( ID == ID ) printf ( STRING )', ' expected  ;  before  else '], 13795: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 13796: ['        printf ( STRING )', ' expected  ;  before  }  token'], 13797: ['}', ' expected  ; , identifier or  (  before  int '], 13798: ['\tID = CONST ;', '  ID  undeclared '], 13799: ['    printf ( STRING , ID )', ' expected  ;  before  ID '], 13800: ['\t        printf ( STRING ID [ ID ] [ ID ] ) ;', ' expected  )  before  ID '], 13801: ['               ID = ID + CONST', ' expected  ;  before  }  token'], 13802: ['    if ID + ID <= ID - CONST ;', ' expected  (  before  ID '], 13803: ['    ID ( ID , ID - CONST , ID ) }', ' expected  ;  before  }  token'], 13804: ['\tID ( ID )', ' expected  ;  before  return '], 13805: ['\t    for ( ID = ID + ID ; ID < ( ID - ID - CONST ID + CONST ) ; ID ++ )', ' invalid suffix "a" on integer constant'], 13806: ['for ( ID = ID ; ID <= ID ; ID = ID ) {', '  ID  undeclared '], 13807: ['        ID = ID ( ID ) ;                        ', '  ID  undeclared '], 13808: ['    printf ( STRING ID [ ID ] ) ;', ' expected  )  before  ID '], 13809: ['\t    printf ( STRING , ID [ ID / CONST ] , ID [ ID ] )', ' expected  ;  before  }  token'], 13810: ['}', ' expected declaration or statement at end of input'], 13811: ['            { if ( ( ID % ) != CONST )', ' expected expression before  )  token'], 13812: ['        {   ID = CONST', ' expected  ;  before  ID '], 13813: ['\tprintf ( STRING )', ' expected  ;  before  return '], 13814: ['\t                { ID = ID [ ID ]', ' expected  ;  before  ID '], 13815: ['    ID = CONST', ' expected  ;  before  while '], 13816: ['    ID = ID ( ( ID + CONST ) , ID , ID , ID )', ' expected  ;  before  if '], 13817: ['        ID ( ID , ID )', ' expected  ;  before  }  token'], 13818: ['    printf ( STRING ID / STRING ) ;', ' expected  )  before  ID '], 13819: ['    printf ( STRING ID ) ;', ' expected  )  before  ID '], 13820: ['\tscanf ( STRING , & ID & ID ) ;', ' invalid operands to binary & '], 13821: ['    ID = CONST * ID ^ CONST ;', ' invalid operands to binary ^ '], 13822: ['        for ( ID = ID ; )', ' expected expression before  )  token'], 13823: ['            printf ( STRING )', ' expected  ;  before  else '], 13824: [' ID = gets ( ) ;', ' too few arguments to function  gets '], 13825: ['    ID = ID ( CONST - ( ID / ID ) ) ;', ' called object  ID  is not a function or function pointer'], 13826: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 13827: ['\tprintf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 13828: ['    printf ( STRING , ID [ ] ) ;', ' expected expression before  ]  token'], 13829: ['}', ' expected  ; , identifier or  (  before  int '], 13830: ['\tprintf ( STRING , & ID ) ;', '  ID  undeclared '], 13831: ['int ID ( int ID , int ID ) ;', ' expected identifier or  (  before  {  token'], 13832: ['                free ( ID [ ID ] ) ;', '  ID  undeclared '], 13833: ['        if ( ( ID [ ID ] + ( CHAR- CHARST + CONST ) ) < ID ) {', '  ID  undeclared '], 13834: ['printf ( STRING , ID , , ID , ID , ID ) ;', ' expected expression before  ,  token'], 13835: ['    scanf ( STRING , & ID ) ;', '  ID  undeclared '], 13836: ['                for ( ID = CONST , ID <= ID ; ID ++ ) {', ' expected  ;  before  )  token'], 13837: ['    printf ( STRING ID STRING ) ;', ' expected  )  before  ID '], 13838: ['            else if', ' expected  (  before  printf '], 13839: ['    ID = ID + ( ID % ID == CONST ) ;', '  ID  undeclared '], 13840: ['            printf ( STRING , ID , ID )', ' expected  ;  before  ID '], 13841: ['\telse { printf ( STRING ) : }', ' expected  ;  before  :  token'], 13842: ['printf ( STRING , ID ( ID [ ] , ID [ ] ) ) ;', ' expected expression before  ]  token'], 13843: ['int ID , ID = CONST , ID , ;', ' expected identifier or  (  before  ;  token'], 13844: ['    printf ( STRING )', ' expected  ;  before  }  token'], 13845: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 13846: ['\tCONST = ID ( ID ) ;', ' lvalue required as left operand of assignment'], 13847: ['                printf ( STRING ID ) ;', ' expected  )  before  ID '], 13848: ['\tprintf ( STRING , ID ( CONST , CONST , CONST ) == CONST ? STRING : STRING ) ;', ' void value not ignored as it ought to be'], 13849: ['            printf ( STRING , ID [ CONST - ID ] )', ' expected  ;  before  }  token'], 13850: ['             printf ( STRING , ID ) }', ' expected  ;  before  }  token'], 13851: ['    float ID = CONST * ID * ID', ' expected  ,  or  ;  before  printf '], 13852: ['            {   ID [ ID ] = ID [ ID ]', ' expected  ;  before  printf '], 13853: ['\t    ID = ID / CONST', ' expected  ;  before  }  token'], 13854: ['printf ( STRING ID ID ID STRING ) ;', ' expected  )  before  ID '], 13855: ['\t        if ( ID < ID ) && ( ID [ ID ] > ID [ ID ] )', ' expected identifier before  (  token'], 13856: ['\tprintf ( STRING , ( CHARST - CHARST ) )', ' expected  ;  before  return '], 13857: ['    scanf ( STRING ID [ ID ] , ID [ ID ] , ID [ ID ] , ID [ ID ] , ID [ ID ] ) ;', ' expected  )  before  ID '], 13858: ['\t            ID = ID - CONST', ' expected  ;  before  }  token'], 13859: ['\t    if ( ID [ CONST ] == ID [ ID ] )', '  ID  undeclared '], 13860: ['           if ( ID ( ID ) = ID )', ' lvalue required as left operand of assignment'], 13861: ['        printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 13862: ['       for ( int ID = CONST ; ID <= ID , ID ++ ) {', ' expected  ;  before  )  token'], 13863: ['        for ( ID = CONST ; ID <= ID - CONST ; ID ++ )', '  ID  undeclared '], 13864: ['      printf ( STRING )', ' expected  ;  before  }  token'], 13865: [' double ID = ( CONST * ( ID ( ID , CONST ) ) ) - ( CONST * ( ID ) ) ;', '  ID  undeclared '], 13866: ['printf ( STRING )', ' expected  ;  before  return '], 13867: ['\t    ID = ID + CONST', ' expected  ;  before  }  token'], 13868: ['\t    ID ++', ' expected  ;  before  }  token'], 13869: ['    printf ( STRING )', ' expected  ;  before  return '], 13870: ['printf ( STRING , ID [ CONST ] == ID ) ;', '  ID  undeclared '], 13871: ['   else\tprintf ( STRING ) ;', '  else  without a previous  if '], 13872: ['   printf ( STRING , ++ CONST * CONST ) ; ', ' lvalue required as increment operand'], 13873: ['\tint ID [ ] [ ID ] ;', ' array size missing in  ID '], 13874: ['            scanf ( STRING , & ID )', ' expected  ;  before  if '], 13875: ['\t    printf ( STRING )', ' expected  ;  before  }  token'], 13876: [' ID ( ID ) ;', ' too few arguments to function  ID '], 13877: ['\tint ID , ID , ;', ' expected identifier or  (  before  ;  token'], 13878: ['    int ID = ID ( ID , ID , ID ) ;', ' void value not ignored as it ought to be'], 13879: ['    ( char ) ID = ID ;', ' lvalue required as left operand of assignment'], 13880: ['    if ( ID [ ID ] >= CHARST && ID [ ID ] <= CHARST ) && ( ID [ ID + CONST ] >= CHARST && ID [ ID + CONST ] <= CHARST ) && ( ID [ ID + CONST ] <= CONST && ID [ ID + CONST ] >= CONST ) { ID += CONST ; }', ' expected identifier before  (  token'], 13881: ['        else if ( ID [ ID ] != ID ) printf ( STRING , ID ) ;', '  ID  undeclared '], 13882: ['ID ( ID , ID , ID , ID )', ' expected  ;  before  return '], 13883: ['for ( int ID = CONST ; ID = < ID - ID ; ID ++ )', ' expected expression before  <  token'], 13884: ['void ID ( char ID ) ;', ' expected identifier or  (  before  {  token'], 13885: ['( ( ( ID -> ID . ID ) <= ( ID -> ID . ID ) ) && ( ( ID -> ID . ID ) <= ( ID -> ID . ID ) ) ) ||   ( ( ( ID -> ID . ID ) <= ( ID -> ID . ID ) ) && ( ( ID -> ID . ID ) <= ( ID -> ID . ID ) ) ) )', ' expected  ;  before  }  token'], 13886: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  return '], 13887: ['     else if ( ID [ ID ] != ID )', '  else  without a previous  if '], 13888: ['ID = ID / CONST', ' expected  ;  before  for '], 13889: ['    printf ( STRING ID , ID ) ;', ' expected  )  before  ID '], 13890: ['    printf ( STRING , ID )', ' expected  ;  before  return '], 13891: ['   if ( ID == ID )', '  ID  undeclared '], 13892: ['    float ID = ( CONST / CONST ) * ID * ID * ID * ID ) ;', ' expected  ,  or  ;  before  )  token'], 13893: ['    ID ;', '  ID  undeclared '], 13894: ['    for ( ID = CONST ; ID <= ; ID ++ )', ' expected expression before  ;  token'], 13895: ['\t    } printf ( STRING ) }', ' expected  ;  before  }  token'], 13896: ['\tprintf ( "\\ ID ID ID \\ ( % ID , % ID ) ID \\ ( % ID , % ID ) ID % ID . " ID , ID , ID , ID , ID ) ;', ' expected  )  before  ID '], 13897: ['        if ( ID = ID ( ID ) && ID = ID ( ID + CONST ) ) {', ' lvalue required as left operand of assignment'], 13898: ['    float ID = CONST * CONST ^ CONST ;', ' invalid operands to binary ^ '], 13899: ['        printf ( STRING )', ' expected  ;  before  if '], 13900: ['        ID ++', ' expected  ;  before  }  token'], 13901: ['    return ID ( ID + CONST , ID , ID + ID [ ] ) ;', ' expected expression before  ]  token'], 13902: ['    ID = ;', ' expected expression before  ;  token'], 13903: ['\t       printf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 13904: ['    if ( ID ( ID [ ] ) == CONST )', ' expected expression before  ]  token'], 13905: ['        if ( ID [ CONST ] == CONST && ID [ CONST ] != CONST )', ' expected expression before  }  token'], 13906: ['        ID = ID + ID . pow ( ID , ID ) ;', '  ID  undeclared '], 13907: ['    for ( ID = ; ID < ID ; ID ++ ) {', ' expected expression before  ;  token'], 13908: ['\t    ID = ID % CONST', ' expected  ;  before  switch '], 13909: ['         printf ( STRING )', ' expected  ;  before  return '], 13910: ['    ID = ( ID ( ID - CONST , ID ) + ID ( ID - CONST , ID - CONST ) )', ' expected  ;  before  ID '], 13911: ['        { ID = ID + CONST }', ' expected  ;  before  }  token'], 13912: ['    ID = ID ( ( ID - ID ) * ( ID - ID ) + ( ID - ID ) * ( ID - ID ) )', ' expected  ;  before  printf '], 13913: ['    for ( ID = CONST ; ID < ID ; ID ++ )', '  ID  undeclared '], 13914: [' ID ( ID < CONST )                                        ', ' expected  ;  before  printf '], 13915: ['}', ' expected declaration or statement at end of input'], 13916: ['    printf ( STRING , ID * CONST * CONST ) ;', '  ID  undeclared '], 13917: ['    printf ( STRING , ID ) ;                           ', '  ID  undeclared '], 13918: ['    scanf ( STRING & ID , & ID , & ID , & ID , & ID ) ;', ' invalid operands to binary & '], 13919: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 13920: ['\tprintf ( STRING', ' expected  )  before  ID '], 13921: ['        printf (\\ ID ) ;', ' stray  \\  in program'], 13922: ['    ID = strlen ( ID ) ;', '  ID  undeclared '], 13923: ['    scanf ( STRING , & ID , & ID , & ID , & ID , & ID )', ' expected  ;  before  if '], 13924: ['    else ( ID > ID && ID > ID && ID > ID ) {', ' expected  ;  before  {  token'], 13925: ['        printf ( STRING )', ' expected  ;  before  }  token'], 13926: ['        ID ( ID , ID , ID , ID + CONST ) ;', '  ID  undeclared '], 13927: ['\tprintf ( STRING )', ' expected  ;  before  return '], 13928: ['ID [ ID ] = ID [ ID ] ;', '  ID  undeclared '], 13929: ['\tscanf ( STRING & ID ) ;', ' invalid operands to binary & '], 13930: ['long long int ID ( long long int ID , ID )', ' unknown type name  ID '], 13931: ['    scanf ( STRING , & ID )', ' expected  ;  before  scanf '], 13932: ['\t    scanf ( STRING , & ID [ ID ] )', ' expected  ;  before  }  token'], 13933: ['\t     printf ( STRING , ID )', ' expected  ;  before  }  token'], 13934: ['    scanf ( STRING , & ID )', ' expected  ;  before  for '], 13935: ['scanf ( STRING , & ID )', ' expected  ;  before  ID '], 13936: ['        scanf ( STRING , ID [ ID ] )', ' expected  ;  before  }  token'], 13937: ['    printf ( STRING , CONST >= CONST )', ' expected  ;  before  }  token'], 13938: ['    printf ( STRING )', ' expected  ;  before  return '], 13939: ['    { if ( ID % ID = CONST )', ' lvalue required as left operand of assignment'], 13940: ['}', ' expected  ; , identifier or  (  before  int '], 13941: ['\t        else ( ID [ CONST ] >= ID [ CONST ] && ID [ CONST ] >= ID [ CONST ] && ID [ CONST ] >= ID [ CONST ] )', ' expected  ;  before  printf '], 13942: ['\tprintf ( STRING , ID [ CONST ] )', ' expected  ;  before  while '], 13943: ['}', ' expected declaration or statement at end of input'], 13944: ['if ( ( ID * ID ) ++ ( ID * ID ) == ( ID * ID ) )', ' lvalue required as increment operand'], 13945: ['}', ' expected declaration or statement at end of input'], 13946: ['    struct ID', ' expected identifier or  (  before  return '], 13947: ['\t  ID = ID / CONST ; ID = ID % CONST ; ID [ ID ] = ID [ ID ] ID [ ID ] ;', ' expected  ;  before  ID '], 13948: ['int main {', " expected  = , ',',  ; ,  asm  or  __attribute__  before  {  token"], 13949: ['    for ( int ID = CONST ; ID < ID ; ID ++ ) printf ( STRING , * ( ID ( ID , ID ) + ID ) ) ;', ' invalid type argument of unary  *  '], 13950: ['\tID ( ID [ ] [ CONST ] , ID , ID ) ;', ' expected expression before  ]  token'], 13951: ['   ID ( ID , CONST , ( ID - CONST ) )', ' expected  ;  before  for '], 13952: ['\t    scanf ( STRING & ID [ ID ] ) ;', ' invalid operands to binary & '], 13953: ['    printf ( STRING , ID [ CONST ] [ CONST ] )', ' expected  ;  before  return '], 13954: ['        printf ( STRING , ID [ CONST ] ) ;', '  ID  undeclared '], 13955: ['    {   printf ( STRING )', ' expected  ;  before  }  token'], 13956: ['\tgets ( STRING , ID ) ;', ' too many arguments to function  gets '], 13957: ['else ( ) {', ' expected expression before  )  token'], 13958: ['        if ( ID >= ID ) : break ;', ' expected expression before  :  token'], 13959: ['\tprintf ( STRING )', ' expected  ;  before  return '], 13960: ['    if ( ID == ID && ID == ID && ID == ID )', ' expected expression before  else '], 13961: ['\twhile ( ID != ID && ID < CONST ) {', '  ID  undeclared '], 13962: ['\tscanf ( STRING , & ID )', ' expected  ;  before  for '], 13963: ['if ( ID * ID = ID * ID )', ' lvalue required as left operand of assignment'], 13964: ['\t                ID = CONST', ' expected  ;  before  }  token'], 13965: ['int * * ID = int * * ID ( ID * sizeof ( int ) ) ;', ' expected expression before  int '], 13966: ['\tif ( ID , <= CONST )', ' expected expression before  <=  token'], 13967: ['            ID = ID', ' expected  ;  before  }  token'], 13968: ['        if ID > ID [ ID ] && ID [ ID ] > ID [ CONST ] {', ' expected  (  before  ID '], 13969: ['    scanf ( STRING ID [ CONST ] ) ;', ' expected  )  before  ID '], 13970: ['           printf ( STRING )', ' expected  ;  before  }  token'], 13971: ['        printf ( STRING , ID )', ' expected  ;  before  }  token'], 13972: ['        ID [ ID ] = ID ;', ' subscripted value is neither array nor pointer nor vector'], 13973: ['\t    for ( ID = ID ; ID > ID ; ID -- ) {', '  ID  undeclared '], 13974: ['    * ( * ( ID + ) + ID ) = * ( * ( ID + ID ) + CONST ) ;        ', ' expected expression before  )  token'], 13975: ['\t     ID ( ID , ID ) ? ID = CONST : ID = CONST ; }', ' lvalue required as left operand of assignment'], 13976: ['    scanf ( STRING , ID )', ' expected  ;  before  return '], 13977: ['        int ID = ID / CONST , ;', ' expected identifier or  (  before  ;  token'], 13978: ['    ID = ( ID * ) malloc ( CONST * sizeof ( ID ) ) ;', ' assignment to expression with array type'], 13979: ['\tif ( ID == ID ! && ID = ID || ID != ID && ID == ID || ID != ID && ID == ID )', ' expected  )  before  !  token'], 13980: ['}', ' expected declaration or statement at end of input'], 13981: ['\t       float ID = ( sqrt ( ID * ID * ID * ID * ) ) / CONST ;', ' expected expression before  )  token'], 13982: ['\tchar ID = getchar ( ID ) ;', ' too many arguments to function  getchar '], 13983: ['    int ID = ID ( ID , ID ) ;                     ', '  ID  undeclared '], 13984: ['}', ' expected declaration or statement at end of input'], 13985: ['\tfor ( ID = CONST ; ID != CHARNST ; ID ++ ) {', ' empty character constant'], 13986: ['\t        if ( ID == CONST ID )', ' invalid suffix "C" on integer constant'], 13987: ['    \\ return CONST ;', ' stray  \\  in program'], 13988: ['    printf ( STRING , ID , ID , ID , ) ;', ' expected expression before  )  token'], 13989: ['                ID = ID + CONST', ' expected  ;  before  ID '], 13990: ['    } printf ( STRING , ID )', ' expected  ;  before  return '], 13991: ['\t            ID [ ID + ID ] += ID [ ID ] ; ID ++', ' expected  ;  before  }  token'], 13992: ['\t    printf ( STRING , ID )', ' expected  ;  before  }  token'], 13993: ['    else ID = STRING ;', '  else  without a previous  if '], 13994: ['\tprintf ( STRING , CONST * ID * ID * ID ^ CONST ) ;', ' invalid operands to binary ^ '], 13995: ['\tfor ( ID = CONST ; ID <= ID ; ID ++ ) {', '  ID  undeclared '], 13996: ['\t        printf ( STRING , ID [ ID ] ) ;', '  ID  undeclared '], 13997: ['\tprintf ( STRING , CONST / CONST * ID ( ID * ID - ID * ID ) ) ;', ' called object  ID  is not a function or function pointer'], 13998: ['\t      case CONST : printf ( STRING )', ' expected  ;  before  case '], 13999: ['\t    ID = ID - ID', ' expected  ;  before  ID '], 14000: ['    & if ( ID == CONST ) {', ' expected expression before  if '], 14001: ['\tint ID = CONST', ' expected  ,  or  ;  before  while '], 14002: ['                {  printf ( STRING )', ' expected  ;  before  goto '], 14003: [' printf ( STRING . ) ;', ' expected identifier before  )  token'], 14004: ['    ( ID = CONST && ID = CONST && ID = CONST && ID = CONST ) && ( ID >= CONST ) ;', ' lvalue required as left operand of assignment'], 14005: ['            for ( ID = ID - CONST ; ID < ID , ID -- ) {', ' expected  ;  before  )  token'], 14006: ['\tID = CONST * ( ID ( ID ) ) ;', ' called object  ID  is not a function or function pointer'], 14007: ['float ID = CONST * ID * ID * ID * ID', ' expected  ,  or  ;  before  printf '], 14008: ['    int ID , ID = CONST , ID , ID , ID ;', '  ID  redeclared as different kind of symbol'], 14009: ['\t        printf ( STRING & ID [ CONST ] ) ;', ' invalid operands to binary & '], 14010: ['\tID = ID ( ID , ID ) ;', ' too few arguments to function  ID '], 14011: ['    int ID = CONST , ID ;', ' redeclaration of  ID  with no linkage'], 14012: ['    for ( ID = CONST && ID = CONST ; ID <= CONST && ID >= CONST ; ID ++ && ID -- )', ' lvalue required as left operand of assignment'], 14013: ['}', ' expected declaration or statement at end of input'], 14014: ['\tscanf ( STRING , ID )', ' expected  ;  before  while '], 14015: ['\tfor ( ID = CONST ; ID != ID ; ID ++ )', '  ID  undeclared ']}